{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/favicon1.ico","path":"favicon1.ico","modified":1,"renderable":0},{"_id":"source/humans.txt","path":"humans.txt","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/sitemap.xml","path":"sitemap.xml","modified":1,"renderable":0},{"_id":"source/favicon/apple-touch-icon.png","path":"favicon/apple-touch-icon.png","modified":1,"renderable":0},{"_id":"source/favicon/favicon-96x96.png","path":"favicon/favicon-96x96.png","modified":1,"renderable":0},{"_id":"source/favicon/favicon.ico","path":"favicon/favicon.ico","modified":1,"renderable":0},{"_id":"source/favicon/favicon.svg","path":"favicon/favicon.svg","modified":1,"renderable":0},{"_id":"source/favicon/site.webmanifest","path":"favicon/site.webmanifest","modified":1,"renderable":0},{"_id":"source/favicon/web-app-manifest-192x192.png","path":"favicon/web-app-manifest-192x192.png","modified":1,"renderable":0},{"_id":"source/favicon/web-app-manifest-512x512.png","path":"favicon/web-app-manifest-512x512.png","modified":1,"renderable":0},{"_id":"source/favicon1/android-chrome-192x192.png","path":"favicon1/android-chrome-192x192.png","modified":1,"renderable":0},{"_id":"source/favicon1/android-chrome-512x512.png","path":"favicon1/android-chrome-512x512.png","modified":1,"renderable":0},{"_id":"source/favicon1/apple-touch-icon.png","path":"favicon1/apple-touch-icon.png","modified":1,"renderable":0},{"_id":"source/favicon1/favicon-16x16.png","path":"favicon1/favicon-16x16.png","modified":1,"renderable":0},{"_id":"source/favicon1/favicon-32x32.png","path":"favicon1/favicon-32x32.png","modified":1,"renderable":0},{"_id":"source/favicon1/favicon-96x96.png","path":"favicon1/favicon-96x96.png","modified":1,"renderable":0},{"_id":"source/favicon1/favicon.svg","path":"favicon1/favicon.svg","modified":1,"renderable":0},{"_id":"source/favicon1/site.webmanifest","path":"favicon1/site.webmanifest","modified":1,"renderable":0},{"_id":"source/favicon1/web-app-manifest-192x192.png","path":"favicon1/web-app-manifest-192x192.png","modified":1,"renderable":0},{"_id":"source/favicon1/web-app-manifest-512x512.png","path":"favicon1/web-app-manifest-512x512.png","modified":1,"renderable":0},{"_id":"source/img/1023.png","path":"img/1023.png","modified":1,"renderable":0},{"_id":"source/img/108552684_p0.png","path":"img/108552684_p0.png","modified":1,"renderable":0},{"_id":"source/img/108552684_p2.png","path":"img/108552684_p2.png","modified":1,"renderable":0},{"_id":"source/img/108552684_p8.png","path":"img/108552684_p8.png","modified":1,"renderable":0},{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":0},{"_id":"source/img/avatar1.png","path":"img/avatar1.png","modified":1,"renderable":0},{"_id":"source/img/favicon1.png","path":"img/favicon1.png","modified":1,"renderable":0},{"_id":"source/img1/108552684_p0.png","path":"img1/108552684_p0.png","modified":1,"renderable":0},{"_id":"source/img1/108552684_p2.png","path":"img1/108552684_p2.png","modified":1,"renderable":0},{"_id":"source/img1/108552684_p8.png","path":"img1/108552684_p8.png","modified":1,"renderable":0},{"_id":"source/img1/avatar.png","path":"img1/avatar.png","modified":1,"renderable":0},{"_id":"source/install/bt6.init","path":"install/bt6.init","modified":1,"renderable":0},{"_id":"source/install/install.txt","path":"install/install.txt","modified":1,"renderable":0},{"_id":"source/install/installStable.sh","path":"install/installStable.sh","modified":1,"renderable":0},{"_id":"source/install/public.sh","path":"install/public.sh","modified":1,"renderable":0},{"_id":"source/install/src/LinuxPanelStable.zip","path":"install/src/LinuxPanelStable.zip","modified":1,"renderable":0},{"_id":"source/img/post/1/1.nodejs.png","path":"img/post/1/1.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/10.nodejs.png","path":"img/post/1/10.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/2.hexo.png","path":"img/post/1/2.hexo.png","modified":1,"renderable":0},{"_id":"source/img/post/1/3.nodejs.png","path":"img/post/1/3.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/4.nodejs.png","path":"img/post/1/4.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/5.nodejs.png","path":"img/post/1/5.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/6.nodejs.png","path":"img/post/1/6.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/7.nodejs.png","path":"img/post/1/7.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/8.nodejs.png","path":"img/post/1/8.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/1/9.nodejs.png","path":"img/post/1/9.nodejs.png","modified":1,"renderable":0},{"_id":"source/img/post/10/1.png","path":"img/post/10/1.png","modified":1,"renderable":0},{"_id":"source/img/post/10/10.png","path":"img/post/10/10.png","modified":1,"renderable":0},{"_id":"source/img/post/10/11.png","path":"img/post/10/11.png","modified":1,"renderable":0},{"_id":"source/img/post/10/12.png","path":"img/post/10/12.png","modified":1,"renderable":0},{"_id":"source/img/post/10/13.png","path":"img/post/10/13.png","modified":1,"renderable":0},{"_id":"source/img/post/10/2.png","path":"img/post/10/2.png","modified":1,"renderable":0},{"_id":"source/img/post/10/3.png","path":"img/post/10/3.png","modified":1,"renderable":0},{"_id":"source/img/post/10/4.png","path":"img/post/10/4.png","modified":1,"renderable":0},{"_id":"source/img/post/10/5.png","path":"img/post/10/5.png","modified":1,"renderable":0},{"_id":"source/img/post/10/6.png","path":"img/post/10/6.png","modified":1,"renderable":0},{"_id":"source/img/post/10/7.png","path":"img/post/10/7.png","modified":1,"renderable":0},{"_id":"source/img/post/10/8.png","path":"img/post/10/8.png","modified":1,"renderable":0},{"_id":"source/img/post/10/9.png","path":"img/post/10/9.png","modified":1,"renderable":0},{"_id":"source/img/post/11/1.png","path":"img/post/11/1.png","modified":1,"renderable":0},{"_id":"source/img/post/11/2.png","path":"img/post/11/2.png","modified":1,"renderable":0},{"_id":"source/img/post/11/3.jpg","path":"img/post/11/3.jpg","modified":1,"renderable":0},{"_id":"source/img/post/11/4.png","path":"img/post/11/4.png","modified":1,"renderable":0},{"_id":"source/img/post/2/1.png","path":"img/post/2/1.png","modified":1,"renderable":0},{"_id":"source/img/post/2/2.png","path":"img/post/2/2.png","modified":1,"renderable":0},{"_id":"source/img/post/2/3.png","path":"img/post/2/3.png","modified":1,"renderable":0},{"_id":"source/img/post/2/4.png","path":"img/post/2/4.png","modified":1,"renderable":0},{"_id":"source/img/post/5/1.png","path":"img/post/5/1.png","modified":1,"renderable":0},{"_id":"source/img/post/5/2.png","path":"img/post/5/2.png","modified":1,"renderable":0},{"_id":"source/img/post/6/1.png","path":"img/post/6/1.png","modified":1,"renderable":0},{"_id":"source/img/post/6/2.png","path":"img/post/6/2.png","modified":1,"renderable":0},{"_id":"source/img/post/6/3.png","path":"img/post/6/3.png","modified":1,"renderable":0},{"_id":"source/img/post/6/4.png","path":"img/post/6/4.png","modified":1,"renderable":0},{"_id":"source/img/post/6/5.png","path":"img/post/6/5.png","modified":1,"renderable":0},{"_id":"source/img/post/6/6.png","path":"img/post/6/6.png","modified":1,"renderable":0},{"_id":"source/img/post/7/1.png","path":"img/post/7/1.png","modified":1,"renderable":0},{"_id":"source/img/post/7/10.png","path":"img/post/7/10.png","modified":1,"renderable":0},{"_id":"source/img/post/7/11.png","path":"img/post/7/11.png","modified":1,"renderable":0},{"_id":"source/img/post/7/12.png","path":"img/post/7/12.png","modified":1,"renderable":0},{"_id":"source/img/post/7/13.png","path":"img/post/7/13.png","modified":1,"renderable":0},{"_id":"source/img/post/7/14.png","path":"img/post/7/14.png","modified":1,"renderable":0},{"_id":"source/img/post/7/15.png","path":"img/post/7/15.png","modified":1,"renderable":0},{"_id":"source/img/post/7/16.png","path":"img/post/7/16.png","modified":1,"renderable":0},{"_id":"source/img/post/7/2.png","path":"img/post/7/2.png","modified":1,"renderable":0},{"_id":"source/img/post/7/3.png","path":"img/post/7/3.png","modified":1,"renderable":0},{"_id":"source/img/post/7/4.png","path":"img/post/7/4.png","modified":1,"renderable":0},{"_id":"source/img/post/7/5.png","path":"img/post/7/5.png","modified":1,"renderable":0},{"_id":"source/img/post/7/6.png","path":"img/post/7/6.png","modified":1,"renderable":0},{"_id":"source/img/post/7/7.png","path":"img/post/7/7.png","modified":1,"renderable":0},{"_id":"source/img/post/7/8.png","path":"img/post/7/8.png","modified":1,"renderable":0},{"_id":"source/img/post/7/9.png","path":"img/post/7/9.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_config.yml","hash":"c189c30f24f9a6bcb2d9007079fd6e8cb154aca4","modified":1757709588596},{"_id":"source/favicon.ico","hash":"09e569ceb35807b7d7e8bae48a7c06e71f94a3b9","modified":1757396164100},{"_id":"source/humans.txt","hash":"e013c565acf74761af7133bfb8cb1b5b453a1f12","modified":1757396164148},{"_id":"source/favicon1.ico","hash":"5488d91a916ae172bd4349d4a9789e1737835765","modified":1757396164140},{"_id":"source/robots.txt","hash":"1d9e49ae274ce7e22649bbab712d196babd18c73","modified":1757396164664},{"_id":"source/sitemap.xml","hash":"fb98d53fabfca337120d60d1a36fcd75c6e3088e","modified":1757709588596},{"_id":"source/_data/link.yml","hash":"6b6b324c4cd0f342104581254223a879e75e501f","modified":1757396164096},{"_id":"source/_data/shuoshuo.yml","hash":"0cbd71277151948d9ae478ff4193086a4a7fc6cc","modified":1757396164096},{"_id":"source/_posts/10.使用AllinSSL自动续签雷池WAF证书.md","hash":"efecfae3d6c3024e2c84ef341beba17387c03982","modified":1757396164096},{"_id":"source/_posts/12.彻底解决Ubuntu的DNS问题.md","hash":"f73d15151c0ef3615ea026c5f908065c334fb671","modified":1757706682448},{"_id":"source/_posts/11.Marix+Synapse部署教程.md","hash":"1b2e790762fb9536deb986aced6944b7450777fd","modified":1757706682448},{"_id":"source/_posts/2.Kali2024.4安装qq.md","hash":"290e750fed85e7885273390629fb69b88216954a","modified":1757396164100},{"_id":"source/_posts/3.写一个deepseek.md","hash":"548f80b95298065497281b8742358aed221bb1a6","modified":1757396164100},{"_id":"source/_posts/4.解决无rel标签.md","hash":"ed6ac391384b0f20d24e9220804bad8e8d1773cb","modified":1757396164100},{"_id":"source/_posts/6.Ubuntu修改各种东西.md","hash":"1cd138d8435286fb851ecc67c62431d36b89f6e3","modified":1757396164100},{"_id":"source/_posts/5.永久链接优化.md","hash":"c9ae5e713376cce186009811c4db6996228d6d01","modified":1757396164100},{"_id":"source/_posts/7.利用CDN请求头获取源IP.md","hash":"c6aa3483b95e1e6e3c214ca83b8acf5efc070a7f","modified":1757396164100},{"_id":"source/_posts/8.安装雷池WAF-LTS版本.md","hash":"4b27fc93a3bba41049af4de6c412428c7118a8b1","modified":1757396164100},{"_id":"source/_posts/9.证书自签.md","hash":"396ca2e8c4e31de38db3ecab29fc18b5d73be15b","modified":1757396164100},{"_id":"source/categories/index.md","hash":"6f4438d4905662c0d06ffa07abae904445827774","modified":1757396164100},{"_id":"source/_posts/1.安装Hexo+Butterfly.md","hash":"e8ae45d75904cc1e2702b411e08e16d38a4c4b84","modified":1757396164096},{"_id":"source/css/custom.css","hash":"aa640ef8f75af8de30170f5090b6bba5c83d2df2","modified":1757396164100},{"_id":"source/favicon/favicon.ico","hash":"9160120e691007aeeb32746f24bb3cf1d39290c7","modified":1757396164100},{"_id":"source/favicon/favicon-96x96.png","hash":"55d08780e7fca945719dedcbee76ca99a635b2d5","modified":1757396164100},{"_id":"source/favicon/site.webmanifest","hash":"dca24343c9b7d4206fb6b1494e1f322049b40139","modified":1757396164140},{"_id":"source/favicon/apple-touch-icon.png","hash":"1da5296396311c94193aafa72f3054e13dfed750","modified":1757396164100},{"_id":"source/favicon1/android-chrome-192x192.png","hash":"f95008a444fe4495d95ca210f80fd4ea4567d23e","modified":1757396164140},{"_id":"source/favicon1/favicon-16x16.png","hash":"50f32600e1540962d37e1a5cd2c8f1614f5318fa","modified":1757396164144},{"_id":"source/favicon1/favicon-32x32.png","hash":"9b7a8780bb8b1fee48b9cad71856d629e1d35353","modified":1757396164144},{"_id":"source/favicon1/favicon-96x96.png","hash":"b0b8ee8a599e423c0e0c381e59540950e88373b0","modified":1757396164144},{"_id":"source/favicon1/apple-touch-icon.png","hash":"495cde4c4b056f18ae4315592df9ba2c9415710a","modified":1757396164144},{"_id":"source/favicon1/site.webmanifest","hash":"65da8b167e1b3928c7d3b3d55e18de98b870dcc0","modified":1757396164144},{"_id":"source/favicon1/web-app-manifest-192x192.png","hash":"41090481f2347b91ac13a10350fb4f53351a8ea3","modified":1757396164144},{"_id":"source/img/avatar1.png","hash":"505cd8a9d3a8105375b372a485113437f20736fb","modified":1757396164164},{"_id":"source/img/avatar.png","hash":"8ac174879309e3b16f6943e55484fd32d430ed62","modified":1757396164164},{"_id":"source/install/install.txt","hash":"7862460ad4f05d4772404db9689548948e7587c5","modified":1757396164220},{"_id":"source/img/favicon1.png","hash":"6e2536ab80e66e107bf1783aa3c3c09e515872d7","modified":1757396164164},{"_id":"source/install/installStable.sh","hash":"33738e6cecd0ef08846fc0727de1575bfa9b4da6","modified":1757396164220},{"_id":"source/install/public.sh","hash":"b0109f8b186eb02a5f3ecb8bba06ba22bdeec63f","modified":1757396164220},{"_id":"source/license/index.md","hash":"a9e73f9ca806e2162007c34e919d72dcdef92ccf","modified":1757396164664},{"_id":"source/shuoshuo/index.md","hash":"d287606087e32384b0a4bd5fa04b3021bd8557fa","modified":1757396164668},{"_id":"source/link/index.md","hash":"57895ddded8dc21422c6a3a8ae65cdaadbbedc0b","modified":1757396164664},{"_id":"source/tags/index.md","hash":"066f5fa0795e2a139ff31b318150ae896cd7e2b2","modified":1757396164668},{"_id":"source/install/bt6.init","hash":"605d42a1578890336cb398ef162f26f9ae7168c1","modified":1757396164220},{"_id":"source/img/post/1/10.nodejs.png","hash":"c01db6f65be4fc2abcb4dd9129de94c63ea37359","modified":1757396164168},{"_id":"source/img/post/1/1.nodejs.png","hash":"72c6f4d3973b5053e5c2c65207197951661790c1","modified":1757396164168},{"_id":"source/img/post/1/4.nodejs.png","hash":"e1717f5ae1f1337f6560a8f7e2d55fd6a9234ca2","modified":1757396164168},{"_id":"source/img/post/1/5.nodejs.png","hash":"30d0f392417b75ad5e0399c197d7c0cf2ade12b8","modified":1757396164168},{"_id":"source/img/post/1/6.nodejs.png","hash":"3bac632730d3160fb0b91cd3670d5c8917ebd17c","modified":1757396164168},{"_id":"source/img/post/1/7.nodejs.png","hash":"146aba8ed0b38a68377f88b8cb3f516942139956","modified":1757396164168},{"_id":"source/img/post/1/8.nodejs.png","hash":"4a8f4ac6566885b6d2418d676be02b2fb34a098c","modified":1757396164168},{"_id":"source/img/post/1/9.nodejs.png","hash":"56e7395cfca3dce914ce361170e9529251ec51a3","modified":1757396164168},{"_id":"source/install/userInfo.json","hash":"e02670a3994e90111b3be788d28e8230225ad62d","modified":1757396164664},{"_id":"source/img/post/1/3.nodejs.png","hash":"67e36415d4e4dfa76d8aa32440d28feb41e41aaf","modified":1757396164168},{"_id":"source/img/post/10/10.png","hash":"fcafcad7bbd661f9382aa48bc0c50352548fcb8a","modified":1757396164168},{"_id":"source/img/post/10/11.png","hash":"45e128b6d3ecb61d7d08620815f57e51cd708ca4","modified":1757396164168},{"_id":"source/img/post/10/12.png","hash":"806f6aa05fabedb94383584264c40e52217a1332","modified":1757396164168},{"_id":"source/img/post/10/3.png","hash":"4f631f964c7b5e191041884fa206d0f95e8a4ab9","modified":1757396164172},{"_id":"source/img/post/10/13.png","hash":"fbd76d2b1b71c4c736f91621004965402c5cabd8","modified":1757396164172},{"_id":"source/img/post/10/5.png","hash":"dce7d355e4b09d3961ac9114c62ec09dc70bb6d9","modified":1757396164172},{"_id":"source/img/post/10/4.png","hash":"697cef5628211b1194b3571856e8aef3f414cc71","modified":1757396164172},{"_id":"source/img/post/10/2.png","hash":"7e255973ae68905a16f1a44da4c3d122ce7c7030","modified":1757396164172},{"_id":"source/img/post/10/7.png","hash":"ca7fb01acb5d4d95d8627757349f8b724e087b63","modified":1757396164172},{"_id":"source/img/post/10/6.png","hash":"be5545c0dceafd39d51272eebb9e45beb8103d70","modified":1757396164172},{"_id":"source/img/post/10/9.png","hash":"c329d500287fbc8dd840bb5a3f0d1a7cde27e9a3","modified":1757396164172},{"_id":"source/img/post/10/8.png","hash":"2dd170304b1ad0c8874a6372a0263d15a2953a6c","modified":1757396164172},{"_id":"source/img/post/11/1.png","hash":"b30ae2b3f191de374e0f5a7bb413121486410ba3","modified":1757396164172},{"_id":"source/img/post/11/3.jpg","hash":"9993588da5e8bc43cfba6fe99ab165ac65c50ec3","modified":1757396164176},{"_id":"source/img/post/11/2.png","hash":"8af131cb04dcfc837460e0613a8e5f147acc1aa0","modified":1757396164172},{"_id":"source/img/post/2/1.png","hash":"59ebd4a80f5d12677eeabb38244ed136750a3c8d","modified":1757396164176},{"_id":"source/img/post/5/1.png","hash":"9f45e3e1512022dc99aa7aae239430b3848ba309","modified":1757396164176},{"_id":"source/img/post/6/1.png","hash":"f18b4d49cdbc864e8702ceb0d75697fe088c85fd","modified":1757396164176},{"_id":"source/img/post/5/2.png","hash":"44a39195e8a6d3049cce8e3228ddedfe011349c3","modified":1757396164176},{"_id":"source/img/post/6/2.png","hash":"3e8feaa56e1e3ebf47e699ca3b833f03a6b11ce5","modified":1757396164176},{"_id":"source/img/post/6/3.png","hash":"7cb7147c9cce265ad8be0f85fc554036ab3ee5de","modified":1757396164180},{"_id":"source/img/post/6/4.png","hash":"631b4d6bb691998220fcae8322fd3aacbc3e1b62","modified":1757396164180},{"_id":"source/img/post/6/6.png","hash":"f04c8fc4798e0ff4e757f2af8af6ad0b9d299a09","modified":1757396164180},{"_id":"source/img/post/6/5.png","hash":"d8458b901107107248960a30a7d7e9db1beab4a6","modified":1757396164180},{"_id":"source/img/post/7/10.png","hash":"304bb00dce337f3df6f9be8a0be4231a190c7553","modified":1757396164180},{"_id":"source/img/post/7/12.png","hash":"5795fbe18c6b05d647fcc5eb4e7c6cf885d27835","modified":1757396164180},{"_id":"source/img/post/7/14.png","hash":"a802b41e2a6bb54f8b6a94b3814c59f1cfbfe1fd","modified":1757396164180},{"_id":"source/img/post/7/11.png","hash":"3dc382bcf690861c9d2cec72e5fb2e0094df5ddb","modified":1757396164180},{"_id":"source/img/post/7/15.png","hash":"ec53cb33f5ef73cedc96ba7b1a54aa65aa3b93ae","modified":1757396164180},{"_id":"source/img/post/7/16.png","hash":"f6bf9ee7e82a54c1f95fc641985ac0f65ee60c87","modified":1757396164184},{"_id":"source/img/post/7/2.png","hash":"cb91c9753e7e1052ed143b2039c985603daa220d","modified":1757396164184},{"_id":"source/img/post/7/3.png","hash":"546317ed45a74c8fe74898e6eda519266c75ecca","modified":1757396164184},{"_id":"source/img/post/7/6.png","hash":"af9ac4ec8a7845c997c963451a2da572f0a34b47","modified":1757396164184},{"_id":"source/img/post/7/7.png","hash":"34083ee4df5a1c74362e8cdc7003e8c07581857f","modified":1757396164184},{"_id":"source/img/post/7/8.png","hash":"36bfbfd6247e37f09bfb98b95128371d29b8142c","modified":1757396164184},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1757707177784},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"a93d7b3990e45bc7247eecf01888f71674887a63","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"06889bee30e4c39479467021da434d3a6a0990fc","modified":1757707181068},{"_id":"source/img/post/7/9.png","hash":"2e319240225ab6cb2056277e53d4a8142b684d09","modified":1757396164184},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"6497b70356271fd6f9f1dc862353be844c457a53","modified":1757707181068},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1757707181088},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1757707181092},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1757707181092},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1757707181092},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1757707181092},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1757707181092},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1757707181092},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1757707181096},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1757707181096},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1757707181096},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1757707181096},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1757707181100},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1757707181104},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1757707181104},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1757707181104},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1757707181108},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1757707181108},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1757707181108},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1757707181112},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1757707181116},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1757707181120},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1757707181120},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1757707181120},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1757707181124},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1757707181124},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1757707178092},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1757707178148},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1757707178272},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"57281fc3812c877ec2d8e89ec87ede57b9789d4c","modified":1757707178260},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1757707178292},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1757707178328},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1757707178296},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1757707180396},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1757707178024},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"1b89d0caba03a66a43d9c290a5e94fa438a89210","modified":1757707178004},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"0039146b8ccbdf9b9f8bee58fc6c238f0e9921fc","modified":1757707178040},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"e9d4678e14be5e3cd5e34d783e5af6d6626092f5","modified":1757707178096},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1757707178164},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1757707178192},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1757707178220},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1757707178276},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"0e94f5722d4c44d3cc91be2f4fd30b9ab503b868","modified":1757707178236},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1757707178248},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1757707178304},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1757707178076},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1757707178140},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1757707178300},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1757707178324},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1757707178332},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1757707181072},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1757707177896},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1757707181072},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1757707181068},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1757707178132},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1757707178152},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1757707178280},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1757707178176},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1757707178336},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1757707178316},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1757707181076},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"f608400a08cf137ab15ec1f44bac551950afe879","modified":1757707181076},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1757707181076},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1757707181080},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1757707181076},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1757707181080},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1757707181084},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1757707181080},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1757707181080},{"_id":"source/favicon/web-app-manifest-192x192.png","hash":"bccb562623d36c373954bebcd5d1fd4a24bd6b7d","modified":1757396164140},{"_id":"source/favicon1/favicon.svg","hash":"86e915ba866375a2647aeecd20ee6ce0722055e4","modified":1757396164144},{"_id":"source/img/post/7/5.png","hash":"a75bc0eaf5688d78b955e31aa9db9d50313bf1d3","modified":1757396164184},{"_id":"source/img/post/1/2.hexo.png","hash":"123fd0b029426e0f8ab8076ca71519e3a0b2b79a","modified":1757396164168},{"_id":"source/img/post/10/1.png","hash":"c5e38a14a60e4ab95dcd8f0a4359d1a761029e1a","modified":1757396164168},{"_id":"source/img/post/11/4.png","hash":"630f93e3e427e9a0ff435a48046e5c2bc1dbdf18","modified":1757396164176},{"_id":"source/img/post/2/2.png","hash":"f7b1fa8c04fbdd79c20182ba3c70f69ab4c3ce38","modified":1757396164176},{"_id":"source/img/post/2/4.png","hash":"660249658038bfd9599d687617ed23c8392695e5","modified":1757396164176},{"_id":"source/img/post/7/1.png","hash":"0ae34f728a458ea64765049761bdb3c75b5a2854","modified":1757396164180},{"_id":"source/img/post/7/13.png","hash":"2c777377650d23c6bb7391b284c250e768d4360a","modified":1757396164180},{"_id":"source/img1/avatar.png","hash":"4d3cedbe58a39932107e1f13f06849e8184eb18b","modified":1757396164220},{"_id":"source/img/post/7/4.png","hash":"6129c60062b57c2be3b30ba6551f491e5c8b65f8","modified":1757396164184},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1757707180764},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1757707181064},{"_id":"source/img/post/2/3.png","hash":"2e0924e57e5e67177d01df4a86e03cfc995b0fdb","modified":1757396164176},{"_id":"source/favicon1/android-chrome-512x512.png","hash":"7d9516ffb19907ad26a3f0a6831f3b674acaf2da","modified":1757396164144},{"_id":"source/favicon1/web-app-manifest-512x512.png","hash":"7d9516ffb19907ad26a3f0a6831f3b674acaf2da","modified":1757396164148},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1757707180392},{"_id":"source/favicon/web-app-manifest-512x512.png","hash":"812edf3f997585f85038ab7d82a4b08858b928b5","modified":1757396164140},{"_id":"source/img/108552684_p0.png","hash":"bf029264acb9ad28a594182af9f3bca1407fe9d6","modified":1757396164160},{"_id":"source/img/108552684_p8.png","hash":"6047e0d6a75a415442f8a94658f8bfeb36d41108","modified":1757396164164},{"_id":"source/img/108552684_p2.png","hash":"ac364b662e14da436e6bdcb3ce7e586c3ea3c82e","modified":1757396164160},{"_id":"source/img1/108552684_p0.png","hash":"fa61d47773ab2b16a87bb6f3b00442ca4149d9f1","modified":1757396164192},{"_id":"source/img1/108552684_p8.png","hash":"13a26948fdd9606f3ac6262953ee83c6ca1d4603","modified":1757396164208},{"_id":"source/img1/108552684_p2.png","hash":"8f2d6a9a9d5a12832a6fe21cbdf7611a7a2599b8","modified":1757396164200},{"_id":"source/img/1023.png","hash":"a04c955a052e54d175a9be0f53b389b1eba2807a","modified":1757396164152},{"_id":"source/favicon/favicon.svg","hash":"a36fa3576e9f24494832dde76a16b75b6ef8d404","modified":1757396164132},{"_id":"source/install/src/LinuxPanelStable.zip","hash":"5efeafe3cf8f4c45c1e56f99f73eff47b99f5b50","modified":1757396164652}],"Category":[{"name":"Hexo","_id":"cmfhayg9e00043es3038q15ig"},{"name":"Linux","_id":"cmfhayg9y000c3es3cpdm6f0l"},{"name":"整活","_id":"cmfhaygau000w3es355566s1b"}],"Data":[{"_id":"link","data":[{"class_name":"开发基础","class_desc":"各位奠基的框架们","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简洁且高效的博客框架"},{"name":"Node.js","link":"https://nodejs.org/","avatar":"https://tse4-mm.cn.bing.net/th/id/OIP-C.5gf2JQQmWla-GU-WXTrGcgHaE8?w=3000&h=2000&rs=1&pid=ImgDetMain","descr":"在任何地方运行 JavaScript"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/butterfly-icon.png","descr":"基于hexo-theme-melody的基础上进行开发的主题"},{"name":"Let's Encrypt","link":"https://letsencrypt.org/blog/","avatar":"https://letsencrypt.org/images/le-logo-lockonly.svg","descr":"免费、开放、自动化的证书颁发机构"}]},{"class_name":"推荐友链","class_desc":"相谈甚多的朋友们","link_list":[{"name":"清羽飞扬","link":"https://blog.liushen.fun/","avatar":"https://blog.liushen.fun/info/avatar.ico","descr":"柳影曳曳，清酒孤灯，扬笔撒墨，心境如霜"},{"name":"Ariasakaの小窝","link":"https://blog.yaria.top/","avatar":"https://img.0v0.my/2024/12/05/67517bcf104da.png","descr":"人有悲欢离合 月有阴晴圆缺"},{"name":"Redish101","link":"https://blog.redish101.top","avatar":"https://blog.redish101.top/favicon.ico","descr":"人文 科技 白日梦."},{"name":"微霞","link":"https://yuuu.org","avatar":"https://cdn.yuuu.org/img/avatar.webp","descr":"水风清，晚霞明"}]},{"class_name":"好朋友们","class_desc":"善良可爱的朋友们","link_list":[{"name":"纸鹿摸鱼处","link":"https://blog.zhilu.cyou/","avatar":"https://www.zhilu.cyou/api/avatar.png","descr":"纸鹿至麓不知路，支炉制露不止漉"},{"name":"葱苓sama","link":"https://blog.ciraos.top/","avatar":"https://mx.ciraos.top/api/v2/objects/avatar/ufh295h43mly31gmw0.avif","descr":"Do not worry, be happy."},{"name":"陌颜Hao","link":"https://blog.imoyan.top/","avatar":"https://bu.dusays.com/2024/10/12/6709ddf3513c5.jpg","descr":"愿永不忘初心！"},{"name":"煮雪话河山","link":"https://blog.cent1pedee.top/","avatar":"https://img.cent1pedee.top/img/wechat.jpg","descr":"如月之恒，如日之升。"},{"name":"Fgaoxing","link":"https://www.yt-blog.top/","avatar":"https://img.yt-blog.top/webp/logo.webp","descr":"一个少年的博客"},{"name":"无限进步","link":"https://wgming.cn/","avatar":"https://q2.qlogo.cn/g?b=qq&nk=3489996586&s=100","descr":"不用急着赶路，去感受路"}]},{"class_name":"小伙伴们","class_desc":"我们在一起，共同进步","link_list":[{"name":"青稚の空间","link":"https://blog.linux-qitong.top","avatar":"https://blog.linux-qitong.top/img/avatar.webp","descr":"越努力，越幸运."},{"name":"Mayx的博客","link":"https://mabbs.github.io","avatar":"https://avatars0.githubusercontent.com/u/17966333","descr":"Mayx’s Home Page"},{"name":"幻想の日常","link":"https://blog.someo.top","avatar":"https://blog.someo.top/data/img/tx.jpeg","descr":"心随幻想，梦行无疆"},{"name":"笔搁纸鸯","link":"https://b.wihi.top","avatar":"https://b.wihi.top/favicon.svg","descr":"记我所想，记录生活，随心而为，仅此而已"},{"name":"弹霄博科","link":"https://www.txisfine.cn/","avatar":"https://cdn.txisfine.cn/images/favicon.png","descr":"小谈谈的一亩三分地"}]},{"class_name":"失联友链","class_desc":"愿君早归","link_list":[{"name":"拂晓不辍","link":"https://aowu.dog","avatar":"https://aowu.dog/touxiang.png","descr":"老是在幻想自己是主角"}]}]},{"_id":"shuoshuo","data":[{"author":null,"avatar":null,"date":"2025-03-21T18:00:00.000Z","key":"shuoshuo-1","content":"今天天气真好，我想出去玩。","tags":["啥也没有"]}]}],"Page":[{"title":"分类","date":"2024-12-31T16:00:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2025-01-01 00:00:00\ntype: 'categories'\n---","updated":"2025-09-09T05:36:04.100Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cmfhayg8q00003es35xinb84b","content":"","excerpt":"","more":""},{"_content":"/* 首页字体 */\n@font-face {\n    font-family: hytmr55w;\n    font-display: swap;\n    src: url(https://npm.elemecdn.com/fontcdn-ariasaka@1.0.0/HYTangMeiRen55W.woff2) format(\"woff2\")\n}\n\nh1#site-title {\n    font-family:hytmr55w!important\n}\nspan#subtitle {\n    font-family:hytmr55w!important\n}\na#site-name {\n    font-family:hytmr55w!important\n}\n\n/* 页脚透明渐变 */\n/*\n#footer {\n    background: rgba(255,255,255,.15);\n    color: #000;\n    border-top-right-radius: 20px;\n    border-top-left-radius: 20px;\n    backdrop-filter: saturate(100%) blur(5px)\n}\n\n#footer::before {\n    background: rgba(255,255,255,.15)\n}\n\n#footer #footer-wrap {\n    color: var(--font-color)\n}\n\n#footer #footer-wrap a {\n    color: var(--font-color)\n}\n*/","source":"css/custom.css","raw":"/* 首页字体 */\n@font-face {\n    font-family: hytmr55w;\n    font-display: swap;\n    src: url(https://npm.elemecdn.com/fontcdn-ariasaka@1.0.0/HYTangMeiRen55W.woff2) format(\"woff2\")\n}\n\nh1#site-title {\n    font-family:hytmr55w!important\n}\nspan#subtitle {\n    font-family:hytmr55w!important\n}\na#site-name {\n    font-family:hytmr55w!important\n}\n\n/* 页脚透明渐变 */\n/*\n#footer {\n    background: rgba(255,255,255,.15);\n    color: #000;\n    border-top-right-radius: 20px;\n    border-top-left-radius: 20px;\n    backdrop-filter: saturate(100%) blur(5px)\n}\n\n#footer::before {\n    background: rgba(255,255,255,.15)\n}\n\n#footer #footer-wrap {\n    color: var(--font-color)\n}\n\n#footer #footer-wrap a {\n    color: var(--font-color)\n}\n*/","date":"2025-09-12T20:41:02.184Z","updated":"2025-09-09T05:36:04.100Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"cmfhayg9700023es364k4dyx5","content":"/* 首页字体 */\n@font-face {\n    font-family: hytmr55w;\n    font-display: swap;\n    src: url(https://npm.elemecdn.com/fontcdn-ariasaka@1.0.0/HYTangMeiRen55W.woff2) format(\"woff2\")\n}\n\nh1#site-title {\n    font-family:hytmr55w!important\n}\nspan#subtitle {\n    font-family:hytmr55w!important\n}\na#site-name {\n    font-family:hytmr55w!important\n}\n\n/* 页脚透明渐变 */\n/*\n#footer {\n    background: rgba(255,255,255,.15);\n    color: #000;\n    border-top-right-radius: 20px;\n    border-top-left-radius: 20px;\n    backdrop-filter: saturate(100%) blur(5px)\n}\n\n#footer::before {\n    background: rgba(255,255,255,.15)\n}\n\n#footer #footer-wrap {\n    color: var(--font-color)\n}\n\n#footer #footer-wrap a {\n    color: var(--font-color)\n}\n*/"},{"_content":"{\n    \"uid\": 636944,\n    \"address\": \"127.0.0.1\",\n    \"access_key\": \"qrLjPc9vKkMUgrH0AcAxYNLjGkohJYPO\",\n    \"secret_key\": \"jxkkhDljR33ZfKcKfsjKV4eYj3Jj6MPuqoe4dx33rgim3kye\",\n    \"addtime\": 1753369001,\n    \"username\": \"17225645246\",\n    \"idc_code\": \"\",\n    \"state\": 1,\n    \"serverid\": \"63731d986545dc63b9dd6e09da462bc22d305f7698d0491ccd0fc76dcb41c25e\",\n    \"ukey\": \"4vka2x3zkrrrfpmn7unvwzi996myutq9\"\n}","source":"install/userInfo.json","raw":"{\n    \"uid\": 636944,\n    \"address\": \"127.0.0.1\",\n    \"access_key\": \"qrLjPc9vKkMUgrH0AcAxYNLjGkohJYPO\",\n    \"secret_key\": \"jxkkhDljR33ZfKcKfsjKV4eYj3Jj6MPuqoe4dx33rgim3kye\",\n    \"addtime\": 1753369001,\n    \"username\": \"17225645246\",\n    \"idc_code\": \"\",\n    \"state\": 1,\n    \"serverid\": \"63731d986545dc63b9dd6e09da462bc22d305f7698d0491ccd0fc76dcb41c25e\",\n    \"ukey\": \"4vka2x3zkrrrfpmn7unvwzi996myutq9\"\n}","date":"2025-09-12T20:41:02.184Z","updated":"2025-09-09T05:36:04.664Z","path":"install/userInfo.json","layout":"false","title":"","comments":1,"_id":"cmfhayg9m00063es33tth7luj","content":"{\"uid\":636944,\"address\":\"127.0.0.1\",\"access_key\":\"qrLjPc9vKkMUgrH0AcAxYNLjGkohJYPO\",\"secret_key\":\"jxkkhDljR33ZfKcKfsjKV4eYj3Jj6MPuqoe4dx33rgim3kye\",\"addtime\":1753369001,\"username\":\"17225645246\",\"idc_code\":\"\",\"state\":1,\"serverid\":\"63731d986545dc63b9dd6e09da462bc22d305f7698d0491ccd0fc76dcb41c25e\",\"ukey\":\"4vka2x3zkrrrfpmn7unvwzi996myutq9\"}"},{"title":"友情链接","date":"2024-12-31T16:00:00.000Z","update":"2025-05-08T14:50:00.000Z","type":"link","_content":"\n# 本站信息\n\n```yaml\n  - name: 花生莲子粥\n\tlink: https://blog.hslzz.cn/\n\tavatar: https://hslzz.cn/assets/img/favicon.png\n\tdescr: 与世无争，不染于泥\n\t\n\tRSS:\n\tatom: https://blog.hslzz.cn/atom.xml\n\trss2: https://blog.hslzz.cn/rss2.xml\n```\n\n若您申请本站友链，应当符合如下要求：\n\n- 1. 您的网站已经添加本站友链，本站不接受单向友链请求。\n- 2. 您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。\n- 3. 您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。\n- 4. 您的网站应当稳定，可在一分钟之内加载完毕。\n- 5. 本站不接受`us.kg`之类的免费域名。但接受`github.io`、`gitee.io`\n","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2025-01-01 00:00:00\nupdate: 2025-05-08 22:50:00\ntype: 'link'\n# random: true\n---\n\n# 本站信息\n\n```yaml\n  - name: 花生莲子粥\n\tlink: https://blog.hslzz.cn/\n\tavatar: https://hslzz.cn/assets/img/favicon.png\n\tdescr: 与世无争，不染于泥\n\t\n\tRSS:\n\tatom: https://blog.hslzz.cn/atom.xml\n\trss2: https://blog.hslzz.cn/rss2.xml\n```\n\n若您申请本站友链，应当符合如下要求：\n\n- 1. 您的网站已经添加本站友链，本站不接受单向友链请求。\n- 2. 您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。\n- 3. 您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。\n- 4. 您的网站应当稳定，可在一分钟之内加载完毕。\n- 5. 本站不接受`us.kg`之类的免费域名。但接受`github.io`、`gitee.io`\n","updated":"2025-09-09T05:36:04.664Z","path":"link/index.html","comments":1,"layout":"page","_id":"cmfhayg9r00083es3gdsb2cf4","content":"<h1>本站信息</h1>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">花生莲子粥</span></span><br><span class=\"line\"><span class=\"attr\">link:</span> <span class=\"string\">https://blog.hslzz.cn/</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">https://hslzz.cn/assets/img/favicon.png</span></span><br><span class=\"line\"><span class=\"attr\">descr:</span> <span class=\"string\">与世无争，不染于泥</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">RSS:</span></span><br><span class=\"line\"><span class=\"attr\">atom:</span> <span class=\"string\">https://blog.hslzz.cn/atom.xml</span></span><br><span class=\"line\"><span class=\"attr\">rss2:</span> <span class=\"string\">https://blog.hslzz.cn/rss2.xml</span></span><br></pre></td></tr></table></figure>\n<p>若您申请本站友链，应当符合如下要求：</p>\n<ul>\n<li>\n<ol>\n<li>您的网站已经添加本站友链，本站不接受单向友链请求。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>您的网站应当稳定，可在一分钟之内加载完毕。</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>本站不接受<code>us.kg</code>之类的免费域名。但接受<code>github.io</code>、<code>gitee.io</code></li>\n</ol>\n</li>\n</ul>\n","excerpt":"","more":"<h1>本站信息</h1>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">花生莲子粥</span></span><br><span class=\"line\"><span class=\"attr\">link:</span> <span class=\"string\">https://blog.hslzz.cn/</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">https://hslzz.cn/assets/img/favicon.png</span></span><br><span class=\"line\"><span class=\"attr\">descr:</span> <span class=\"string\">与世无争，不染于泥</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">RSS:</span></span><br><span class=\"line\"><span class=\"attr\">atom:</span> <span class=\"string\">https://blog.hslzz.cn/atom.xml</span></span><br><span class=\"line\"><span class=\"attr\">rss2:</span> <span class=\"string\">https://blog.hslzz.cn/rss2.xml</span></span><br></pre></td></tr></table></figure>\n<p>若您申请本站友链，应当符合如下要求：</p>\n<ul>\n<li>\n<ol>\n<li>您的网站已经添加本站友链，本站不接受单向友链请求。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>您的网站应当稳定，可在一分钟之内加载完毕。</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>本站不接受<code>us.kg</code>之类的免费域名。但接受<code>github.io</code>、<code>gitee.io</code></li>\n</ol>\n</li>\n</ul>\n"},{"title":"花生莲子粥の小窝服务协议","date":"2025-03-16T09:00:00.000Z","update":"2025-05-08T14:00:00.000Z","type":"license","description":"本《花生莲子粥の小窝服务协议》由您与本站站长共同缔结，本协议具有法律效力。为保障您的合法权益，请您在同意并接受本协议所有条款前务必审慎阅读、充分理解各条款内容，特别是免除或者限制本站站长责任的条款、对您的权利进行限制的条款、约定争议解决方式和司法管辖的条款。如您不同意本协议的任何条款，则不得使用本站提供的相应服务。您一旦开始使用及/或继续使用本站服务，即视为您已详细阅读并已经理解接受本协议中所有条款，且同意遵守本协议的规定。","_content":"\n# 花生莲子粥の小窝服务协议\n\n更新时间：2025年5月17日\n\n**本《花生莲子粥の小窝服务协议》（以下简称“本协议”）由您与本站站长共同缔结，本协议具有法律效力。为保障您的合法权益，请您在同意并接受本协议所有条款前务必审慎阅读、充分理解各条款内容，特别是免除或者限制本站站长责任的条款、对您的权利进行限制的条款、约定争议解决方式和司法管辖的条款。**\n\n**如您不同意本协议的任何条款，则不得使用本站提供的相应服务。您一旦开始使用及/或继续使用本站服务，即视为您已详细阅读并已经理解接受本协议中所有条款，且同意遵守本协议的规定。**\n\n**如果您未满18周岁，请在法定监护人的陪同下阅读本协议，并特别注意未成年人使用条款。未满14周岁的用户需由监护人全程陪同使用，且监护人应承担全部责任。**\n\n**用户违反本站协议，造成的任何责任和后果，由用户承担。**\n\n本站坚决拥护中国共产党，热爱中华人民共和国，遵守中华人民共和国法律法规，坚决维护国家统一、民族团结和国家安全，反对一切煽动分裂国家、破坏国家统一和民族团结的行为。\n\n## 一、定义\n\n1.1 本协议：指本协议正文、修订版本。上述内容一经正式发布，即为本协议不可分割的组成部分。\n\n1.2 站长：指通过花生莲子粥の小窝网站（包括但不限于网站、APP、其他社交平台等）向您提供服务的自然人，在本协议中简称为“站长”。\n\n1.3 本站：指由站长负责维护运营的《花生莲子粥の小窝》博客网站（网络域名：blog.hslzz.cn）、所有用于提供服务的网络资产、APP、社交平台等，包括现有的及未来发布的任何版本（含客户端软件、服务器端软件、源代码、目标代码、资源文件等）；包括相关网络服务器、官方网站、电子媒体、印刷材料等。\n\n1.4 本站服务：指本站向您提供的各项服务，包括但不限于文章阅读，评论系统，友情链接等一切本站提供的服务。\n\n1.5 本站内容：指本站上的所有内容，包括本站头像、标识、文章，评论内容，Github仓库和源代码等。无论是否为本站原创。\n\n1.6 本站文章：指本站刊载发布的所有文章，包括但不限于普通文章，服务协议等。无论是否为本站原创。\n\n1.7 原创文章：指本站刊载的一切由本站站长原创的文章。\n\n1.7 您：又称“用户”，指被授权使用本站服务的自然人。\n\n1.8 服务数据：指您在使用本站服务过程中产生的被服务器记录的各种数据，包括但不限于评论日志、浏览记录、安全日志等数据。\n\n## 二、协议的变更\n\n2.1 站长有权在必要时变更本协议。\n\n2.2 本协议条款变更后，如果您继续使用本站服务，即视为您已接受变更后的协议。如果您不接受变更后的协议，应当停止使用本站服务。\n\n2.3 若变更协议，我们无法另行通知，请悉知\n\n## 三、基本权利及义务\n\n3.1 在遵守本站协议的情况下用户有使用本站提供的所有服务的权利。\n\n3.2 **您充分了解并同意，您必须为自己的一切行为负责，包括您所发表的任何内容以及由此产生的任何后果。如您违反本协议导致本站遭受损失的，您应负责全额赔偿。您应对本站中的内容自行加以判断，并承担因使用本站服务而引起的所有风险，包括因对本站内容的正确性、完整性或实用性的依赖而产生的风险。本站无法且不会对因前述风险而导致的任何损失或损害承担责任。**\n\n3.3 用户应当遵守下列规则\n\n- （1）使用本站服务时遵守中华人民共和国相关法律法规和本协议。\n\n- （2）不得利用本站服务从事非法活动。\n\n- （3）无站长授权，不得对本站进行任何形式的网络攻击。但未造成影响且联系站长进行漏洞上报的除外。\n\n- （3）不得使用任何手段干扰本站正常服务，包括但不限于网络攻击、发表大量垃圾信息、盗取站长账密对本站内容进行修改、删除、破坏等，由此造成的责任及损失由用户承担。\n\n- （4）本站文章采用国际通用**CC BY-NC-SA 4.0协议**，您阅读、转载等使用本站文章的行为时应当遵守该协议。\n\n- （5）遵守所有使用网络服务的网络协议、规定、程序和惯例以及产品的使用说明。\n\n- （6）使用本站服务时保护本站相关资源。\n\n- （7）您充分理解并同意，本站不对任何服务的稳定性作出任何承诺，因任何原因中断服务导致对您造成损失的，本站不承担任何责任。\n\n- （8）**您不得未经站长授权将本站任何内容用于商业化AI模型。**\n\n- （9）不得传输或发表任何带有违法犯罪的、骚扰性的、中伤他人的、辱骂性的、恐吓性的、伤害性的、庸俗的、淫秽的、不文明的等信息资料；\n\n- （10）不得利用本站进行牟利性经营活动：\n\n- （11）不得实施任何侵犯他人知识产权及其相关合法权利的内容，若包括用户在内的任何个人或组织存在侵权行为，应自行承担全部法律后果；\n\n- （12）不得教唆、帮助他人从事本协议和本政策所禁止的行为。\n\n\n3.4  您理解并同意，我们一直致力于提供文明健康、规范有序的网络环境，您不得利用本站及本站提供的服务制作、复制、发布、传播如下干扰本站的正常运营、以及侵犯其他用户或第三方合法权益的内容，包括但不限于：\n\n3.4.1  发布、传送、传播、储存违反国家法律法规禁止的内容：\n\n- （1）违反宪法确定的基本原则的；\n\n- （2）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；\n\n- （3）损害国家荣誉和利益的；\n\n- （4）煽动民族仇恨、民族歧视，破坏民族团结的；\n\n- （5）破坏国家宗教政策，宣扬邪教和封建迷信的；\n\n- （6）散布谣言，扰乱社会秩序，破坏社会稳定的；\n\n- （7）散布淫秽、色情、赌博、暴力、恐怖或者教唆犯罪的；\n\n- （8）侮辱或者诽谤他人，侵害他人合法权益的；\n\n- （9）煽动非法集会、结社、游行、示威、聚众扰乱社会秩序；\n\n- （10）以非法民间组织名义活动的；\n\n- （11）不符合《即时通信工具公众信息服务发展管理暂行规定》及遵守法律法规、社会主义制度、国家利益、公民合法利益、公共秩序、社会道德风尚和信息真实性等“七条底线”要求的；\n\n- （12）含有法律、行政法规禁止的其他内容的。\n\n3.4.2 发布、传送、传播、储存侵害他人名誉权、肖像权、知识产权、商业秘密等合法权利的内容；\n\n3.4.3 违反《中华人民共和国个人信息保护法》相关规定，涉及他人隐私、个人信息或资料的。\n\n3.4.4 发表、传送、传播骚扰、广告信息及垃圾信息或含有任何性或性暗示的；\n\n3.4.5 其他违反法律法规、政策及公序良俗、社会公德或干扰本站正常运营和侵犯其他用户或第三方合法权益内容的信息。\n\n3.4.6 通过相似读音或字形等替代违禁词，尝试绕过敏感词检测的。\n\n3.4.7 其他违反互联网行业公认的准则或违背公序良俗的行为。\n\n3.5 除非法律允许或本站书面许可，您不得从事下列行为：\n\n- （1）在转载时删除本站内容及其副本上关于著作权的信息；\n\n- （2）无站长授权对本站进行扫描、探查、测试，以检测、发现、查找其中可能存在的漏洞或弱点；\n\n## 四、文章系统\n\n4.1 本站所刊载的文章仅供娱乐和参考，只代表个人主观意志，不反映现实社会情况，不构成任何法律依据。您应当自行对文章内容进行判别，我们不承担因为您过度依赖本站文章提供的信息导致您受到的损失。\n\n4.2 站长享有本站所有原创文章一切合法权利。本站刊载的一切非原创内容中其作者（或版权方，以版权归属为准）享有一切合法权利。\n\n4.3 您不得利用本站文章从事任何违法犯罪活动。\n\n## 五、评论系统\n\n5.1 本站评论系统使用`Twikoo`评论系统、`WeAvatar`头像系统、`Akismet`评论审查系统来提供评论服务。\n\n5.2 站长不定期对评论进行审查，保留无理由删除任何评论的权利，且站长保留自行决定是否进行通知的权利。\n\n5.3 若您使用本站的评论系统，即视为您我们同意公开您的省级 IP 地址和浏览器信息，若您填写了昵称、邮箱、网络域名中的任意一项，即视为您同意我们公开您的昵称、我们使用您填写的邮箱地址通过API接口从WeAvater头像系统获取到的头像、您填写的网络域名。我们不会公开您的邮件地址和IP信息，但国家有权机关要求披露的除外。\n\n5.4 填写的邮箱用于显示头像和发送回复提示邮件；非本站管理员无法看到您的邮箱地址。填写邮箱可方便管理员联系您，您可自愿放弃填写邮箱，但无法享受头像显示和回复提醒服务。\n\n5.5 使用评论系统时必须遵守中华人民共和国相关法律法规。评论内容将被公开。本站使用 `Akismet` 审查评论，您清楚认识到评论审查系统可能不起作用，本站不对您发表的言论负任何责任，您对您发表的评论负全部责任。\n\n5.6 您不得利用本站评论植入各种商业性广告或其他任何类型的商业信息，不得提供赌博资讯或以任何方式引诱他人参与赌博。\n\n5.7 由于评论系统的特殊性，您发表评论后仅站长有删除评论的权限。您在发表评论后可以联系站长删除评论，在站长删除评论前未造成不良后果的，可以适当免除责任。\n\n5.8 您清楚的认识到，评论中展示的所有内容均不代表本站及站长立场。\n\n5.9 您承担由您发布的评论带来的全部责任。\n\n## 六、友情链接\n\n6.1 本站提供友情链接申请服务，满足如下要求您可申请本站友情链接：\n\n- 1. 您的网站已经添加本站友链，本站不接受单向友链请求。\n- 2. 您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。\n- 3. 您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。\n- 4. 您的网站应当稳定，可在一分钟之内加载完毕。\n- 5. 本站不接受`us.kg`之类的免费域名。但`github.io`、`gitee.io`等由大型代码托管商分发的二级域名除外。\n- 6. 您已阅读并同意，遵守本站的服务协议。\n\n6.2 若您的站点违反上述条款的内容，本站不予添加友情链接。若本站友情链接中添加您的站点后，您的站点添加了违反上述申请规定的内容，站长有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。\n\n6.3 若您的网站无法访问或者将本站友情链接单方面撤销的，本站有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。\n\n6.4 您清楚的认识到，本站友情链接指向的网站并非站长实控，本站友情链接指向的网站刊载的所有内容，除转载或二次创作的本站原创文章以外，均和本站无实质关系。\n\n6.5 本站不对友情链接指向的网站刊载的内容导致的一切责任负责，请您自行斟酌。\n\n6.7 若您发现本站友情链接指向的任意站点存在违法违规内容或不符合本站协议内容的，您可通过联系站长邮箱hi@hslzz.cn向站长提交反馈，核实后将会处理。\n\n6.8 本站有权自主决定是否添加您站点的友链，即使原因如何。\n\n## 七、知识产权\n\n7.1 本站站长享有本站所有原创内容的一切合法权益（包括但不限于计算机软件著作权、美术作品著作权、商标权、专利权等所所有知识产权），受中华人民共和国法律法规和相应的国际条约保护，未经站长同意，任何人不得为任何商业或非商业目的自行或许可任何第三方实施、利用、转让上述知识产权。\n\n7.2 本站文章均采用国际通用**CC BY-NC-SA 4.0协议**。您可以**以非商业性质为目的**的转载本站文章或使用进行二次创作，但**必须进行署名**，且转载或二创后的文章也必须是基于CC BY-NC-SA 4.0协议。署名需包含作者（花生莲子粥）及本站相关文章链接。\n\n7.3 您不得将本站文章用于商业性质使用（注：如要求关注公众号、下载 App 后浏览文章等**阅读拦截行为**，以及**用作商业化AI模型**也将被视为商业性质站点）。**不得擅自或授权第三方进行任何出版、商业盈利及其他商业使用的行为。如违反本条约定，站长将保留法律上的追诉权利。**\n\n7.4 您基于本站服务创作的内容归您所有。但本站不承诺永久存储，不对提供的如存储等服务的稳定性作出任何承诺，若有必要请您自行保存备份，因用户没有自行备份导致的内容丢失本站不负任何责任。\n\n7.5 **用户在本站中制作、提供、上传或发布的任何内容必须遵守本协议条款，且不得侵犯他人的合法权益或违反用户与第三方之间的书面协议，否则因此导致的第三方主张的索赔、提起的诉讼，均由用户自行处理并承担所有法律责任，因此导致本站遭受损失的，用户应负责赔偿；此外，本站有权采取如下措施的一项或多项：**\n\n- **（1）更改、删除或屏蔽相关内容；**\n\n- **（2）警告，封禁IP；**\n\n- **（3）向有关监管部门或国家机关报告；**\n\n- **（4）其他站长认为合理的措施。**\n\n7.6 用户不可撤销地授权站长以自己的名义或委托专业第三方对侵犯上述内容合法权益的行为进行维权，维权形式包括但不限于：监测侵权行为、发送维权函、提起诉讼或仲裁、调解、和解等，本站有权对维权事宜做出决策并独立实施。\n\n7.7 本站可能涉及第三方知识产权，而该等第三方对您基于本协议使用该等知识产权有要求的，站长将以适当方式向您告知该要求，您应当一并遵守。\n\n7.8 尊重知识产权是您应尽的义务，如有违反，您需要承担损害赔偿责任，请您遵守诚实信用原则。如侵犯他人知识产权，本站有权立即终止服务，并保留追究法律责任及索赔的权利。\n\n## **八、遵守当地法律监管**\n\n8.1 您在使用本站服务过程中应当遵守当地相关的法律法规，并尊重当地的道德和风俗习惯。**如果您的行为违反了当地法律法规或道德风俗，您应当为此独立承担责任。**\n\n8.2 **您应避免因使用本站服务而使本站或站长卷入政治和公共事件，否则站长有权暂停或终止对您的服务。**\n\n## **九、管辖与法律适用**\n\n9.1 **本协议签订地为中华人民共和国福建省三明市永安市。**\n\n9.2 **本协议的成立、生效、履行、解释及纠纷解决，适用中华人民共和国大陆地区法律（不包括冲突法）。**\n\n9.3 **若您和本站之间因本协议发生任何纠纷或争议，首先应友好协商解决，协商不成的，您同意将纠纷或争议提交至本协议签订地（福建省三明市永安市）有管辖权的人民法院或互联网法院管辖。诉讼产生的合理费用（如律师费、公证费）由败诉方承担**。\n\n9.4 本协议所有条款的标题仅为阅读方便，本身并无实际涵义，不能作为本协议涵义解释的依据。\n\n9.5 本协议条款无论因何种原因部分无效，其余条款仍有效，对各方具有约束力。\n\n## 十、免责声明\n\n10.1 **本站服务以“现状”提供给您。我们不保证：本站服务无错误及不会中断、所有缺陷已被更正、或本站服务不会受到病毒或任何其它因素的损害。除非有法律明确规定，本站在此明确声明不承担任何明示或默示的担保责任，包括但不限于对本站服务的性能、适用性或不侵权的担保。**\n\n10.2 在任何情况下，本站不对因不可抗力导致的您在使用本站服务过程中遭受的损失承担责任。该等不可抗力事件包括但不限于国家法律、法规、政策及国家机关的命令及其他政府行为或者其它的诸如地震、水灾、雪灾、火灾、海啸、台风、罢工、战争等不可预测、不可避免且不可克服的事件。\n\n10.3 本站可独立决定随时变更、终止、中止您对任何本站服务的使用，无须向您发出任何提前通知，但根据法律法规规定或您与本站的约定需要提前通知的除外。若因您的行为违反法律法规规定或本协议的规定，本站根据相关规定终止、中止您使用任何本站服务，则本站无须向您承担任何责任，且有权要求您承担相应的责任。\n\n10.4 本站服务可能因软件漏洞、版本更新缺陷、第三方病毒攻击或其他任何因素导致您在本站的数据发生异常。若数据发生异常，我们有权删除冻结该数据，且无须向您承担任何责任。\n\n10.5 任何由于黑客攻击、计算机病毒侵入或发作、网络传输故障、政府管制等站长现有技术和资源无法抗衡的行为致使您的权益受损，站长不承担任何责任，请自行做好信息保护，站长将协助您向作恶人维权。\n\n10.6 因用户误操作导致的损失，本站不承担责任，造成本站损失的，用户需承担所有责任。\n\n10.7 站长有权无理由对任一网络特征实行任何限制或封禁（如人机验证，封禁IP等）。\n\n## 十一、其他\n\n11.1 如果您对本协议或本站服务有意见或建议，可与站长联系，我们会给予您必要的帮助。邮箱：hi@hslzz.cn。\n","source":"license/index.md","raw":"---\ntitle: 花生莲子粥の小窝服务协议\ndate: 2025-03-16 17:00:00\nupdate: 2025-05-08 22:00:00\ntype: 'license'\ndescription: 本《花生莲子粥の小窝服务协议》由您与本站站长共同缔结，本协议具有法律效力。为保障您的合法权益，请您在同意并接受本协议所有条款前务必审慎阅读、充分理解各条款内容，特别是免除或者限制本站站长责任的条款、对您的权利进行限制的条款、约定争议解决方式和司法管辖的条款。如您不同意本协议的任何条款，则不得使用本站提供的相应服务。您一旦开始使用及/或继续使用本站服务，即视为您已详细阅读并已经理解接受本协议中所有条款，且同意遵守本协议的规定。\n---\n\n# 花生莲子粥の小窝服务协议\n\n更新时间：2025年5月17日\n\n**本《花生莲子粥の小窝服务协议》（以下简称“本协议”）由您与本站站长共同缔结，本协议具有法律效力。为保障您的合法权益，请您在同意并接受本协议所有条款前务必审慎阅读、充分理解各条款内容，特别是免除或者限制本站站长责任的条款、对您的权利进行限制的条款、约定争议解决方式和司法管辖的条款。**\n\n**如您不同意本协议的任何条款，则不得使用本站提供的相应服务。您一旦开始使用及/或继续使用本站服务，即视为您已详细阅读并已经理解接受本协议中所有条款，且同意遵守本协议的规定。**\n\n**如果您未满18周岁，请在法定监护人的陪同下阅读本协议，并特别注意未成年人使用条款。未满14周岁的用户需由监护人全程陪同使用，且监护人应承担全部责任。**\n\n**用户违反本站协议，造成的任何责任和后果，由用户承担。**\n\n本站坚决拥护中国共产党，热爱中华人民共和国，遵守中华人民共和国法律法规，坚决维护国家统一、民族团结和国家安全，反对一切煽动分裂国家、破坏国家统一和民族团结的行为。\n\n## 一、定义\n\n1.1 本协议：指本协议正文、修订版本。上述内容一经正式发布，即为本协议不可分割的组成部分。\n\n1.2 站长：指通过花生莲子粥の小窝网站（包括但不限于网站、APP、其他社交平台等）向您提供服务的自然人，在本协议中简称为“站长”。\n\n1.3 本站：指由站长负责维护运营的《花生莲子粥の小窝》博客网站（网络域名：blog.hslzz.cn）、所有用于提供服务的网络资产、APP、社交平台等，包括现有的及未来发布的任何版本（含客户端软件、服务器端软件、源代码、目标代码、资源文件等）；包括相关网络服务器、官方网站、电子媒体、印刷材料等。\n\n1.4 本站服务：指本站向您提供的各项服务，包括但不限于文章阅读，评论系统，友情链接等一切本站提供的服务。\n\n1.5 本站内容：指本站上的所有内容，包括本站头像、标识、文章，评论内容，Github仓库和源代码等。无论是否为本站原创。\n\n1.6 本站文章：指本站刊载发布的所有文章，包括但不限于普通文章，服务协议等。无论是否为本站原创。\n\n1.7 原创文章：指本站刊载的一切由本站站长原创的文章。\n\n1.7 您：又称“用户”，指被授权使用本站服务的自然人。\n\n1.8 服务数据：指您在使用本站服务过程中产生的被服务器记录的各种数据，包括但不限于评论日志、浏览记录、安全日志等数据。\n\n## 二、协议的变更\n\n2.1 站长有权在必要时变更本协议。\n\n2.2 本协议条款变更后，如果您继续使用本站服务，即视为您已接受变更后的协议。如果您不接受变更后的协议，应当停止使用本站服务。\n\n2.3 若变更协议，我们无法另行通知，请悉知\n\n## 三、基本权利及义务\n\n3.1 在遵守本站协议的情况下用户有使用本站提供的所有服务的权利。\n\n3.2 **您充分了解并同意，您必须为自己的一切行为负责，包括您所发表的任何内容以及由此产生的任何后果。如您违反本协议导致本站遭受损失的，您应负责全额赔偿。您应对本站中的内容自行加以判断，并承担因使用本站服务而引起的所有风险，包括因对本站内容的正确性、完整性或实用性的依赖而产生的风险。本站无法且不会对因前述风险而导致的任何损失或损害承担责任。**\n\n3.3 用户应当遵守下列规则\n\n- （1）使用本站服务时遵守中华人民共和国相关法律法规和本协议。\n\n- （2）不得利用本站服务从事非法活动。\n\n- （3）无站长授权，不得对本站进行任何形式的网络攻击。但未造成影响且联系站长进行漏洞上报的除外。\n\n- （3）不得使用任何手段干扰本站正常服务，包括但不限于网络攻击、发表大量垃圾信息、盗取站长账密对本站内容进行修改、删除、破坏等，由此造成的责任及损失由用户承担。\n\n- （4）本站文章采用国际通用**CC BY-NC-SA 4.0协议**，您阅读、转载等使用本站文章的行为时应当遵守该协议。\n\n- （5）遵守所有使用网络服务的网络协议、规定、程序和惯例以及产品的使用说明。\n\n- （6）使用本站服务时保护本站相关资源。\n\n- （7）您充分理解并同意，本站不对任何服务的稳定性作出任何承诺，因任何原因中断服务导致对您造成损失的，本站不承担任何责任。\n\n- （8）**您不得未经站长授权将本站任何内容用于商业化AI模型。**\n\n- （9）不得传输或发表任何带有违法犯罪的、骚扰性的、中伤他人的、辱骂性的、恐吓性的、伤害性的、庸俗的、淫秽的、不文明的等信息资料；\n\n- （10）不得利用本站进行牟利性经营活动：\n\n- （11）不得实施任何侵犯他人知识产权及其相关合法权利的内容，若包括用户在内的任何个人或组织存在侵权行为，应自行承担全部法律后果；\n\n- （12）不得教唆、帮助他人从事本协议和本政策所禁止的行为。\n\n\n3.4  您理解并同意，我们一直致力于提供文明健康、规范有序的网络环境，您不得利用本站及本站提供的服务制作、复制、发布、传播如下干扰本站的正常运营、以及侵犯其他用户或第三方合法权益的内容，包括但不限于：\n\n3.4.1  发布、传送、传播、储存违反国家法律法规禁止的内容：\n\n- （1）违反宪法确定的基本原则的；\n\n- （2）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；\n\n- （3）损害国家荣誉和利益的；\n\n- （4）煽动民族仇恨、民族歧视，破坏民族团结的；\n\n- （5）破坏国家宗教政策，宣扬邪教和封建迷信的；\n\n- （6）散布谣言，扰乱社会秩序，破坏社会稳定的；\n\n- （7）散布淫秽、色情、赌博、暴力、恐怖或者教唆犯罪的；\n\n- （8）侮辱或者诽谤他人，侵害他人合法权益的；\n\n- （9）煽动非法集会、结社、游行、示威、聚众扰乱社会秩序；\n\n- （10）以非法民间组织名义活动的；\n\n- （11）不符合《即时通信工具公众信息服务发展管理暂行规定》及遵守法律法规、社会主义制度、国家利益、公民合法利益、公共秩序、社会道德风尚和信息真实性等“七条底线”要求的；\n\n- （12）含有法律、行政法规禁止的其他内容的。\n\n3.4.2 发布、传送、传播、储存侵害他人名誉权、肖像权、知识产权、商业秘密等合法权利的内容；\n\n3.4.3 违反《中华人民共和国个人信息保护法》相关规定，涉及他人隐私、个人信息或资料的。\n\n3.4.4 发表、传送、传播骚扰、广告信息及垃圾信息或含有任何性或性暗示的；\n\n3.4.5 其他违反法律法规、政策及公序良俗、社会公德或干扰本站正常运营和侵犯其他用户或第三方合法权益内容的信息。\n\n3.4.6 通过相似读音或字形等替代违禁词，尝试绕过敏感词检测的。\n\n3.4.7 其他违反互联网行业公认的准则或违背公序良俗的行为。\n\n3.5 除非法律允许或本站书面许可，您不得从事下列行为：\n\n- （1）在转载时删除本站内容及其副本上关于著作权的信息；\n\n- （2）无站长授权对本站进行扫描、探查、测试，以检测、发现、查找其中可能存在的漏洞或弱点；\n\n## 四、文章系统\n\n4.1 本站所刊载的文章仅供娱乐和参考，只代表个人主观意志，不反映现实社会情况，不构成任何法律依据。您应当自行对文章内容进行判别，我们不承担因为您过度依赖本站文章提供的信息导致您受到的损失。\n\n4.2 站长享有本站所有原创文章一切合法权利。本站刊载的一切非原创内容中其作者（或版权方，以版权归属为准）享有一切合法权利。\n\n4.3 您不得利用本站文章从事任何违法犯罪活动。\n\n## 五、评论系统\n\n5.1 本站评论系统使用`Twikoo`评论系统、`WeAvatar`头像系统、`Akismet`评论审查系统来提供评论服务。\n\n5.2 站长不定期对评论进行审查，保留无理由删除任何评论的权利，且站长保留自行决定是否进行通知的权利。\n\n5.3 若您使用本站的评论系统，即视为您我们同意公开您的省级 IP 地址和浏览器信息，若您填写了昵称、邮箱、网络域名中的任意一项，即视为您同意我们公开您的昵称、我们使用您填写的邮箱地址通过API接口从WeAvater头像系统获取到的头像、您填写的网络域名。我们不会公开您的邮件地址和IP信息，但国家有权机关要求披露的除外。\n\n5.4 填写的邮箱用于显示头像和发送回复提示邮件；非本站管理员无法看到您的邮箱地址。填写邮箱可方便管理员联系您，您可自愿放弃填写邮箱，但无法享受头像显示和回复提醒服务。\n\n5.5 使用评论系统时必须遵守中华人民共和国相关法律法规。评论内容将被公开。本站使用 `Akismet` 审查评论，您清楚认识到评论审查系统可能不起作用，本站不对您发表的言论负任何责任，您对您发表的评论负全部责任。\n\n5.6 您不得利用本站评论植入各种商业性广告或其他任何类型的商业信息，不得提供赌博资讯或以任何方式引诱他人参与赌博。\n\n5.7 由于评论系统的特殊性，您发表评论后仅站长有删除评论的权限。您在发表评论后可以联系站长删除评论，在站长删除评论前未造成不良后果的，可以适当免除责任。\n\n5.8 您清楚的认识到，评论中展示的所有内容均不代表本站及站长立场。\n\n5.9 您承担由您发布的评论带来的全部责任。\n\n## 六、友情链接\n\n6.1 本站提供友情链接申请服务，满足如下要求您可申请本站友情链接：\n\n- 1. 您的网站已经添加本站友链，本站不接受单向友链请求。\n- 2. 您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。\n- 3. 您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。\n- 4. 您的网站应当稳定，可在一分钟之内加载完毕。\n- 5. 本站不接受`us.kg`之类的免费域名。但`github.io`、`gitee.io`等由大型代码托管商分发的二级域名除外。\n- 6. 您已阅读并同意，遵守本站的服务协议。\n\n6.2 若您的站点违反上述条款的内容，本站不予添加友情链接。若本站友情链接中添加您的站点后，您的站点添加了违反上述申请规定的内容，站长有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。\n\n6.3 若您的网站无法访问或者将本站友情链接单方面撤销的，本站有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。\n\n6.4 您清楚的认识到，本站友情链接指向的网站并非站长实控，本站友情链接指向的网站刊载的所有内容，除转载或二次创作的本站原创文章以外，均和本站无实质关系。\n\n6.5 本站不对友情链接指向的网站刊载的内容导致的一切责任负责，请您自行斟酌。\n\n6.7 若您发现本站友情链接指向的任意站点存在违法违规内容或不符合本站协议内容的，您可通过联系站长邮箱hi@hslzz.cn向站长提交反馈，核实后将会处理。\n\n6.8 本站有权自主决定是否添加您站点的友链，即使原因如何。\n\n## 七、知识产权\n\n7.1 本站站长享有本站所有原创内容的一切合法权益（包括但不限于计算机软件著作权、美术作品著作权、商标权、专利权等所所有知识产权），受中华人民共和国法律法规和相应的国际条约保护，未经站长同意，任何人不得为任何商业或非商业目的自行或许可任何第三方实施、利用、转让上述知识产权。\n\n7.2 本站文章均采用国际通用**CC BY-NC-SA 4.0协议**。您可以**以非商业性质为目的**的转载本站文章或使用进行二次创作，但**必须进行署名**，且转载或二创后的文章也必须是基于CC BY-NC-SA 4.0协议。署名需包含作者（花生莲子粥）及本站相关文章链接。\n\n7.3 您不得将本站文章用于商业性质使用（注：如要求关注公众号、下载 App 后浏览文章等**阅读拦截行为**，以及**用作商业化AI模型**也将被视为商业性质站点）。**不得擅自或授权第三方进行任何出版、商业盈利及其他商业使用的行为。如违反本条约定，站长将保留法律上的追诉权利。**\n\n7.4 您基于本站服务创作的内容归您所有。但本站不承诺永久存储，不对提供的如存储等服务的稳定性作出任何承诺，若有必要请您自行保存备份，因用户没有自行备份导致的内容丢失本站不负任何责任。\n\n7.5 **用户在本站中制作、提供、上传或发布的任何内容必须遵守本协议条款，且不得侵犯他人的合法权益或违反用户与第三方之间的书面协议，否则因此导致的第三方主张的索赔、提起的诉讼，均由用户自行处理并承担所有法律责任，因此导致本站遭受损失的，用户应负责赔偿；此外，本站有权采取如下措施的一项或多项：**\n\n- **（1）更改、删除或屏蔽相关内容；**\n\n- **（2）警告，封禁IP；**\n\n- **（3）向有关监管部门或国家机关报告；**\n\n- **（4）其他站长认为合理的措施。**\n\n7.6 用户不可撤销地授权站长以自己的名义或委托专业第三方对侵犯上述内容合法权益的行为进行维权，维权形式包括但不限于：监测侵权行为、发送维权函、提起诉讼或仲裁、调解、和解等，本站有权对维权事宜做出决策并独立实施。\n\n7.7 本站可能涉及第三方知识产权，而该等第三方对您基于本协议使用该等知识产权有要求的，站长将以适当方式向您告知该要求，您应当一并遵守。\n\n7.8 尊重知识产权是您应尽的义务，如有违反，您需要承担损害赔偿责任，请您遵守诚实信用原则。如侵犯他人知识产权，本站有权立即终止服务，并保留追究法律责任及索赔的权利。\n\n## **八、遵守当地法律监管**\n\n8.1 您在使用本站服务过程中应当遵守当地相关的法律法规，并尊重当地的道德和风俗习惯。**如果您的行为违反了当地法律法规或道德风俗，您应当为此独立承担责任。**\n\n8.2 **您应避免因使用本站服务而使本站或站长卷入政治和公共事件，否则站长有权暂停或终止对您的服务。**\n\n## **九、管辖与法律适用**\n\n9.1 **本协议签订地为中华人民共和国福建省三明市永安市。**\n\n9.2 **本协议的成立、生效、履行、解释及纠纷解决，适用中华人民共和国大陆地区法律（不包括冲突法）。**\n\n9.3 **若您和本站之间因本协议发生任何纠纷或争议，首先应友好协商解决，协商不成的，您同意将纠纷或争议提交至本协议签订地（福建省三明市永安市）有管辖权的人民法院或互联网法院管辖。诉讼产生的合理费用（如律师费、公证费）由败诉方承担**。\n\n9.4 本协议所有条款的标题仅为阅读方便，本身并无实际涵义，不能作为本协议涵义解释的依据。\n\n9.5 本协议条款无论因何种原因部分无效，其余条款仍有效，对各方具有约束力。\n\n## 十、免责声明\n\n10.1 **本站服务以“现状”提供给您。我们不保证：本站服务无错误及不会中断、所有缺陷已被更正、或本站服务不会受到病毒或任何其它因素的损害。除非有法律明确规定，本站在此明确声明不承担任何明示或默示的担保责任，包括但不限于对本站服务的性能、适用性或不侵权的担保。**\n\n10.2 在任何情况下，本站不对因不可抗力导致的您在使用本站服务过程中遭受的损失承担责任。该等不可抗力事件包括但不限于国家法律、法规、政策及国家机关的命令及其他政府行为或者其它的诸如地震、水灾、雪灾、火灾、海啸、台风、罢工、战争等不可预测、不可避免且不可克服的事件。\n\n10.3 本站可独立决定随时变更、终止、中止您对任何本站服务的使用，无须向您发出任何提前通知，但根据法律法规规定或您与本站的约定需要提前通知的除外。若因您的行为违反法律法规规定或本协议的规定，本站根据相关规定终止、中止您使用任何本站服务，则本站无须向您承担任何责任，且有权要求您承担相应的责任。\n\n10.4 本站服务可能因软件漏洞、版本更新缺陷、第三方病毒攻击或其他任何因素导致您在本站的数据发生异常。若数据发生异常，我们有权删除冻结该数据，且无须向您承担任何责任。\n\n10.5 任何由于黑客攻击、计算机病毒侵入或发作、网络传输故障、政府管制等站长现有技术和资源无法抗衡的行为致使您的权益受损，站长不承担任何责任，请自行做好信息保护，站长将协助您向作恶人维权。\n\n10.6 因用户误操作导致的损失，本站不承担责任，造成本站损失的，用户需承担所有责任。\n\n10.7 站长有权无理由对任一网络特征实行任何限制或封禁（如人机验证，封禁IP等）。\n\n## 十一、其他\n\n11.1 如果您对本协议或本站服务有意见或建议，可与站长联系，我们会给予您必要的帮助。邮箱：hi@hslzz.cn。\n","updated":"2025-09-09T05:36:04.664Z","path":"license/index.html","comments":1,"layout":"page","_id":"cmfhayg9v000a3es3aef2h8x1","content":"<h1>花生莲子粥の小窝服务协议</h1>\n<p>更新时间：2025年5月17日</p>\n<p><strong>本《花生莲子粥の小窝服务协议》（以下简称“本协议”）由您与本站站长共同缔结，本协议具有法律效力。为保障您的合法权益，请您在同意并接受本协议所有条款前务必审慎阅读、充分理解各条款内容，特别是免除或者限制本站站长责任的条款、对您的权利进行限制的条款、约定争议解决方式和司法管辖的条款。</strong></p>\n<p><strong>如您不同意本协议的任何条款，则不得使用本站提供的相应服务。您一旦开始使用及/或继续使用本站服务，即视为您已详细阅读并已经理解接受本协议中所有条款，且同意遵守本协议的规定。</strong></p>\n<p><strong>如果您未满18周岁，请在法定监护人的陪同下阅读本协议，并特别注意未成年人使用条款。未满14周岁的用户需由监护人全程陪同使用，且监护人应承担全部责任。</strong></p>\n<p><strong>用户违反本站协议，造成的任何责任和后果，由用户承担。</strong></p>\n<p>本站坚决拥护中国共产党，热爱中华人民共和国，遵守中华人民共和国法律法规，坚决维护国家统一、民族团结和国家安全，反对一切煽动分裂国家、破坏国家统一和民族团结的行为。</p>\n<h2 id=\"一、定义\">一、定义</h2>\n<p>1.1 本协议：指本协议正文、修订版本。上述内容一经正式发布，即为本协议不可分割的组成部分。</p>\n<p>1.2 站长：指通过花生莲子粥の小窝网站（包括但不限于网站、APP、其他社交平台等）向您提供服务的自然人，在本协议中简称为“站长”。</p>\n<p>1.3 本站：指由站长负责维护运营的《花生莲子粥の小窝》博客网站（网络域名：<a href=\"http://blog.hslzz.cn\">blog.hslzz.cn</a>）、所有用于提供服务的网络资产、APP、社交平台等，包括现有的及未来发布的任何版本（含客户端软件、服务器端软件、源代码、目标代码、资源文件等）；包括相关网络服务器、官方网站、电子媒体、印刷材料等。</p>\n<p>1.4 本站服务：指本站向您提供的各项服务，包括但不限于文章阅读，评论系统，友情链接等一切本站提供的服务。</p>\n<p>1.5 本站内容：指本站上的所有内容，包括本站头像、标识、文章，评论内容，Github仓库和源代码等。无论是否为本站原创。</p>\n<p>1.6 本站文章：指本站刊载发布的所有文章，包括但不限于普通文章，服务协议等。无论是否为本站原创。</p>\n<p>1.7 原创文章：指本站刊载的一切由本站站长原创的文章。</p>\n<p>1.7 您：又称“用户”，指被授权使用本站服务的自然人。</p>\n<p>1.8 服务数据：指您在使用本站服务过程中产生的被服务器记录的各种数据，包括但不限于评论日志、浏览记录、安全日志等数据。</p>\n<h2 id=\"二、协议的变更\">二、协议的变更</h2>\n<p>2.1 站长有权在必要时变更本协议。</p>\n<p>2.2 本协议条款变更后，如果您继续使用本站服务，即视为您已接受变更后的协议。如果您不接受变更后的协议，应当停止使用本站服务。</p>\n<p>2.3 若变更协议，我们无法另行通知，请悉知</p>\n<h2 id=\"三、基本权利及义务\">三、基本权利及义务</h2>\n<p>3.1 在遵守本站协议的情况下用户有使用本站提供的所有服务的权利。</p>\n<p>3.2 <strong>您充分了解并同意，您必须为自己的一切行为负责，包括您所发表的任何内容以及由此产生的任何后果。如您违反本协议导致本站遭受损失的，您应负责全额赔偿。您应对本站中的内容自行加以判断，并承担因使用本站服务而引起的所有风险，包括因对本站内容的正确性、完整性或实用性的依赖而产生的风险。本站无法且不会对因前述风险而导致的任何损失或损害承担责任。</strong></p>\n<p>3.3 用户应当遵守下列规则</p>\n<ul>\n<li>\n<p>（1）使用本站服务时遵守中华人民共和国相关法律法规和本协议。</p>\n</li>\n<li>\n<p>（2）不得利用本站服务从事非法活动。</p>\n</li>\n<li>\n<p>（3）无站长授权，不得对本站进行任何形式的网络攻击。但未造成影响且联系站长进行漏洞上报的除外。</p>\n</li>\n<li>\n<p>（3）不得使用任何手段干扰本站正常服务，包括但不限于网络攻击、发表大量垃圾信息、盗取站长账密对本站内容进行修改、删除、破坏等，由此造成的责任及损失由用户承担。</p>\n</li>\n<li>\n<p>（4）本站文章采用国际通用<strong>CC BY-NC-SA 4.0协议</strong>，您阅读、转载等使用本站文章的行为时应当遵守该协议。</p>\n</li>\n<li>\n<p>（5）遵守所有使用网络服务的网络协议、规定、程序和惯例以及产品的使用说明。</p>\n</li>\n<li>\n<p>（6）使用本站服务时保护本站相关资源。</p>\n</li>\n<li>\n<p>（7）您充分理解并同意，本站不对任何服务的稳定性作出任何承诺，因任何原因中断服务导致对您造成损失的，本站不承担任何责任。</p>\n</li>\n<li>\n<p>（8）<strong>您不得未经站长授权将本站任何内容用于商业化AI模型。</strong></p>\n</li>\n<li>\n<p>（9）不得传输或发表任何带有违法犯罪的、骚扰性的、中伤他人的、辱骂性的、恐吓性的、伤害性的、庸俗的、淫秽的、不文明的等信息资料；</p>\n</li>\n<li>\n<p>（10）不得利用本站进行牟利性经营活动：</p>\n</li>\n<li>\n<p>（11）不得实施任何侵犯他人知识产权及其相关合法权利的内容，若包括用户在内的任何个人或组织存在侵权行为，应自行承担全部法律后果；</p>\n</li>\n<li>\n<p>（12）不得教唆、帮助他人从事本协议和本政策所禁止的行为。</p>\n</li>\n</ul>\n<p>3.4  您理解并同意，我们一直致力于提供文明健康、规范有序的网络环境，您不得利用本站及本站提供的服务制作、复制、发布、传播如下干扰本站的正常运营、以及侵犯其他用户或第三方合法权益的内容，包括但不限于：</p>\n<p>3.4.1  发布、传送、传播、储存违反国家法律法规禁止的内容：</p>\n<ul>\n<li>\n<p>（1）违反宪法确定的基本原则的；</p>\n</li>\n<li>\n<p>（2）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；</p>\n</li>\n<li>\n<p>（3）损害国家荣誉和利益的；</p>\n</li>\n<li>\n<p>（4）煽动民族仇恨、民族歧视，破坏民族团结的；</p>\n</li>\n<li>\n<p>（5）破坏国家宗教政策，宣扬邪教和封建迷信的；</p>\n</li>\n<li>\n<p>（6）散布谣言，扰乱社会秩序，破坏社会稳定的；</p>\n</li>\n<li>\n<p>（7）散布淫秽、色情、赌博、暴力、恐怖或者教唆犯罪的；</p>\n</li>\n<li>\n<p>（8）侮辱或者诽谤他人，侵害他人合法权益的；</p>\n</li>\n<li>\n<p>（9）煽动非法集会、结社、游行、示威、聚众扰乱社会秩序；</p>\n</li>\n<li>\n<p>（10）以非法民间组织名义活动的；</p>\n</li>\n<li>\n<p>（11）不符合《即时通信工具公众信息服务发展管理暂行规定》及遵守法律法规、社会主义制度、国家利益、公民合法利益、公共秩序、社会道德风尚和信息真实性等“七条底线”要求的；</p>\n</li>\n<li>\n<p>（12）含有法律、行政法规禁止的其他内容的。</p>\n</li>\n</ul>\n<p>3.4.2 发布、传送、传播、储存侵害他人名誉权、肖像权、知识产权、商业秘密等合法权利的内容；</p>\n<p>3.4.3 违反《中华人民共和国个人信息保护法》相关规定，涉及他人隐私、个人信息或资料的。</p>\n<p>3.4.4 发表、传送、传播骚扰、广告信息及垃圾信息或含有任何性或性暗示的；</p>\n<p>3.4.5 其他违反法律法规、政策及公序良俗、社会公德或干扰本站正常运营和侵犯其他用户或第三方合法权益内容的信息。</p>\n<p>3.4.6 通过相似读音或字形等替代违禁词，尝试绕过敏感词检测的。</p>\n<p>3.4.7 其他违反互联网行业公认的准则或违背公序良俗的行为。</p>\n<p>3.5 除非法律允许或本站书面许可，您不得从事下列行为：</p>\n<ul>\n<li>\n<p>（1）在转载时删除本站内容及其副本上关于著作权的信息；</p>\n</li>\n<li>\n<p>（2）无站长授权对本站进行扫描、探查、测试，以检测、发现、查找其中可能存在的漏洞或弱点；</p>\n</li>\n</ul>\n<h2 id=\"四、文章系统\">四、文章系统</h2>\n<p>4.1 本站所刊载的文章仅供娱乐和参考，只代表个人主观意志，不反映现实社会情况，不构成任何法律依据。您应当自行对文章内容进行判别，我们不承担因为您过度依赖本站文章提供的信息导致您受到的损失。</p>\n<p>4.2 站长享有本站所有原创文章一切合法权利。本站刊载的一切非原创内容中其作者（或版权方，以版权归属为准）享有一切合法权利。</p>\n<p>4.3 您不得利用本站文章从事任何违法犯罪活动。</p>\n<h2 id=\"五、评论系统\">五、评论系统</h2>\n<p>5.1 本站评论系统使用<code>Twikoo</code>评论系统、<code>WeAvatar</code>头像系统、<code>Akismet</code>评论审查系统来提供评论服务。</p>\n<p>5.2 站长不定期对评论进行审查，保留无理由删除任何评论的权利，且站长保留自行决定是否进行通知的权利。</p>\n<p>5.3 若您使用本站的评论系统，即视为您我们同意公开您的省级 IP 地址和浏览器信息，若您填写了昵称、邮箱、网络域名中的任意一项，即视为您同意我们公开您的昵称、我们使用您填写的邮箱地址通过API接口从WeAvater头像系统获取到的头像、您填写的网络域名。我们不会公开您的邮件地址和IP信息，但国家有权机关要求披露的除外。</p>\n<p>5.4 填写的邮箱用于显示头像和发送回复提示邮件；非本站管理员无法看到您的邮箱地址。填写邮箱可方便管理员联系您，您可自愿放弃填写邮箱，但无法享受头像显示和回复提醒服务。</p>\n<p>5.5 使用评论系统时必须遵守中华人民共和国相关法律法规。评论内容将被公开。本站使用 <code>Akismet</code> 审查评论，您清楚认识到评论审查系统可能不起作用，本站不对您发表的言论负任何责任，您对您发表的评论负全部责任。</p>\n<p>5.6 您不得利用本站评论植入各种商业性广告或其他任何类型的商业信息，不得提供赌博资讯或以任何方式引诱他人参与赌博。</p>\n<p>5.7 由于评论系统的特殊性，您发表评论后仅站长有删除评论的权限。您在发表评论后可以联系站长删除评论，在站长删除评论前未造成不良后果的，可以适当免除责任。</p>\n<p>5.8 您清楚的认识到，评论中展示的所有内容均不代表本站及站长立场。</p>\n<p>5.9 您承担由您发布的评论带来的全部责任。</p>\n<h2 id=\"六、友情链接\">六、友情链接</h2>\n<p>6.1 本站提供友情链接申请服务，满足如下要求您可申请本站友情链接：</p>\n<ul>\n<li>\n<ol>\n<li>您的网站已经添加本站友链，本站不接受单向友链请求。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>您的网站应当稳定，可在一分钟之内加载完毕。</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>本站不接受<code>us.kg</code>之类的免费域名。但<code>github.io</code>、<code>gitee.io</code>等由大型代码托管商分发的二级域名除外。</li>\n</ol>\n</li>\n<li>\n<ol start=\"6\">\n<li>您已阅读并同意，遵守本站的服务协议。</li>\n</ol>\n</li>\n</ul>\n<p>6.2 若您的站点违反上述条款的内容，本站不予添加友情链接。若本站友情链接中添加您的站点后，您的站点添加了违反上述申请规定的内容，站长有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。</p>\n<p>6.3 若您的网站无法访问或者将本站友情链接单方面撤销的，本站有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。</p>\n<p>6.4 您清楚的认识到，本站友情链接指向的网站并非站长实控，本站友情链接指向的网站刊载的所有内容，除转载或二次创作的本站原创文章以外，均和本站无实质关系。</p>\n<p>6.5 本站不对友情链接指向的网站刊载的内容导致的一切责任负责，请您自行斟酌。</p>\n<p>6.7 若您发现本站友情链接指向的任意站点存在违法违规内容或不符合本站协议内容的，您可通过联系站长邮箱hi@hslzz.cn向站长提交反馈，核实后将会处理。</p>\n<p>6.8 本站有权自主决定是否添加您站点的友链，即使原因如何。</p>\n<h2 id=\"七、知识产权\">七、知识产权</h2>\n<p>7.1 本站站长享有本站所有原创内容的一切合法权益（包括但不限于计算机软件著作权、美术作品著作权、商标权、专利权等所所有知识产权），受中华人民共和国法律法规和相应的国际条约保护，未经站长同意，任何人不得为任何商业或非商业目的自行或许可任何第三方实施、利用、转让上述知识产权。</p>\n<p>7.2 本站文章均采用国际通用<strong>CC BY-NC-SA 4.0协议</strong>。您可以<strong>以非商业性质为目的</strong>的转载本站文章或使用进行二次创作，但<strong>必须进行署名</strong>，且转载或二创后的文章也必须是基于CC BY-NC-SA 4.0协议。署名需包含作者（花生莲子粥）及本站相关文章链接。</p>\n<p>7.3 您不得将本站文章用于商业性质使用（注：如要求关注公众号、下载 App 后浏览文章等<strong>阅读拦截行为</strong>，以及<strong>用作商业化AI模型</strong>也将被视为商业性质站点）。<strong>不得擅自或授权第三方进行任何出版、商业盈利及其他商业使用的行为。如违反本条约定，站长将保留法律上的追诉权利。</strong></p>\n<p>7.4 您基于本站服务创作的内容归您所有。但本站不承诺永久存储，不对提供的如存储等服务的稳定性作出任何承诺，若有必要请您自行保存备份，因用户没有自行备份导致的内容丢失本站不负任何责任。</p>\n<p>7.5 <strong>用户在本站中制作、提供、上传或发布的任何内容必须遵守本协议条款，且不得侵犯他人的合法权益或违反用户与第三方之间的书面协议，否则因此导致的第三方主张的索赔、提起的诉讼，均由用户自行处理并承担所有法律责任，因此导致本站遭受损失的，用户应负责赔偿；此外，本站有权采取如下措施的一项或多项：</strong></p>\n<ul>\n<li>\n<p><strong>（1）更改、删除或屏蔽相关内容；</strong></p>\n</li>\n<li>\n<p><strong>（2）警告，封禁IP；</strong></p>\n</li>\n<li>\n<p><strong>（3）向有关监管部门或国家机关报告；</strong></p>\n</li>\n<li>\n<p><strong>（4）其他站长认为合理的措施。</strong></p>\n</li>\n</ul>\n<p>7.6 用户不可撤销地授权站长以自己的名义或委托专业第三方对侵犯上述内容合法权益的行为进行维权，维权形式包括但不限于：监测侵权行为、发送维权函、提起诉讼或仲裁、调解、和解等，本站有权对维权事宜做出决策并独立实施。</p>\n<p>7.7 本站可能涉及第三方知识产权，而该等第三方对您基于本协议使用该等知识产权有要求的，站长将以适当方式向您告知该要求，您应当一并遵守。</p>\n<p>7.8 尊重知识产权是您应尽的义务，如有违反，您需要承担损害赔偿责任，请您遵守诚实信用原则。如侵犯他人知识产权，本站有权立即终止服务，并保留追究法律责任及索赔的权利。</p>\n<h2 id=\"八、遵守当地法律监管\"><strong>八、遵守当地法律监管</strong></h2>\n<p>8.1 您在使用本站服务过程中应当遵守当地相关的法律法规，并尊重当地的道德和风俗习惯。<strong>如果您的行为违反了当地法律法规或道德风俗，您应当为此独立承担责任。</strong></p>\n<p>8.2 <strong>您应避免因使用本站服务而使本站或站长卷入政治和公共事件，否则站长有权暂停或终止对您的服务。</strong></p>\n<h2 id=\"九、管辖与法律适用\"><strong>九、管辖与法律适用</strong></h2>\n<p>9.1 <strong>本协议签订地为中华人民共和国福建省三明市永安市。</strong></p>\n<p>9.2 <strong>本协议的成立、生效、履行、解释及纠纷解决，适用中华人民共和国大陆地区法律（不包括冲突法）。</strong></p>\n<p>9.3 <strong>若您和本站之间因本协议发生任何纠纷或争议，首先应友好协商解决，协商不成的，您同意将纠纷或争议提交至本协议签订地（福建省三明市永安市）有管辖权的人民法院或互联网法院管辖。诉讼产生的合理费用（如律师费、公证费）由败诉方承担</strong>。</p>\n<p>9.4 本协议所有条款的标题仅为阅读方便，本身并无实际涵义，不能作为本协议涵义解释的依据。</p>\n<p>9.5 本协议条款无论因何种原因部分无效，其余条款仍有效，对各方具有约束力。</p>\n<h2 id=\"十、免责声明\">十、免责声明</h2>\n<p>10.1 <strong>本站服务以“现状”提供给您。我们不保证：本站服务无错误及不会中断、所有缺陷已被更正、或本站服务不会受到病毒或任何其它因素的损害。除非有法律明确规定，本站在此明确声明不承担任何明示或默示的担保责任，包括但不限于对本站服务的性能、适用性或不侵权的担保。</strong></p>\n<p>10.2 在任何情况下，本站不对因不可抗力导致的您在使用本站服务过程中遭受的损失承担责任。该等不可抗力事件包括但不限于国家法律、法规、政策及国家机关的命令及其他政府行为或者其它的诸如地震、水灾、雪灾、火灾、海啸、台风、罢工、战争等不可预测、不可避免且不可克服的事件。</p>\n<p>10.3 本站可独立决定随时变更、终止、中止您对任何本站服务的使用，无须向您发出任何提前通知，但根据法律法规规定或您与本站的约定需要提前通知的除外。若因您的行为违反法律法规规定或本协议的规定，本站根据相关规定终止、中止您使用任何本站服务，则本站无须向您承担任何责任，且有权要求您承担相应的责任。</p>\n<p>10.4 本站服务可能因软件漏洞、版本更新缺陷、第三方病毒攻击或其他任何因素导致您在本站的数据发生异常。若数据发生异常，我们有权删除冻结该数据，且无须向您承担任何责任。</p>\n<p>10.5 任何由于黑客攻击、计算机病毒侵入或发作、网络传输故障、政府管制等站长现有技术和资源无法抗衡的行为致使您的权益受损，站长不承担任何责任，请自行做好信息保护，站长将协助您向作恶人维权。</p>\n<p>10.6 因用户误操作导致的损失，本站不承担责任，造成本站损失的，用户需承担所有责任。</p>\n<p>10.7 站长有权无理由对任一网络特征实行任何限制或封禁（如人机验证，封禁IP等）。</p>\n<h2 id=\"十一、其他\">十一、其他</h2>\n<p>11.1 如果您对本协议或本站服务有意见或建议，可与站长联系，我们会给予您必要的帮助。邮箱：hi@hslzz.cn。</p>\n","excerpt":"","more":"<h1>花生莲子粥の小窝服务协议</h1>\n<p>更新时间：2025年5月17日</p>\n<p><strong>本《花生莲子粥の小窝服务协议》（以下简称“本协议”）由您与本站站长共同缔结，本协议具有法律效力。为保障您的合法权益，请您在同意并接受本协议所有条款前务必审慎阅读、充分理解各条款内容，特别是免除或者限制本站站长责任的条款、对您的权利进行限制的条款、约定争议解决方式和司法管辖的条款。</strong></p>\n<p><strong>如您不同意本协议的任何条款，则不得使用本站提供的相应服务。您一旦开始使用及/或继续使用本站服务，即视为您已详细阅读并已经理解接受本协议中所有条款，且同意遵守本协议的规定。</strong></p>\n<p><strong>如果您未满18周岁，请在法定监护人的陪同下阅读本协议，并特别注意未成年人使用条款。未满14周岁的用户需由监护人全程陪同使用，且监护人应承担全部责任。</strong></p>\n<p><strong>用户违反本站协议，造成的任何责任和后果，由用户承担。</strong></p>\n<p>本站坚决拥护中国共产党，热爱中华人民共和国，遵守中华人民共和国法律法规，坚决维护国家统一、民族团结和国家安全，反对一切煽动分裂国家、破坏国家统一和民族团结的行为。</p>\n<h2 id=\"一、定义\">一、定义</h2>\n<p>1.1 本协议：指本协议正文、修订版本。上述内容一经正式发布，即为本协议不可分割的组成部分。</p>\n<p>1.2 站长：指通过花生莲子粥の小窝网站（包括但不限于网站、APP、其他社交平台等）向您提供服务的自然人，在本协议中简称为“站长”。</p>\n<p>1.3 本站：指由站长负责维护运营的《花生莲子粥の小窝》博客网站（网络域名：<a href=\"http://blog.hslzz.cn\">blog.hslzz.cn</a>）、所有用于提供服务的网络资产、APP、社交平台等，包括现有的及未来发布的任何版本（含客户端软件、服务器端软件、源代码、目标代码、资源文件等）；包括相关网络服务器、官方网站、电子媒体、印刷材料等。</p>\n<p>1.4 本站服务：指本站向您提供的各项服务，包括但不限于文章阅读，评论系统，友情链接等一切本站提供的服务。</p>\n<p>1.5 本站内容：指本站上的所有内容，包括本站头像、标识、文章，评论内容，Github仓库和源代码等。无论是否为本站原创。</p>\n<p>1.6 本站文章：指本站刊载发布的所有文章，包括但不限于普通文章，服务协议等。无论是否为本站原创。</p>\n<p>1.7 原创文章：指本站刊载的一切由本站站长原创的文章。</p>\n<p>1.7 您：又称“用户”，指被授权使用本站服务的自然人。</p>\n<p>1.8 服务数据：指您在使用本站服务过程中产生的被服务器记录的各种数据，包括但不限于评论日志、浏览记录、安全日志等数据。</p>\n<h2 id=\"二、协议的变更\">二、协议的变更</h2>\n<p>2.1 站长有权在必要时变更本协议。</p>\n<p>2.2 本协议条款变更后，如果您继续使用本站服务，即视为您已接受变更后的协议。如果您不接受变更后的协议，应当停止使用本站服务。</p>\n<p>2.3 若变更协议，我们无法另行通知，请悉知</p>\n<h2 id=\"三、基本权利及义务\">三、基本权利及义务</h2>\n<p>3.1 在遵守本站协议的情况下用户有使用本站提供的所有服务的权利。</p>\n<p>3.2 <strong>您充分了解并同意，您必须为自己的一切行为负责，包括您所发表的任何内容以及由此产生的任何后果。如您违反本协议导致本站遭受损失的，您应负责全额赔偿。您应对本站中的内容自行加以判断，并承担因使用本站服务而引起的所有风险，包括因对本站内容的正确性、完整性或实用性的依赖而产生的风险。本站无法且不会对因前述风险而导致的任何损失或损害承担责任。</strong></p>\n<p>3.3 用户应当遵守下列规则</p>\n<ul>\n<li>\n<p>（1）使用本站服务时遵守中华人民共和国相关法律法规和本协议。</p>\n</li>\n<li>\n<p>（2）不得利用本站服务从事非法活动。</p>\n</li>\n<li>\n<p>（3）无站长授权，不得对本站进行任何形式的网络攻击。但未造成影响且联系站长进行漏洞上报的除外。</p>\n</li>\n<li>\n<p>（3）不得使用任何手段干扰本站正常服务，包括但不限于网络攻击、发表大量垃圾信息、盗取站长账密对本站内容进行修改、删除、破坏等，由此造成的责任及损失由用户承担。</p>\n</li>\n<li>\n<p>（4）本站文章采用国际通用<strong>CC BY-NC-SA 4.0协议</strong>，您阅读、转载等使用本站文章的行为时应当遵守该协议。</p>\n</li>\n<li>\n<p>（5）遵守所有使用网络服务的网络协议、规定、程序和惯例以及产品的使用说明。</p>\n</li>\n<li>\n<p>（6）使用本站服务时保护本站相关资源。</p>\n</li>\n<li>\n<p>（7）您充分理解并同意，本站不对任何服务的稳定性作出任何承诺，因任何原因中断服务导致对您造成损失的，本站不承担任何责任。</p>\n</li>\n<li>\n<p>（8）<strong>您不得未经站长授权将本站任何内容用于商业化AI模型。</strong></p>\n</li>\n<li>\n<p>（9）不得传输或发表任何带有违法犯罪的、骚扰性的、中伤他人的、辱骂性的、恐吓性的、伤害性的、庸俗的、淫秽的、不文明的等信息资料；</p>\n</li>\n<li>\n<p>（10）不得利用本站进行牟利性经营活动：</p>\n</li>\n<li>\n<p>（11）不得实施任何侵犯他人知识产权及其相关合法权利的内容，若包括用户在内的任何个人或组织存在侵权行为，应自行承担全部法律后果；</p>\n</li>\n<li>\n<p>（12）不得教唆、帮助他人从事本协议和本政策所禁止的行为。</p>\n</li>\n</ul>\n<p>3.4  您理解并同意，我们一直致力于提供文明健康、规范有序的网络环境，您不得利用本站及本站提供的服务制作、复制、发布、传播如下干扰本站的正常运营、以及侵犯其他用户或第三方合法权益的内容，包括但不限于：</p>\n<p>3.4.1  发布、传送、传播、储存违反国家法律法规禁止的内容：</p>\n<ul>\n<li>\n<p>（1）违反宪法确定的基本原则的；</p>\n</li>\n<li>\n<p>（2）危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；</p>\n</li>\n<li>\n<p>（3）损害国家荣誉和利益的；</p>\n</li>\n<li>\n<p>（4）煽动民族仇恨、民族歧视，破坏民族团结的；</p>\n</li>\n<li>\n<p>（5）破坏国家宗教政策，宣扬邪教和封建迷信的；</p>\n</li>\n<li>\n<p>（6）散布谣言，扰乱社会秩序，破坏社会稳定的；</p>\n</li>\n<li>\n<p>（7）散布淫秽、色情、赌博、暴力、恐怖或者教唆犯罪的；</p>\n</li>\n<li>\n<p>（8）侮辱或者诽谤他人，侵害他人合法权益的；</p>\n</li>\n<li>\n<p>（9）煽动非法集会、结社、游行、示威、聚众扰乱社会秩序；</p>\n</li>\n<li>\n<p>（10）以非法民间组织名义活动的；</p>\n</li>\n<li>\n<p>（11）不符合《即时通信工具公众信息服务发展管理暂行规定》及遵守法律法规、社会主义制度、国家利益、公民合法利益、公共秩序、社会道德风尚和信息真实性等“七条底线”要求的；</p>\n</li>\n<li>\n<p>（12）含有法律、行政法规禁止的其他内容的。</p>\n</li>\n</ul>\n<p>3.4.2 发布、传送、传播、储存侵害他人名誉权、肖像权、知识产权、商业秘密等合法权利的内容；</p>\n<p>3.4.3 违反《中华人民共和国个人信息保护法》相关规定，涉及他人隐私、个人信息或资料的。</p>\n<p>3.4.4 发表、传送、传播骚扰、广告信息及垃圾信息或含有任何性或性暗示的；</p>\n<p>3.4.5 其他违反法律法规、政策及公序良俗、社会公德或干扰本站正常运营和侵犯其他用户或第三方合法权益内容的信息。</p>\n<p>3.4.6 通过相似读音或字形等替代违禁词，尝试绕过敏感词检测的。</p>\n<p>3.4.7 其他违反互联网行业公认的准则或违背公序良俗的行为。</p>\n<p>3.5 除非法律允许或本站书面许可，您不得从事下列行为：</p>\n<ul>\n<li>\n<p>（1）在转载时删除本站内容及其副本上关于著作权的信息；</p>\n</li>\n<li>\n<p>（2）无站长授权对本站进行扫描、探查、测试，以检测、发现、查找其中可能存在的漏洞或弱点；</p>\n</li>\n</ul>\n<h2 id=\"四、文章系统\">四、文章系统</h2>\n<p>4.1 本站所刊载的文章仅供娱乐和参考，只代表个人主观意志，不反映现实社会情况，不构成任何法律依据。您应当自行对文章内容进行判别，我们不承担因为您过度依赖本站文章提供的信息导致您受到的损失。</p>\n<p>4.2 站长享有本站所有原创文章一切合法权利。本站刊载的一切非原创内容中其作者（或版权方，以版权归属为准）享有一切合法权利。</p>\n<p>4.3 您不得利用本站文章从事任何违法犯罪活动。</p>\n<h2 id=\"五、评论系统\">五、评论系统</h2>\n<p>5.1 本站评论系统使用<code>Twikoo</code>评论系统、<code>WeAvatar</code>头像系统、<code>Akismet</code>评论审查系统来提供评论服务。</p>\n<p>5.2 站长不定期对评论进行审查，保留无理由删除任何评论的权利，且站长保留自行决定是否进行通知的权利。</p>\n<p>5.3 若您使用本站的评论系统，即视为您我们同意公开您的省级 IP 地址和浏览器信息，若您填写了昵称、邮箱、网络域名中的任意一项，即视为您同意我们公开您的昵称、我们使用您填写的邮箱地址通过API接口从WeAvater头像系统获取到的头像、您填写的网络域名。我们不会公开您的邮件地址和IP信息，但国家有权机关要求披露的除外。</p>\n<p>5.4 填写的邮箱用于显示头像和发送回复提示邮件；非本站管理员无法看到您的邮箱地址。填写邮箱可方便管理员联系您，您可自愿放弃填写邮箱，但无法享受头像显示和回复提醒服务。</p>\n<p>5.5 使用评论系统时必须遵守中华人民共和国相关法律法规。评论内容将被公开。本站使用 <code>Akismet</code> 审查评论，您清楚认识到评论审查系统可能不起作用，本站不对您发表的言论负任何责任，您对您发表的评论负全部责任。</p>\n<p>5.6 您不得利用本站评论植入各种商业性广告或其他任何类型的商业信息，不得提供赌博资讯或以任何方式引诱他人参与赌博。</p>\n<p>5.7 由于评论系统的特殊性，您发表评论后仅站长有删除评论的权限。您在发表评论后可以联系站长删除评论，在站长删除评论前未造成不良后果的，可以适当免除责任。</p>\n<p>5.8 您清楚的认识到，评论中展示的所有内容均不代表本站及站长立场。</p>\n<p>5.9 您承担由您发布的评论带来的全部责任。</p>\n<h2 id=\"六、友情链接\">六、友情链接</h2>\n<p>6.1 本站提供友情链接申请服务，满足如下要求您可申请本站友情链接：</p>\n<ul>\n<li>\n<ol>\n<li>您的网站已经添加本站友链，本站不接受单向友链请求。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>您的网站属于非商业性质（注：如要求关注公众号、下载 App 后浏览文章等阅读拦截行为也属于商业性质站点）。</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>您的网站符合中华人民共和国法律法规，不得刊载任何违法违规、违背公序良俗的内容，对本站存在不当言论、不符合本站协议的内容。</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>您的网站应当稳定，可在一分钟之内加载完毕。</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>本站不接受<code>us.kg</code>之类的免费域名。但<code>github.io</code>、<code>gitee.io</code>等由大型代码托管商分发的二级域名除外。</li>\n</ol>\n</li>\n<li>\n<ol start=\"6\">\n<li>您已阅读并同意，遵守本站的服务协议。</li>\n</ol>\n</li>\n</ul>\n<p>6.2 若您的站点违反上述条款的内容，本站不予添加友情链接。若本站友情链接中添加您的站点后，您的站点添加了违反上述申请规定的内容，站长有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。</p>\n<p>6.3 若您的网站无法访问或者将本站友情链接单方面撤销的，本站有权撤销您在本站的友情链接且保留自主决定是否通知您的权利。</p>\n<p>6.4 您清楚的认识到，本站友情链接指向的网站并非站长实控，本站友情链接指向的网站刊载的所有内容，除转载或二次创作的本站原创文章以外，均和本站无实质关系。</p>\n<p>6.5 本站不对友情链接指向的网站刊载的内容导致的一切责任负责，请您自行斟酌。</p>\n<p>6.7 若您发现本站友情链接指向的任意站点存在违法违规内容或不符合本站协议内容的，您可通过联系站长邮箱hi@hslzz.cn向站长提交反馈，核实后将会处理。</p>\n<p>6.8 本站有权自主决定是否添加您站点的友链，即使原因如何。</p>\n<h2 id=\"七、知识产权\">七、知识产权</h2>\n<p>7.1 本站站长享有本站所有原创内容的一切合法权益（包括但不限于计算机软件著作权、美术作品著作权、商标权、专利权等所所有知识产权），受中华人民共和国法律法规和相应的国际条约保护，未经站长同意，任何人不得为任何商业或非商业目的自行或许可任何第三方实施、利用、转让上述知识产权。</p>\n<p>7.2 本站文章均采用国际通用<strong>CC BY-NC-SA 4.0协议</strong>。您可以<strong>以非商业性质为目的</strong>的转载本站文章或使用进行二次创作，但<strong>必须进行署名</strong>，且转载或二创后的文章也必须是基于CC BY-NC-SA 4.0协议。署名需包含作者（花生莲子粥）及本站相关文章链接。</p>\n<p>7.3 您不得将本站文章用于商业性质使用（注：如要求关注公众号、下载 App 后浏览文章等<strong>阅读拦截行为</strong>，以及<strong>用作商业化AI模型</strong>也将被视为商业性质站点）。<strong>不得擅自或授权第三方进行任何出版、商业盈利及其他商业使用的行为。如违反本条约定，站长将保留法律上的追诉权利。</strong></p>\n<p>7.4 您基于本站服务创作的内容归您所有。但本站不承诺永久存储，不对提供的如存储等服务的稳定性作出任何承诺，若有必要请您自行保存备份，因用户没有自行备份导致的内容丢失本站不负任何责任。</p>\n<p>7.5 <strong>用户在本站中制作、提供、上传或发布的任何内容必须遵守本协议条款，且不得侵犯他人的合法权益或违反用户与第三方之间的书面协议，否则因此导致的第三方主张的索赔、提起的诉讼，均由用户自行处理并承担所有法律责任，因此导致本站遭受损失的，用户应负责赔偿；此外，本站有权采取如下措施的一项或多项：</strong></p>\n<ul>\n<li>\n<p><strong>（1）更改、删除或屏蔽相关内容；</strong></p>\n</li>\n<li>\n<p><strong>（2）警告，封禁IP；</strong></p>\n</li>\n<li>\n<p><strong>（3）向有关监管部门或国家机关报告；</strong></p>\n</li>\n<li>\n<p><strong>（4）其他站长认为合理的措施。</strong></p>\n</li>\n</ul>\n<p>7.6 用户不可撤销地授权站长以自己的名义或委托专业第三方对侵犯上述内容合法权益的行为进行维权，维权形式包括但不限于：监测侵权行为、发送维权函、提起诉讼或仲裁、调解、和解等，本站有权对维权事宜做出决策并独立实施。</p>\n<p>7.7 本站可能涉及第三方知识产权，而该等第三方对您基于本协议使用该等知识产权有要求的，站长将以适当方式向您告知该要求，您应当一并遵守。</p>\n<p>7.8 尊重知识产权是您应尽的义务，如有违反，您需要承担损害赔偿责任，请您遵守诚实信用原则。如侵犯他人知识产权，本站有权立即终止服务，并保留追究法律责任及索赔的权利。</p>\n<h2 id=\"八、遵守当地法律监管\"><strong>八、遵守当地法律监管</strong></h2>\n<p>8.1 您在使用本站服务过程中应当遵守当地相关的法律法规，并尊重当地的道德和风俗习惯。<strong>如果您的行为违反了当地法律法规或道德风俗，您应当为此独立承担责任。</strong></p>\n<p>8.2 <strong>您应避免因使用本站服务而使本站或站长卷入政治和公共事件，否则站长有权暂停或终止对您的服务。</strong></p>\n<h2 id=\"九、管辖与法律适用\"><strong>九、管辖与法律适用</strong></h2>\n<p>9.1 <strong>本协议签订地为中华人民共和国福建省三明市永安市。</strong></p>\n<p>9.2 <strong>本协议的成立、生效、履行、解释及纠纷解决，适用中华人民共和国大陆地区法律（不包括冲突法）。</strong></p>\n<p>9.3 <strong>若您和本站之间因本协议发生任何纠纷或争议，首先应友好协商解决，协商不成的，您同意将纠纷或争议提交至本协议签订地（福建省三明市永安市）有管辖权的人民法院或互联网法院管辖。诉讼产生的合理费用（如律师费、公证费）由败诉方承担</strong>。</p>\n<p>9.4 本协议所有条款的标题仅为阅读方便，本身并无实际涵义，不能作为本协议涵义解释的依据。</p>\n<p>9.5 本协议条款无论因何种原因部分无效，其余条款仍有效，对各方具有约束力。</p>\n<h2 id=\"十、免责声明\">十、免责声明</h2>\n<p>10.1 <strong>本站服务以“现状”提供给您。我们不保证：本站服务无错误及不会中断、所有缺陷已被更正、或本站服务不会受到病毒或任何其它因素的损害。除非有法律明确规定，本站在此明确声明不承担任何明示或默示的担保责任，包括但不限于对本站服务的性能、适用性或不侵权的担保。</strong></p>\n<p>10.2 在任何情况下，本站不对因不可抗力导致的您在使用本站服务过程中遭受的损失承担责任。该等不可抗力事件包括但不限于国家法律、法规、政策及国家机关的命令及其他政府行为或者其它的诸如地震、水灾、雪灾、火灾、海啸、台风、罢工、战争等不可预测、不可避免且不可克服的事件。</p>\n<p>10.3 本站可独立决定随时变更、终止、中止您对任何本站服务的使用，无须向您发出任何提前通知，但根据法律法规规定或您与本站的约定需要提前通知的除外。若因您的行为违反法律法规规定或本协议的规定，本站根据相关规定终止、中止您使用任何本站服务，则本站无须向您承担任何责任，且有权要求您承担相应的责任。</p>\n<p>10.4 本站服务可能因软件漏洞、版本更新缺陷、第三方病毒攻击或其他任何因素导致您在本站的数据发生异常。若数据发生异常，我们有权删除冻结该数据，且无须向您承担任何责任。</p>\n<p>10.5 任何由于黑客攻击、计算机病毒侵入或发作、网络传输故障、政府管制等站长现有技术和资源无法抗衡的行为致使您的权益受损，站长不承担任何责任，请自行做好信息保护，站长将协助您向作恶人维权。</p>\n<p>10.6 因用户误操作导致的损失，本站不承担责任，造成本站损失的，用户需承担所有责任。</p>\n<p>10.7 站长有权无理由对任一网络特征实行任何限制或封禁（如人机验证，封禁IP等）。</p>\n<h2 id=\"十一、其他\">十一、其他</h2>\n<p>11.1 如果您对本协议或本站服务有意见或建议，可与站长联系，我们会给予您必要的帮助。邮箱：hi@hslzz.cn。</p>\n"},{"title":"说说","date":"2025-03-17T10:00:00.000Z","type":"shuoshuo","_content":"","source":"shuoshuo/index.md","raw":"---\ntitle: 说说\ndate: 2025-03-17 18:00:00\ntype: 'shuoshuo'\n---\n","updated":"2025-09-09T05:36:04.668Z","path":"shuoshuo/index.html","comments":1,"layout":"page","_id":"cmfhayga0000e3es31m603oi7","content":"","excerpt":"","more":""},{"title":"标签","date":"2024-12-31T16:00:00.000Z","type":"tags","orderby":"random","order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2025-01-01 00:00:00\ntype: 'tags'\norderby: random\norder: 1\n---","updated":"2025-09-09T05:36:04.668Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cmfhayga4000g3es33r01e8h3","content":"","excerpt":"","more":""}],"Post":[{"title":"Hexo + Butterfly博客安装教程","date":"2024-12-06T03:00:00.000Z","updated":"2025-02-17T04:50:00.000Z","description":"阅读这篇完整指南，了解安装Hexo+Butterfly博客的方法。手把手教你从零开始搭建个人博客。零基础也能轻松上手！","series":1,"_content":"\n# 安装Hexo和Butterfly主题\n\n## 在Ubuntu/Linux下安装\n\n### 安装npm\n\n\n```bash\napt install npm\n```\n\n验证 npm 是否安装成功\n\n```bash\nnpm -v\n```\n### 安装Node.js\n\n1.**用npm安装node包管理器**\n\n```bash\nnpm install n -g\n```\n\n2.**安装 Node.js LTS 版本**\n\n```\nn lts\n```\n\n此时会同时更新npm\n\n3.**验证 Node.js 和 npm 版本**\n\n```bash\nnode -v\n```\n\n```bash\nnpm -v\n```\n\n## 在Windows系统下安装\n\n1.**访问 [Node.js](https://nodejs.org/zh-cn) 官网下载下载安装包**\n  https://nodejs.org/zh-cn\n  ![第一步](/img/post/1/3.nodejs.png)\n\n2.**安装步骤**\n\n- 点击 \"Next\"\n![第二步](/img/post/1/4.nodejs.png)\n\n- 勾选协议并继续\n  ![第三步](/img/post/1/5.nodejs.png)\n\n- 选择安装路径，然后Next\n  ![第四步](/img/post/1/6.nodejs.png)\n\n- 保持默认设置，点击 \"Next\"\n  ![node](/img/post/1/7.nodejs.png)\n\n- **不要勾选它**，Next\n  ![node](/img/post/1/8.nodejs.png)\n\n- 点击 \"Install\" 开始安装。\n  ![node](/img/post/1/9.nodejs.png)\n\n- 现在就开始安装了，等它安装好\n  ![node](/img/post/1/10.nodejs.png)\n\n3.**验证安装**\n\n```\nnode -v\nnpm -v\n```\n\n出于安全考虑，PowerShell 有时候会阻止运行脚本，可能会出现报错：\n  在powershell中输入 `Get-ExecutionPolicy`，回车，看看当前的策略是什么。\n\n```bash\nGet-ExecutionPolicy\n```\n   如果是 `Restricted`，可以改成 `RemoteSigned` 或者 `Unrestricted`（不过 `Unrestricted` 有点不安全，不太推荐）。\n   **修改策略的命令是 `Set-ExecutionPolicy RemoteSigned`。**\n\n```\nSet-ExecutionPolicy RemoteSigned\n```\n\n然后会提示你确认，输入 `Y`，再回车。\n\n## npm改源\n\n| 镜像名称       | 镜像地址                        |\n| -------------- | ------------------------------- |\n| 淘宝源（推荐） | https://registry.npmmirror.com  |\n| 腾讯云源       | http://mirrors.tencent.com/npm/ |\n\n1.**运行以下命令**：\n\n```\nnpm config set registry https://registry.npmmirror.com\n```\n\n2.**如果是腾讯云源需要进行如下操作：**\n\n1. 避免 SSL 校验失败：\n\n```\nnpm config set strict-ssl false\n```\n\n2. 移除代理配置：\n\n```\nnpm config delete proxy\nnpm config delete https-proxy\n```\n\n3.**查看配置信息：**\n\n```\nnpm config list\n```\n\n注意：**npm config list 的结果不应出现 proxy 配置**，否则容易出现 npm 组件下载/上传失败的情况\n\n## 安装Hexo\n\n1.**全局安装 Hexo**\n\n```\nnpm install hexo-cli -g\n```\n\n2.**验证 Hexo 是否安装成功**\n\n```\nhexo -v\n```\n\n## 初始化Hexo博客\n\n1.**创建一个博客根目录并进入。以下简称博客根目录为`{blogroot}`目录**\n\n\n```bash\ncd /www/wwwroot/{blogroot}\n```\n\n2.**初始化Hexo站点**\n\n```\nhexo init\n```\n\n3.**执行了`hexo init`后会初始化并自动生成hexo的博客根目录，其树状图如下**\n\n``` \n├── _config.yml # Hexo配置文件\n├── package.json\n├── scaffolds\n├── source # 页面和文章目录\n|   ├── _drafts\n|   └── _posts #文章目录，存放你的文章\n└── themes #主题目录，存放你的主题\n```\n\n{% note success modern %}\n\n当你完成好配置后，编译生成的静态网页文件会存放在`{blogroot}/public`文件夹\n\n{% endnote %}\n\n## 验证安装\n\n**执行以下指令**\n\n```bash\nhexo s\n```\n\n当你访问`http://localhost:4000`时是如下页面，说明Hexo安装并初始化成功，否则请返回查看是否有遗漏步骤\n\n![Hexo初始界面](\\img\\post\\1\\2.hexo.png)\n\n## 安装Butterfly主题\n\n1. **克隆 Butterfly 主题到主题目录**\n\n```bash\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n```\n\n2. **验证主题文件夹结构**\n   确保目录结构如下：\n\n```\n├── {blogroot}\n├── ├── themes\n|   ├── ├──Butterfly\n|       \t└── 主题文件\n```\n\n{% note primary modern %}\n\n{Blogroot}目录中的theme/Butterfly称作**主题目录**\n\n{% endnote %}\n\n3. **应用Butterfly主题**\n   在 `_config.yml` 中设置：\n\n``` yaml\nthemes: butterfly\n```\n\n4. 安装 pug 以及 stylus 的渲染器：\n\n```bash\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\n```\n\n5. 在{blogroot}目录创建_config.butterfly.yml_\n\n{% note primary modern %}\n\nHexo 会自动合并主题中的 **__config.yml_** 和 **__config.butterfly.yml_** 里的配置。\n\n会优先使用 **__config.butterfly.yml_** 的配置，其优先度较高。\n\n{% endnote %}\n\n如果用了 _config.butterfly.yml，那主题目录的 _config.yml 就没有用了。\n\n**后续对butterfly主题的美化配置就在_config.butterfly.yml进行修改就可以了~**\n\n## 配置博客\n\n{% note success modern %}\n\n`_config.yml`是Hexo 的[配置文件](https://hexo.io/docs/configuration)。你可以在此处配置大多数设置。当你完成好配置后，可以执行`hexo s`进行编译，生成的静态网页文件会存放在`{blogroot}/public`文件夹\n\n{% endnote %}\n\n以下是本站的_config.yml，我加上了汉化注释，你可以仿照修改。\n\n{% note info modern %}\n\n你需要修改的地方有：\n\n- 站点段\n\n- URL网址段\n\n{% endnote %}\n\n\n\n**你可以参考我的_config.yml：**\n\n```\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n# Hexo配置\n##文档:https://hexo.io/docs/configuration.html\n##来源:https://github.com/hexojs/hexo/\n\n# Site\n# 站点段\ntitle: 花生莲子粥の小窝 # 标题\nsubtitle: '青青子衿，悠悠我心' #副标题\ndescription: '' #描述\nkeywords: #关键词\nauthor: 花生莲子粥 #作者\nlanguage: zh-CN #语言\ntimezone: '' #时区，不需要加，加上不仅没用还会引起一堆问题\n\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n#网址\n##在此设置您的网站url。例如，如果您使用GitHub页面，请将url设置为“https://username.gitHub.io/project”\nurl: https://blog.hslzz.cn/ #网址\npermalink: :year/:month/:day/:title/ #永久链接\npermalink_defaults: #永久链接_默认值\npretty_urls: #美化链接\n  trailing_index: true \n  # Set to false to remove trailing 'index.html' from permalinks\n  #设置为false以从永久链接中删除尾随的“index.html”\n  trailing_html: true \n  # Set to false to remove trailing '.html' from permalinks\n  #设置为false以删除结尾'。来自永久链接的“html”\n\n# Directory\n# 目录段\n###这里不会就绝对不要改！！！会报错！！！特别是public_dir！！！改了一定报错！！！\nsource_dir: source #源目录\npublic_dir: public #公共目录\ntag_dir: tags #标签目录\narchive_dir: archives #存档目录\ncategory_dir: categories #类别目录\ncode_dir: downloads/code #源码目录，包含代码目录（source_dir)\ni18n_dir: :lang #i18n目录\nskip_render: #将被复制到 raw 但不被渲染的路径。您可以使用 glob 表达式进行路径匹配。public\n\n# Writing\n# 写作\nnew_post_name: :title.md # File name of new posts\n# 新帖子的文件名格式\ndefault_layout: post #默认布局\ntitlecase: false # Transform title into titlecase\n#将标题转换为标题大小写？\nexternal_link:\n  enable: true # Open external links in new tab\n  # 是否在新标签页中打开外部链接\n  field: site # Apply to the whole site\n  # 适用于整个网站\n  exclude: '' #排除，即在某个页面不从新标签页中打开外部链接\nfilename_case: 0 #将文件名转换为小写; 大写1 2\nrender_drafts: false #显示草稿？\npost_asset_folder: false #启用 Asset 文件夹？\nrelative_link: false #相对于根文件夹创建链接？\nfuture: true #显示未来的帖子？\nsyntax_highlighter: highlight.js #代码块语法高亮设置\nhighlight: #代码块语法高亮设置\n  line_number: true #行号\n  auto_detect: false #自动检测\n  tab_replace: '' #制表符替换\n  wrap: true #包\n  hljs: false\nprismjs: #代码块语法高亮设置\n  preprocess: true #预处理\n  line_number: true #行号\n  tab_replace: '' #制表符替换\n\n# Home page setting\n# path: Root path for your blogs index page. (default = '')\n# per_page: Posts displayed per page. (0 = disable pagination)\n# order_by: Posts order. (Order by date descending by default)\n# 首页设置\n# path:博客索引页面的根路径。(默认值=“”)\n# per_page:每页显示的帖子。(0 =禁用分页)\n# order_by:发布订单。(默认情况下按日期降序排序)\nindex_generator: #生成一个帖子存档，由 hexo-generator-index 提供支持\n  path: '' #博客索引页的根路径\n  per_page: 10 #每页显示的帖子。\n  order_by: -date #帖子顺序。默认情况下，按降序日期 （从新到旧） 排序。\n\n# Category & Tag\n# 类别 & 标签\ndefault_category: uncategorized #默认类别\ncategory_map: #覆盖类别 slug\ntag_map: #覆盖标签 slug\n\n# Metadata elements\n# 元数据元素\n## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\nmeta_generator: true #元生成器\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n\n# 日期/时间格式\n## Hexo使用Moment.js解析和显示日期\n##您可以按照中的定义自定义日期格式\n\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD #日期格式\ntime_format: HH:mm:ss #时间格式\n## updated_option supports 'mtime', 'date', 'empty'\n## 更新选项支持“时间”、“日期”、“空”\nupdated_option: 'mtime' #更新选项，在 front-matter 中未提供时要使用的更新值。\n# updated_option控制 front-matter 中未提供的值：updated\n# mtime：使用文件修改日期作为 。这是 Hexo 从 3.0.0 开始的默认行为updated\n# date：用作 .通常在文件修改日期可能不同时与 Git 工作流程一起使用。dateupdated\n# empty：未提供时只需丢弃。可能与大多数主题和插件不兼容。updated\n#empty：未提供时只需丢弃。可能与大多数主题和插件不兼容。updated\n\n\n# Pagination\n## Set per_page to 0 to disable pagination\n\n# 分页\n## 将per_page设置为0以禁用分页\nper_page: 10 #每页上显示的帖子数。 禁用分页就输入0\npagination_dir: page #URL格式\n\n\n# Include / Exclude file(s)\n## include:/exclude: options only apply to the 'source/' folder\n# 包括/排除文件\n## include:/exclude:选项仅适用于“source/”文件夹\ninclude: #包括\nexclude: #排除\nignore: #忽略\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n# 扩展\n## 插件:https://hexo.io/plugins/\n## 主题:https://hexo.io/themes/\ntheme: butterfly #填写你要用并且下好的主题名称，如果禁用主题就写false\n\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\n# 部署\n## 文件:https://hexo.io/docs/one-command-deployment\ndeploy: #部署设置\n  type: '' #类型\n```\n\n---\n\n2.**修改`_config.butterfly.yml`**\n\n{% note info no-icon %}\n\n以下是汉化标注过的主题配置文件，你可以将它复制到`_config.butterflt.yml`\n\n在汉化标注过的配置文件中，你可以快速了解到所有配置的解释，让你配置文件更加方便\n\n{% endnote %}\n\n**你可以参考我的_config.butterfly.yml：**\n\n``` yaml\n# --------------------------------------\n# 导航设置\n# --------------------------------------\n\nnav:\n  # 导航栏 Logo 图片\n  logo:\n  # 是否显示标题\n  display_title: true\n  # 是否固定导航栏\n  fixed: false\n\nmenu:\n  # 首页: / || fas fa-home\n  # 列表||fas fa-list:\n  #   音乐: /music/ || fas fa-music\n  #   电影: /movies/ || fas fa-video\n\n# --------------------------------------\n# 代码块设置\n# --------------------------------------\n\ncode_blocks:\n  # 代码块主题: darker / pale night / light / ocean / false\n  theme: light\n  # 是否使用 Mac 风格\n  macStyle: false\n  # 代码块高度限制（单位: px）\n  height_limit: false\n  # 是否自动换行\n  word_wrap: false\n\n  # 工具栏\n  # 是否显示复制按钮\n  copy: true\n  # 是否显示语言标签\n  language: true\n  # true: 收缩代码块 | false: 展开代码块 | none: 展开代码块并隐藏按钮\n  shrink: false\n  # 是否显示全屏显示代码块按钮\n  fullpage: false\n\n# 社交媒体链接\n# 格式:\n#   icon: 链接 || 描述 || 颜色\nsocial:\n\n# --------------------------------------\n# 图片设置\n# --------------------------------------\n\n# 网站的 favicon 图标\nfavicon: /img/favicon.png\n\n# 头像设置\navatar:\n  # 头像图片链接\n  img: https://i.loli.net/2021/02/24/5O1day2nriDzjSu.png\n  # 是否启用头像效果\n  effect: false\n\n# 禁用所有横幅图片\ndisable_top_img: false\n\n# 如果页面未设置横幅，则显示默认的横幅图片\ndefault_top_img:\n\n# 主页的横幅图片\nindex_img:\n\n# 归档页的横幅图片\narchive_img:\n\n# 注意: 是标签页（单个标签），不是标签页面（所有标签）\ntag_img:\n\n# 标签页的横幅图片，可以为每个标签设置横幅图片\n# 格式:\n#  - 标签名: 图片链接\ntag_per_img:\n\n# 注意: 是分类页（单个分类），不是分类页面（所有分类）\ncategory_img:\n\n# 分类页的横幅图片，可以为每个分类设置横幅图片\n# 格式:\n#  - 分类名: 图片链接\ncategory_per_img:\n\n# 页脚的背景图片\nfooter_img: false\n\n# 网站背景\n# 可以设置为颜色或图片\n# 图片格式: url(http://xxxxxx.com/xxx.jpg)\nbackground:\n\n# 封面设置\ncover:\n  # 是否禁用封面\n  index_enable: true\n  aside_enable: true\n  archives_enable: true\n  # 主页封面的位置\n  # 选择: left/right/both\n  position: both\n  # 当未设置封面时，显示默认封面\n  default_cover:\n    # - https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg\n\n# 替换损坏的图片\nerror_img:\n  # 友链页面的错误图片\n  flink: /img/friend_404.gif\n  # 文章页面的错误图片\n  post_page: /img/404.jpg\n\n# 简单的 404 页面\nerror_404:\n  # 是否启用 404 页面\n  enable: false\n  # 404 页面的副标题\n  subtitle: 'Page Not Found'\n  # 404 页面的卡片背景图片\n  background: https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png\n\n# 文章元数据设置\npost_meta:\n  # 主页页面\n  page:\n    # 日期类型: created / updated / both\n    date_type: created\n    # 日期格式: date / relative\n    date_format: date\n    # 是否显示分类\n    categories: true\n    # 是否显示标签\n    tags: false\n    # 是否显示文字标签\n    label: true\n  # 文章页面\n  post:\n    # 元数据位置: left / center\n    position: left\n    # 日期类型: created / updated / both\n    date_type: both\n    # 日期格式: date / relative\n    date_format: date\n    # 是否显示分类\n    categories: true\n    # 是否显示标签\n    tags: true\n    # 是否显示文字标签\n    label: true\n\n# --------------------------------------\n# 首页设置\n# --------------------------------------\n\n# 首页头图的设置\n# 默认: 头图全屏，站点信息在中间\n# 站点信息的位置，例如: 300px/300em/300rem/10%\nindex_site_info_top:\n# 头图的高度，例如: 300px/300em/300rem\nindex_top_img_height:\n\n# 首页的副标题设置\nsubtitle:\n  # 是否启用副标题\n  enable: false\n  # 是否启用打字机效果\n  effect: true\n  # 自定义 typed.js\n  # https://github.com/mattboldt/typed.js/#customization\n  typed_option:\n  # 来源 - 调用第三方服务 API（仅限中文）\n  # 它将首先显示来源，然后显示副标题内容\n  # 选择: false/1/2/3\n  # false - 禁用此功能\n  # 1 - hitokoto.cn\n  # 2 - yijuzhan.com\n  # 3 - jinrishici.com\n  source: false\n  # 如果关闭打字机效果，副标题将仅显示 sub 的第一行内容\n  sub:\n\n# 首页文章佈局\n# 1: 行佈局\n# 2: 列布局\nindex_layout: 1\n\n# 在首页显示文章简介\n# 1: 描述\n# 2: 两者（如果存在描述，将显示描述，否则显示自动摘要）\n# 3: 自动摘要（默认）\n# false: 不显示文章简介\nindex_post_content:\n  method: 3\n  # 如果设置 method 为 2 或 3，需要配置长度\n  length: 500\n\n# --------------------------------------\n# 文章设置\n# --------------------------------------\n\ntoc:\n  # 是否在文章中显示目录\n  post: true\n  # 是否在页面中显示目录\n  page: false\n  # 是否显示目录编号\n  number: true\n  # 是否默认展开目录\n  expand: false\n  # 是否使用简洁风格（仅适用于文章）\n  style_simple: false\n  # 是否显示滚动百分比\n  scroll_percent: true\n\npost_copyright:\n  # 是否启用版权声明\n  enable: true\n  # 是否进行文章 URL 解码\n  decode: false\n  # 作者链接\n  author_href:\n  # 许可证类型\n  license: CC BY-NC-SA 4.0\n  # 许可证链接\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/\n\n# 贊助/打赏\nreward:\n  # 是否启用打赏\n  enable: false\n  # 打赏案例文本\n  text:\n  QR_code:\n    # - img: /img/wechat.jpg\n    #   link:\n    #   text: 微信\n    # - img: /img/alipay.jpg\n    #   link:\n    #   text: 支付宝\n\n# 文章编辑\n# 轻鬆在线浏览和编辑博客源代码\npost_edit:\n  # 是否启用在线编辑\n  enable: false\n  # url: https://github.com/用户名/仓库名/edit/分支名/子目录名/\n  # 例如: https://github.com/jerryc127/butterfly.js.org/edit/main/source/\n  url:\n\n# 相关文章\nrelated_post:\n  # 是否显示相关文章\n  enable: true\n  # 显示的文章数量\n  limit: 6\n  # 选择: created / updated\n  date_type: created\n\n# 选择: 1 / 2 / false\n# 1: “下一篇文章”将链接到旧文章\n# 2: “下一篇文章”将链接到新文章\n# false: 禁用分页\npost_pagination: 1\n\n# 显示文章过期通知\nnoticeOutdate:\n  # 是否启用过期通知\n  enable: false\n  # 样式: simple / flat\n  style: flat\n  # 多少天后显示通知\n  limit_day: 365\n  # 位置: top / bottom\n  position: top\n  message_prev: 已经过了\n  message_next: 天自上次更新，文章内容可能已过时。\n\n# --------------------------------------\n# 页脚设置\n# --------------------------------------\nfooter:\n  owner:\n    # 是否启用所有者显示\n    enable: true\n    # 网站创建年份\n    since: 2019\n  # 自定义文本\n  custom_text:\n  # 主题和框架的版权声明\n  copyright: true\n\n# --------------------------------------\n# 侧边栏设置\n# --------------------------------------\n\naside:\n  # 是否启用侧边栏\n  enable: true\n  # 是否默认隐藏侧边栏\n  hide: false\n  # 是否在右下角显示隐藏侧边栏的按钮\n  button: true\n  # 移动设备上是否启用侧边栏\n  mobile: true\n  # 侧边栏位置：left / right\n  position: right\n  display:\n    # 归档页面是否显示侧边栏\n    archive: true\n    # 标签页面是否显示侧边栏\n    tag: true\n    # 分类页面是否显示侧边栏\n    category: true\n  card_author:\n    # 是否显示作者信息卡片\n    enable: true\n    # 作者描述\n    description:\n    button:\n      # 是否显示按钮\n      enable: true\n      # 按钮图标\n      icon: fab fa-github\n      # 按钮文本\n      text: Follow Me\n      # 按钮链接\n      link: https://github.com/xxxxxx\n  card_announcement:\n    # 是否显示公告卡片\n    enable: true\n    # 公告内容\n    content: This is my Blog\n  card_recent_post:\n    # 是否显示最近文章卡片\n    enable: true\n    # 显示文章数量，0 表示显示所有\n    limit: 5\n    # 排序方式：date / updated\n    sort: date\n    sort_order:\n  card_newest_comments:\n    # 是否显示最新评论卡片\n    enable: false\n    sort_order:\n    # 显示评论数量\n    limit: 6\n    # 单位：分钟，保存数据到 localStorage\n    storage: 10\n    # 是否显示头像\n    avatar: true\n  card_categories:\n    # 是否显示分类卡片\n    enable: true\n    # 显示分类数量，0 表示显示所有\n    limit: 8\n    # 选择：none / true / false\n    expand: none\n    sort_order:\n  card_tags:\n    # 是否显示标签卡片\n    enable: true\n    # 显示标签数量，0 表示显示所有\n    limit: 40\n    # 是否启用颜色\n    color: false\n    # 标签排序方式：random/name/length\n    orderby: random\n    # 排序顺序：1 表示升序，-1 表示降序\n    order: 1\n    sort_order:\n  card_archives:\n    # 是否显示归档卡片\n    enable: true\n    # 归档类型：monthly / yearly\n    type: monthly\n    # 日期格式，例如：YYYY年MM月\n    format: MMMM YYYY\n    # 排序顺序：1 表示升序，-1 表示降序\n    order: -1\n    # 显示归档数量，0 表示显示所有\n    limit: 8\n    sort_order:\n  card_post_series:\n    # 是否显示系列文章卡片\n    enable: true\n    # 标题显示系列名称\n    series_title: false\n    # 排序方式：title 或 date\n    orderBy: 'date'\n    # 排序顺序：1 表示升序，-1 表示降序\n    order: -1\n  card_webinfo:\n    # 是否显示网站信息卡片\n    enable: true\n    # 是否显示文章数量\n    post_count: true\n    # 是否显示最后推送日期\n    last_push_date: true\n    sort_order:\n    # 发佈日期与当前日期的时间差\n    # 格式：Month/Day/Year Time 或 Year/Month/Day Time\n    # 如果不启用此功能，请留空\n    runtime_date:\n\n# --------------------------------------\n# 右下角按钮设置\n# --------------------------------------\n\n# 右下角按钮与底部的距离（默认单位：px）\nrightside_bottom:\n\n# 简繁转换设置\ntranslate:\n  # 是否启用简繁转换\n  enable: false\n  # 按钮文本\n  default: 繁\n  # 网站语言（1 - 繁体中文 / 2 - 简体中文）\n  defaultEncoding: 2\n  # 转换延迟\n  translateDelay: 0\n  # 按钮在简体中文时的文本\n  msgToTraditionalChinese: '繁'\n  # 按钮在繁体中文时的文本\n  msgToSimplifiedChinese: '简'\n\n# 閲读模式\nreadmode: true\n\n# 暗黑模式设置\ndarkmode:\n  # 是否启用暗黑模式\n  enable: true\n  # 切换暗黑/明亮模式的按钮\n  button: true\n  # 是否自动切换暗黑/明亮模式\n  # autoChangeMode: 1  跟随系统设置，如果系统不支持暗黑模式，则在晚上 6 点到早上 6 点之间切换暗黑模式\n  # autoChangeMode: 2  在晚上 6 点到早上 6 点之间切换暗黑模式\n  # autoChangeMode: false  不自动切换\n  autoChangeMode: false\n  # 设置明亮模式时间，值在 0 到 24 之间。如果未设置，默认值为 6 和 18\n  start:\n  end:\n\n# 在返回顶部按钮中显示滚动百分比\nrightside_scroll_percent: false\n\n# 不要修改以下设置，除非你知道它们的工作原理\n# 选择：readmode,translate,darkmode,hideAside,toc,chat,comment\n# 不要重复相同的值\nrightside_item_order:\n  # 是否启用右侧项目顺序\n  enable: false\n  # 隐藏的默认项目：readmode,translate,darkmode,hideAside\n  hide:\n  # 显示的默认项目：toc,chat,comment\n  show:\n\n# --------------------------------------\n# 全局设置\n# --------------------------------------\n\n# 锚点设置\nanchor:\n  # 滚动时，URL 将根据标题 ID 更新\n  auto_update: false\n  # 点击标题滚动并更新锚点\n  click_to_scroll: false\n\n# 图片标题\nphotofigcaption: false\n\n# 复制设置\ncopy:\n  # 是否启用复制功能\n  enable: true\n  # 在复制的内容后添加版权信息\n  copyright:\n    enable: false\n    # 当复制字符数超过 limit_count 时添加版权信息\n    limit_count: 150\n\n# 需要安装 hexo-wordcount 插件\nwordcount:\n  # 是否启用字数统计\n  enable: false\n  # 在文章元信息中显示字数统计\n  post_wordcount: true\n  # 在文章元信息中显示閲读时间\n  min2read: true\n  # 在侧边栏网站信息中显示总字数\n  total_wordcount: true\n\n# 不蒜子 PV / UV 统计\nbusuanzi:\n  # 网站 UV 统计\n  site_uv: true\n  # 网站 PV 统计\n  site_pv: true\n  # 页面 PV 统计\n  page_pv: true\n\n# --------------------------------------\n# 数学公式设置\n# --------------------------------------\n\n# 关于 per_page\n# 如果设置为 true，将在每个页面加载 mathjax/katex 脚本\n# 如果设置为 false，将根据你的设置加载 mathjax/katex 脚本（在页面的 front-matter 中添加 'mathjax: true' 或者 'katex: true'）\nmath:\n  # 选择：mathjax, katex\n  # 如果不需要数学公式，保持为空\n  use:\n  per_page: true\n  hide_scrollbar: false\n\n  mathjax:\n    # 启用上下文菜单\n    enableMenu: true\n    # 选择：all / ams / none，这控制是否对公式编号以及如何编号\n    tags: none\n\n  katex:\n    # 启用复制 KaTeX 公式\n    copy_tex: false\n\n# --------------------------------------\n# 搜索设置\n# --------------------------------------\n\nsearch:\n  # 选择：algolia_search / local_search / docsearch\n  # 如果不需要搜索功能，保持为空\n  use:\n  placeholder:\n\n  # Algolia 搜索\n  algolia_search:\n    # 每页搜索结果数量\n    hitsPerPage: 6\n\n  # 本地搜索\n  local_search:\n    # 页面加载时预加载搜索数据\n    preload: false\n    # 每篇文章显示的顶部 n 个搜索结果，设置为 -1 显示所有结果\n    top_n_per_article: 1\n    # 将 HTML 字符串反转义为可读内容\n    unescape: false\n    CDN:\n\n  # Docsearch\n  # https://docsearch.algolia.com/\n  docsearch:\n    appId:\n    apiKey:\n    indexName:\n    option:\n\n# --------------------------------------\n# 分享系统\n# --------------------------------------\n\nshare:\n  # 选择：sharejs / addtoany\n  # 如果不需要分享功能，保持为空\n  use: sharejs\n\n  # Share.js\n  # https://github.com/overtrue/share.js\n  sharejs:\n    sites: facebook,twitter,wechat,weibo,qq\n\n  # AddToAny\n  # https://www.addtoany.com/\n  addtoany:\n    item: facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link\n\n# --------------------------------------\n# 评论系统\n# --------------------------------------\n\ncomments:\n  # 最多两个评论系统，第一个将作为默认显示\n  # 如果不需要评论功能，保持为空\n  # 选择：Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk\n  # 两个评论系统的格式：Disqus,Waline\n  use:\n  # 按钮旁边显示评论系统名称\n  text: true\n  # 懒加载：评论系统将在评论元素进入浏览器视口时加载\n  # 如果设置为 true，评论计数将无效\n  lazyload: false\n  # 在文章顶部图片中显示评论计数\n  count: false\n  # 在主页显示评论计数\n  card_post_count: false\n\n# Disqus 评论插件配置\n# 官方文档：https://disqus.com/\ndisqus:\n  # Disqus 的 shortname\n  shortname:\n  # 最新评论小部件的 API 密钥\n  apikey:\n\n# 使用 Disqus API 渲染评论的替代方案\n# 官方文档：https://github.com/SukkaW/DisqusJS\ndisqusjs:\n  # Disqus 的 shortname\n  shortname:\n  # API 密钥\n  apikey:\n  # 其他可选配置\n  option:\n\n# Livere 评论插件配置\n# 官方文档：https://www.livere.com/\nlivere:\n  # Livere 的用户 ID\n  uid:\n\n# Gitalk 评论插件配置\n# 官方文档：https://github.com/gitalk/gitalk\ngitalk:\n  # GitHub 应用的客户端 ID\n  client_id:\n  # GitHub 应用的客户端密钥\n  client_secret:\n  # 存储评论的仓库名称\n  repo:\n  # 仓库拥有者的用户名\n  owner:\n  # 管理员用户名列表\n  admin:\n  # 其他可选配置\n  option:\n\n# Valine 评论插件配置\n# 官方文档：https://valine.js.org\nvaline:\n  # LeanCloud 应用的 appId\n  appId:\n  # LeanCloud 应用的 appKey\n  appKey:\n  # 评论者头像样式\n  avatar: monsterid\n  # 该配置适用于国内自定义域名用户，海外版本将自动检测（无需手动填写）\n  serverURLs:\n  # 评论框背景图片\n  bg:\n  # 使用 Valine 的访客计数作为页面的访客量\n  visitor: false\n  # 其他可选配置\n  option:\n\n# Waline 评论插件配置，一个简单的评论系统，基于 Valine 开发，支持后端\n# 官方文档：https://waline.js.org/\nwaline:\n  # 服务器 URL\n  serverURL:\n  # 评论框背景图片\n  bg:\n  # 使用 Waline 的访客计数作为页面的访客量\n  pageview: false\n  # 其他可选配置\n  option:\n\n# Utterances 评论插件配置\n# 官方文档：https://utteranc.es/\nutterances:\n  # 存储评论的 GitHub 仓库\n  repo:\n  # 问题映射方式，可选值：pathname/url/title/og:title\n  issue_term: pathname\n  # 浅色主题，可选值：github-light\n  light_theme: github-light\n  # 深色主题，可选值：photon-dark\n  dark_theme: photon-dark\n\n# Facebook 评论插件配置\n# 官方文档：https://developers.facebook.com/docs/plugins/comments/\nfacebook_comments:\n  # 应用 ID\n  app_id:\n  # 用户 ID，可选\n  user_id:\n  # 每页显示评论数\n  pageSize: 10\n  # 评论排序方式，可选值：social / time / reverse_time\n  order_by: social\n  # 语言设置\n  lang: zh_TW\n\n# Twikoo 评论插件配置\n# 官方文档：https://github.com/imaegoo/twikoo\ntwikoo:\n  # 环境 ID\n  envId:\n  # 区域\n  region:\n  # 使用 Twikoo 的访客计数作为页面的访客量\n  visitor: false\n  # 其他可选配置\n  option:\n\n# Giscus 评论插件配置\n# 官方文档：https://giscus.app/\ngiscus:\n  # 仓库地址\n  repo:\n  # 仓库 ID\n  repo_id:\n  # 分类 ID\n  category_id:\n  # 主题配置，light 为浅色主题，dark 为深色主题\n  theme:\n    light: light\n    dark: dark\n  # 其他可选配置\n  option:\n\n# Remark42 评论插件配置\n# 官方文档：https://remark42.com/docs/configuration/frontend/\nremark42:\n  # 服务器地址\n  host:\n  # 站点 ID\n  siteId:\n  # 其他可选配置\n  option:\n\n# Artalk 评论插件配置\n# 官方文档：https://artalk.js.org/guide/frontend/config.html\nartalk:\n  # 服务器地址\n  server:\n  # 站点名\n  site:\n  # 使用 Artalk 的访客计数作为页面的访客量\n  visitor: false\n  # 其他可选配置\n  option:\n\n# --------------------------------------\n# 聊天服务配置\n# --------------------------------------\n\nchat:\n  # 聊天服务类型，可选值：chatra/tidio/crisp，如果不需要聊天功能则留空\n  use:\n  # 推荐使用聊天按钮，会在网站右下角创建一个按钮，并隐藏原始按钮\n  rightside_button: false\n  # 原始聊天按钮在向上滚动时显示，向下滚动时隐藏\n  button_hide_show: false\n\n# Chatra 聊天服务配置\n# 官方网站：https://chatra.io/\nchatra:\n  # Chatra 服务 ID\n  id:\n\n# Tidio 聊天服务配置\n# 官方网站：https://www.tidio.com/\ntidio:\n  # Tidio 公钥\n  public_key:\n\n# Crisp 聊天服务配置\n# 官方网站：https://crisp.chat/en/\ncrisp:\n  # Crisp 网站 ID\n  website_id:\n\n# --------------------------------------\n# 分析服务配置\n# --------------------------------------\n\n# 百度统计配置\n# 官方网站：https://tongji.baidu.com/web/welcome/login\nbaidu_analytics:\n\n# 谷歌分析配置\n# 官方网站：https://analytics.google.com/analytics/web/\ngoogle_analytics:\n\n# Cloudflare 分析配置\n# 官方网站：https://www.cloudflare.com/zh-tw/web-analytics/\ncloudflare_analytics:\n\n# Microsoft Clarity 分析配置\n# 官方网站：https://clarity.microsoft.com/\nmicrosoft_clarity:\n\n# --------------------------------------\n# 广告配置\n# --------------------------------------\n\n# Google Adsense 广告配置\ngoogle_adsense:\n  # 是否启用\n  enable: false\n  # 是否自动投放广告\n  auto_ads: true\n  # 广告脚本 URL\n  js: https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\n  # 客户 ID\n  client:\n  # 是否启用页面级广告\n  enable_page_level_ads: true\n\n# 手动插入广告配置，如果不需要广告则留空\nad:\n  # 在首页每三个帖子后插入广告\n  index:\n  # 在侧边栏插入广告\n  aside:\n  # 在文章分页前插入广告\n  post:\n\n# --------------------------------------\n# 站点验证配置\n# --------------------------------------\n\nsite_verification:\n  # 示例：\n  # - name: google-site-verification\n  #   content: xxxxxx\n  # - name: baidu-site-verification\n  #   content: xxxxxxx\n\n# --------------------------------------\n# 美化 / 效果\n# --------------------------------------\n\n# 主题颜色自定义\n# 注意：颜色值必须用双引号，如 \"#000\"，否则可能会导致错误！\n\n# 主题颜色配置\n# theme_color:\n#   是否启用主题颜色\n#   enable: true\n#   主颜色\n#   main: \"#49B1F5\"\n#   分页器颜色\n#   paginator: \"#00c4b6\"\n#   按钮悬停颜色\n#   button_hover: \"#FF7242\"\n#   文本选择颜色\n#   text_selection: \"#00c4b6\"\n#   链接颜色\n#   link_color: \"#99a9bf\"\n#   元数据颜色\n#   meta_color: \"#858585\"\n#   水平线颜色\n#   hr_color: \"#A4D8FA\"\n#   代码前景色\n#   code_foreground: \"#F47466\"\n#   代码背景色\n#   code_background: \"rgba(27, 31, 35, .05)\"\n#   目录颜色\n#   toc_color: \"#00c4b6\"\n#   引用块填充颜色\n#   blockquote_padding_color: \"#49b1f5\"\n#   引用块背景颜色\n#   blockquote_background_color: \"#49b1f5\"\n#   滚动条颜色\n#   scrollbar_color: \"#49b1f5\"\n#   浅色模式下的主题颜色\n#   meta_theme_color_light: \"ffffff\"\n#   深色模式下的主题颜色\n#   meta_theme_color_dark: \"#0d0d0d\"\n\n# 分类和标签页面的用户界面设置\n# 选择：index - 与主页 UI 相同 / default - 与归档 UI 相同\n# 留空或设置为 index\ncategory_ui:\ntag_ui:\n\n# 拉伸行使每行宽度相等\ntext_align_justify: false\n\n# 为页眉和页脚添加遮罩\nmask:\n  header: true\n  footer: true\n\n# 加载动画\npreloader:\n  # 是否启用加载动画\n  enable: false\n  # 资源\n  # 1. 全屏加载\n  # 2. 进度条\n  source: 1\n  # pace 主题 (参见 https://codebyzach.github.io/pace/)\n  pace_css_url:\n\n# 页面过渡效果\nenter_transitions: true\n\n# 默认显示模式 - light (默认) / dark\ndisplay_mode: light\n\n# 美化文章内容的配置\nbeautify:\n  # 是否启用美化\n  enable: false\n  # 指定美化的范围 (site 或 post)\n  field: post\n  # 指定标题前缀图标，如 '\\f0c1'\n  title-prefix-icon:\n  # 指定标题前缀图标的颜色，如 '#F47466'\n  title-prefix-icon-color:\n\n# 全局字体设置\n# 除非您知道它们的工作原理，否则不要修改以下设置\nfont:\n  global-font-size:\n  code-font-size:\n  font-family:\n  code-font-family:\n\n# 网站标题和副标题的字体设置\nblog_title_font:\n  font_link:\n  font-family:\n\n# 分隔符图标的设置\nhr_icon:\n  # 是否启用分隔符图标\n  enable: true\n  # Font Awesome 图标的 unicode 值，如 '\\3423'\n  icon:\n  icon-top:\n\n# 打字机效果\n# https://github.com/disjukr/activate-power-mode\nactivate_power_mode:\n  # 是否启用打字机效果\n  enable: false\n  # 是否启用彩色效果\n  colorful: true\n  # 是否启用震动效果\n  shake: true\n  # 是否在移动设备上启用\n  mobile: false\n\n# 背景效果\n# --------------------------------------\n\n# canvas_ribbon\n# 参见: https://github.com/hustcc/ribbon.js\ncanvas_ribbon:\n  # 是否启用 canvas_ribbon\n  enable: false\n  # ribbon 的大小\n  size: 150\n  # ribbon 的不透明度 (0 ~ 1)\n  alpha: 0.6\n  zIndex: -1\n  # 是否点击更改颜色\n  click_to_change: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# Fluttering Ribbon\ncanvas_fluttering_ribbon:\n  # 是否启用 Fluttering Ribbon\n  enable: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# canvas_nest\n# https://github.com/hustcc/canvas-nest.js\ncanvas_nest:\n  # 是否启用 canvas_nest\n  enable: false\n  # 线条颜色，默认: '0,0,0'; RGB 值: (R,G,B).(注意: 使用 ',' 分隔.)\n  color: '0,0,255'\n  # 线条的不透明度 (0~1)\n  opacity: 0.7\n  # 背景的 z-index 属性\n  zIndex: -1\n  # 线条数量\n  count: 99\n  # 是否在移动设备上启用\n  mobile: false\n\n# 鼠标点击效果: 烟花\nfireworks:\n  # 是否启用烟花效果\n  enable: false\n  zIndex: 9999\n  # 是否在移动设备上启用\n  mobile: false\n\n# 鼠标点击效果: 心形符号\nclick_heart:\n  # 是否启用心形符号效果\n  enable: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# 鼠标点击效果: 文字\nclickShowText:\n  # 是否启用文字效果\n  enable: false\n  text:\n    # - I\n    # - LOVE\n    # - YOU\n  fontSize: 15px\n  # 是否随机显示文字\n  random: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# --------------------------------------\n# 灯箱设置\n# --------------------------------------\n\n# 选择: fancybox / medium_zoom\n# https://github.com/francoischalifour/medium-zoom\n# https://fancyapps.com/fancybox/\n# 如果不需要灯箱效果，请留空\nlightbox:\n\n# --------------------------------------\n# 标签外挂设置\n# --------------------------------------\n\n# 系列\nseries:\n  # 是否启用系列\n  enable: false\n  # 按标题或日期排序\n  orderBy: 'title'\n  # 排序方式。1, asc 为升序; -1, desc 为降序\n  order: 1\n  # 是否显示编号\n  number: true\n\n# ABCJS - ABC 音乐符号插件\n# https://github.com/paulrosen/abcjs\nabcjs:\n  # 是否启用 ABCJS\n  enable: false\n  # 是否每页启用\n  per_page: true\n\n# Mermaid\n# https://github.com/mermaid-js/mermaid\nmermaid:\n  # 是否启用 Mermaid\n  enable: false\n  # 使用代码块编写 Mermaid 图表\n  code_write: false\n  # 内置主题: default / forest / dark / neutral\n  theme:\n    light: default\n    dark: dark\n\n# chartjs\n# 参见 https://www.chartjs.org/docs/latest/\nchartjs:\n  enable: false\n  # 除非你了解它们的工作原理，否则不要修改。\n  # 默认设置仅在未指定 MD 语法时使用。\n  # 图表的字体颜色\n  fontColor:\n    light: \"rgba(0, 0, 0, 0.8)\"\n    dark: \"rgba(255, 255, 255, 0.8)\"\n  # 图表的边框颜色\n  borderColor:\n    light: \"rgba(0, 0, 0, 0.1)\"\n    dark: \"rgba(255, 255, 255, 0.2)\"\n  # 雷达图和极区图的刻度标签背景颜色\n  scale_ticks_backdropColor:\n    light: \"transparent\"\n    dark: \"transparent\"\n\n# Note - Bootstrap 提示框\nnote:\n  # Note 标签样式值:\n  #  - simple    bs-callout 旧警告样式。默认。\n  #  - modern    bs-callout 新 (v2-v3) 警告样式。\n  #  - flat      扁平提示框样式，带背景，如 Mozilla 或 StackOverflow。\n  #  - disabled  禁用所有 Note 标签的 CSS 样式。\n  style: flat\n  # 是否显示图标\n  icons: true\n  # 边框半径\n  border_radius: 3\n  # 背景颜色偏移百分比 (modern: -12 | 12; flat: -18 | 6)。\n  # 也应用于标签变量。此选项可与禁用的 Note 标签一起使用。\n  light_bg_offset: 0\n\n# --------------------------------------\n# 其他设置\n# --------------------------------------\n\n# https://github.com/MoOx/pjax\npjax:\n  # 是否启用 pjax\n  enable: false\n  # 排除指定页面不使用 pjax，如 '/music/'\n  exclude:\n    # - /xxxxxx/\n\n# 注入 CSS 和脚本 (aplayer/meting)\naplayerInject:\n  # 是否启用注入\n  enable: false\n  # 是否每页启用\n  per_page: true\n\n# Snackbar - Toast 通知\n# https://github.com/polonel/SnackBar\n# 位置: top-left / top-center / top-right / bottom-left / bottom-center / bottom-right\nsnackbar:\n  # 是否启用 Snackbar\n  enable: false\n  # 通知位置\n  position: bottom-left\n  # 浅色模式和深色模式下的通知背景颜色\n  bg_light: '#49b1f5'\n  bg_dark: '#1f1f1f'\n\n# Instant.page\n# https://instant.page/\ninstantpage: false\n\n# Pangu - 在中文字符和英文字符之间插入空格\n# https://github.com/vinta/pangu.js\npangu:\n  # 是否启用 Pangu\n  enable: false\n  # 指定使用 Pangu 的范围(site 或 post)\n  field: site\n\n# Lazyload\n# https://github.com/verlok/vanilla-lazyload\nlazyload:\n  # 是否启用 Lazyload\n  enable: false\n  # 指定使用 Lazyload 的范围 (site 或 post)\n  field: site\n  placeholder:\n  blur: false\n\n# PWA\n# 参见 https://github.com/JLHwung/hexo-offline\n# ---------------\npwa:\n  # 是否启用 PWA\n  enable: false\n  # PWA manifest 文件路径\n  manifest:\n  # Apple Touch 图标路径\n  apple_touch_icon:\n  # 32x32 像素的 favicon 图标路径\n  favicon_32_32:\n  # 16x16 像素的 favicon 图标路径\n  favicon_16_16:\n  # mask 图标路径\n  mask_icon:\n\n# Open graph meta tags\n# 参见 https://hexo.io/docs/helpers#open-graph\nOpen_Graph_meta:\n  # 是否启用 Open Graph meta 标签\n  enable: true\n  option:\n    # twitter_card:\n    # twitter_image:\n    # twitter_id:\n    # twitter_site:\n    # google_plus:\n    # fb_admins:\n    # fb_app_id:\n\n# 添加供应商前缀以确保兼容性\n# 是否启用 CSS 前缀\ncss_prefix: true\n\n# Inject\n# 插入代码到 head（在 '</head>' 标签之前）和底部（在 '</body>' 标签之前）\ninject:\n  head:\n    # - <link rel=\"stylesheet\" href=\"/xxx.css\">\n  bottom:\n    # - <script src=\"xxxx\"></script>\n\n# CDN 设置\n# 除非你知道它们的工作原理，否则不要修改以下设置\nCDN:\n  # 内部和第三方脚本的 CDN 提供商\n  # 两者的选项：local/jsdelivr/unpkg/cdnjs/custom\n  # 注意： Dev 版本只能使用 'local' 作为内部脚本\n  # 注意：将第三方脚本设置为 'local' 时，需要安装 hexo-butterfly-extjs\n  internal_provider: local\n  third_party_provider: jsdelivr\n\n  # 是否在 URL 中添加版本号，true 或 false\n  version: false\n\n  # 自定义格式\n  # 例如：https://cdn.staticfile.org/${cdnjs_name}/${version}/${min_cdnjs_file}\n  custom_format:\n\n  option:\n\n```\n","source":"_posts/1.安装Hexo+Butterfly.md","raw":"---\ntitle: Hexo + Butterfly博客安装教程\ndate: 2024-12-06 11:00:00\nupdated: 2025-02-17 12:50:00\ntags:\n  - Hexo\n  - Butterfly\n  - 教程\ncategories:\n  - Hexo\ndescription: 阅读这篇完整指南，了解安装Hexo+Butterfly博客的方法。手把手教你从零开始搭建个人博客。零基础也能轻松上手！\nseries: 1\n---\n\n# 安装Hexo和Butterfly主题\n\n## 在Ubuntu/Linux下安装\n\n### 安装npm\n\n\n```bash\napt install npm\n```\n\n验证 npm 是否安装成功\n\n```bash\nnpm -v\n```\n### 安装Node.js\n\n1.**用npm安装node包管理器**\n\n```bash\nnpm install n -g\n```\n\n2.**安装 Node.js LTS 版本**\n\n```\nn lts\n```\n\n此时会同时更新npm\n\n3.**验证 Node.js 和 npm 版本**\n\n```bash\nnode -v\n```\n\n```bash\nnpm -v\n```\n\n## 在Windows系统下安装\n\n1.**访问 [Node.js](https://nodejs.org/zh-cn) 官网下载下载安装包**\n  https://nodejs.org/zh-cn\n  ![第一步](/img/post/1/3.nodejs.png)\n\n2.**安装步骤**\n\n- 点击 \"Next\"\n![第二步](/img/post/1/4.nodejs.png)\n\n- 勾选协议并继续\n  ![第三步](/img/post/1/5.nodejs.png)\n\n- 选择安装路径，然后Next\n  ![第四步](/img/post/1/6.nodejs.png)\n\n- 保持默认设置，点击 \"Next\"\n  ![node](/img/post/1/7.nodejs.png)\n\n- **不要勾选它**，Next\n  ![node](/img/post/1/8.nodejs.png)\n\n- 点击 \"Install\" 开始安装。\n  ![node](/img/post/1/9.nodejs.png)\n\n- 现在就开始安装了，等它安装好\n  ![node](/img/post/1/10.nodejs.png)\n\n3.**验证安装**\n\n```\nnode -v\nnpm -v\n```\n\n出于安全考虑，PowerShell 有时候会阻止运行脚本，可能会出现报错：\n  在powershell中输入 `Get-ExecutionPolicy`，回车，看看当前的策略是什么。\n\n```bash\nGet-ExecutionPolicy\n```\n   如果是 `Restricted`，可以改成 `RemoteSigned` 或者 `Unrestricted`（不过 `Unrestricted` 有点不安全，不太推荐）。\n   **修改策略的命令是 `Set-ExecutionPolicy RemoteSigned`。**\n\n```\nSet-ExecutionPolicy RemoteSigned\n```\n\n然后会提示你确认，输入 `Y`，再回车。\n\n## npm改源\n\n| 镜像名称       | 镜像地址                        |\n| -------------- | ------------------------------- |\n| 淘宝源（推荐） | https://registry.npmmirror.com  |\n| 腾讯云源       | http://mirrors.tencent.com/npm/ |\n\n1.**运行以下命令**：\n\n```\nnpm config set registry https://registry.npmmirror.com\n```\n\n2.**如果是腾讯云源需要进行如下操作：**\n\n1. 避免 SSL 校验失败：\n\n```\nnpm config set strict-ssl false\n```\n\n2. 移除代理配置：\n\n```\nnpm config delete proxy\nnpm config delete https-proxy\n```\n\n3.**查看配置信息：**\n\n```\nnpm config list\n```\n\n注意：**npm config list 的结果不应出现 proxy 配置**，否则容易出现 npm 组件下载/上传失败的情况\n\n## 安装Hexo\n\n1.**全局安装 Hexo**\n\n```\nnpm install hexo-cli -g\n```\n\n2.**验证 Hexo 是否安装成功**\n\n```\nhexo -v\n```\n\n## 初始化Hexo博客\n\n1.**创建一个博客根目录并进入。以下简称博客根目录为`{blogroot}`目录**\n\n\n```bash\ncd /www/wwwroot/{blogroot}\n```\n\n2.**初始化Hexo站点**\n\n```\nhexo init\n```\n\n3.**执行了`hexo init`后会初始化并自动生成hexo的博客根目录，其树状图如下**\n\n``` \n├── _config.yml # Hexo配置文件\n├── package.json\n├── scaffolds\n├── source # 页面和文章目录\n|   ├── _drafts\n|   └── _posts #文章目录，存放你的文章\n└── themes #主题目录，存放你的主题\n```\n\n{% note success modern %}\n\n当你完成好配置后，编译生成的静态网页文件会存放在`{blogroot}/public`文件夹\n\n{% endnote %}\n\n## 验证安装\n\n**执行以下指令**\n\n```bash\nhexo s\n```\n\n当你访问`http://localhost:4000`时是如下页面，说明Hexo安装并初始化成功，否则请返回查看是否有遗漏步骤\n\n![Hexo初始界面](\\img\\post\\1\\2.hexo.png)\n\n## 安装Butterfly主题\n\n1. **克隆 Butterfly 主题到主题目录**\n\n```bash\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n```\n\n2. **验证主题文件夹结构**\n   确保目录结构如下：\n\n```\n├── {blogroot}\n├── ├── themes\n|   ├── ├──Butterfly\n|       \t└── 主题文件\n```\n\n{% note primary modern %}\n\n{Blogroot}目录中的theme/Butterfly称作**主题目录**\n\n{% endnote %}\n\n3. **应用Butterfly主题**\n   在 `_config.yml` 中设置：\n\n``` yaml\nthemes: butterfly\n```\n\n4. 安装 pug 以及 stylus 的渲染器：\n\n```bash\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\n```\n\n5. 在{blogroot}目录创建_config.butterfly.yml_\n\n{% note primary modern %}\n\nHexo 会自动合并主题中的 **__config.yml_** 和 **__config.butterfly.yml_** 里的配置。\n\n会优先使用 **__config.butterfly.yml_** 的配置，其优先度较高。\n\n{% endnote %}\n\n如果用了 _config.butterfly.yml，那主题目录的 _config.yml 就没有用了。\n\n**后续对butterfly主题的美化配置就在_config.butterfly.yml进行修改就可以了~**\n\n## 配置博客\n\n{% note success modern %}\n\n`_config.yml`是Hexo 的[配置文件](https://hexo.io/docs/configuration)。你可以在此处配置大多数设置。当你完成好配置后，可以执行`hexo s`进行编译，生成的静态网页文件会存放在`{blogroot}/public`文件夹\n\n{% endnote %}\n\n以下是本站的_config.yml，我加上了汉化注释，你可以仿照修改。\n\n{% note info modern %}\n\n你需要修改的地方有：\n\n- 站点段\n\n- URL网址段\n\n{% endnote %}\n\n\n\n**你可以参考我的_config.yml：**\n\n```\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n# Hexo配置\n##文档:https://hexo.io/docs/configuration.html\n##来源:https://github.com/hexojs/hexo/\n\n# Site\n# 站点段\ntitle: 花生莲子粥の小窝 # 标题\nsubtitle: '青青子衿，悠悠我心' #副标题\ndescription: '' #描述\nkeywords: #关键词\nauthor: 花生莲子粥 #作者\nlanguage: zh-CN #语言\ntimezone: '' #时区，不需要加，加上不仅没用还会引起一堆问题\n\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n#网址\n##在此设置您的网站url。例如，如果您使用GitHub页面，请将url设置为“https://username.gitHub.io/project”\nurl: https://blog.hslzz.cn/ #网址\npermalink: :year/:month/:day/:title/ #永久链接\npermalink_defaults: #永久链接_默认值\npretty_urls: #美化链接\n  trailing_index: true \n  # Set to false to remove trailing 'index.html' from permalinks\n  #设置为false以从永久链接中删除尾随的“index.html”\n  trailing_html: true \n  # Set to false to remove trailing '.html' from permalinks\n  #设置为false以删除结尾'。来自永久链接的“html”\n\n# Directory\n# 目录段\n###这里不会就绝对不要改！！！会报错！！！特别是public_dir！！！改了一定报错！！！\nsource_dir: source #源目录\npublic_dir: public #公共目录\ntag_dir: tags #标签目录\narchive_dir: archives #存档目录\ncategory_dir: categories #类别目录\ncode_dir: downloads/code #源码目录，包含代码目录（source_dir)\ni18n_dir: :lang #i18n目录\nskip_render: #将被复制到 raw 但不被渲染的路径。您可以使用 glob 表达式进行路径匹配。public\n\n# Writing\n# 写作\nnew_post_name: :title.md # File name of new posts\n# 新帖子的文件名格式\ndefault_layout: post #默认布局\ntitlecase: false # Transform title into titlecase\n#将标题转换为标题大小写？\nexternal_link:\n  enable: true # Open external links in new tab\n  # 是否在新标签页中打开外部链接\n  field: site # Apply to the whole site\n  # 适用于整个网站\n  exclude: '' #排除，即在某个页面不从新标签页中打开外部链接\nfilename_case: 0 #将文件名转换为小写; 大写1 2\nrender_drafts: false #显示草稿？\npost_asset_folder: false #启用 Asset 文件夹？\nrelative_link: false #相对于根文件夹创建链接？\nfuture: true #显示未来的帖子？\nsyntax_highlighter: highlight.js #代码块语法高亮设置\nhighlight: #代码块语法高亮设置\n  line_number: true #行号\n  auto_detect: false #自动检测\n  tab_replace: '' #制表符替换\n  wrap: true #包\n  hljs: false\nprismjs: #代码块语法高亮设置\n  preprocess: true #预处理\n  line_number: true #行号\n  tab_replace: '' #制表符替换\n\n# Home page setting\n# path: Root path for your blogs index page. (default = '')\n# per_page: Posts displayed per page. (0 = disable pagination)\n# order_by: Posts order. (Order by date descending by default)\n# 首页设置\n# path:博客索引页面的根路径。(默认值=“”)\n# per_page:每页显示的帖子。(0 =禁用分页)\n# order_by:发布订单。(默认情况下按日期降序排序)\nindex_generator: #生成一个帖子存档，由 hexo-generator-index 提供支持\n  path: '' #博客索引页的根路径\n  per_page: 10 #每页显示的帖子。\n  order_by: -date #帖子顺序。默认情况下，按降序日期 （从新到旧） 排序。\n\n# Category & Tag\n# 类别 & 标签\ndefault_category: uncategorized #默认类别\ncategory_map: #覆盖类别 slug\ntag_map: #覆盖标签 slug\n\n# Metadata elements\n# 元数据元素\n## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\nmeta_generator: true #元生成器\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n\n# 日期/时间格式\n## Hexo使用Moment.js解析和显示日期\n##您可以按照中的定义自定义日期格式\n\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD #日期格式\ntime_format: HH:mm:ss #时间格式\n## updated_option supports 'mtime', 'date', 'empty'\n## 更新选项支持“时间”、“日期”、“空”\nupdated_option: 'mtime' #更新选项，在 front-matter 中未提供时要使用的更新值。\n# updated_option控制 front-matter 中未提供的值：updated\n# mtime：使用文件修改日期作为 。这是 Hexo 从 3.0.0 开始的默认行为updated\n# date：用作 .通常在文件修改日期可能不同时与 Git 工作流程一起使用。dateupdated\n# empty：未提供时只需丢弃。可能与大多数主题和插件不兼容。updated\n#empty：未提供时只需丢弃。可能与大多数主题和插件不兼容。updated\n\n\n# Pagination\n## Set per_page to 0 to disable pagination\n\n# 分页\n## 将per_page设置为0以禁用分页\nper_page: 10 #每页上显示的帖子数。 禁用分页就输入0\npagination_dir: page #URL格式\n\n\n# Include / Exclude file(s)\n## include:/exclude: options only apply to the 'source/' folder\n# 包括/排除文件\n## include:/exclude:选项仅适用于“source/”文件夹\ninclude: #包括\nexclude: #排除\nignore: #忽略\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n# 扩展\n## 插件:https://hexo.io/plugins/\n## 主题:https://hexo.io/themes/\ntheme: butterfly #填写你要用并且下好的主题名称，如果禁用主题就写false\n\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\n# 部署\n## 文件:https://hexo.io/docs/one-command-deployment\ndeploy: #部署设置\n  type: '' #类型\n```\n\n---\n\n2.**修改`_config.butterfly.yml`**\n\n{% note info no-icon %}\n\n以下是汉化标注过的主题配置文件，你可以将它复制到`_config.butterflt.yml`\n\n在汉化标注过的配置文件中，你可以快速了解到所有配置的解释，让你配置文件更加方便\n\n{% endnote %}\n\n**你可以参考我的_config.butterfly.yml：**\n\n``` yaml\n# --------------------------------------\n# 导航设置\n# --------------------------------------\n\nnav:\n  # 导航栏 Logo 图片\n  logo:\n  # 是否显示标题\n  display_title: true\n  # 是否固定导航栏\n  fixed: false\n\nmenu:\n  # 首页: / || fas fa-home\n  # 列表||fas fa-list:\n  #   音乐: /music/ || fas fa-music\n  #   电影: /movies/ || fas fa-video\n\n# --------------------------------------\n# 代码块设置\n# --------------------------------------\n\ncode_blocks:\n  # 代码块主题: darker / pale night / light / ocean / false\n  theme: light\n  # 是否使用 Mac 风格\n  macStyle: false\n  # 代码块高度限制（单位: px）\n  height_limit: false\n  # 是否自动换行\n  word_wrap: false\n\n  # 工具栏\n  # 是否显示复制按钮\n  copy: true\n  # 是否显示语言标签\n  language: true\n  # true: 收缩代码块 | false: 展开代码块 | none: 展开代码块并隐藏按钮\n  shrink: false\n  # 是否显示全屏显示代码块按钮\n  fullpage: false\n\n# 社交媒体链接\n# 格式:\n#   icon: 链接 || 描述 || 颜色\nsocial:\n\n# --------------------------------------\n# 图片设置\n# --------------------------------------\n\n# 网站的 favicon 图标\nfavicon: /img/favicon.png\n\n# 头像设置\navatar:\n  # 头像图片链接\n  img: https://i.loli.net/2021/02/24/5O1day2nriDzjSu.png\n  # 是否启用头像效果\n  effect: false\n\n# 禁用所有横幅图片\ndisable_top_img: false\n\n# 如果页面未设置横幅，则显示默认的横幅图片\ndefault_top_img:\n\n# 主页的横幅图片\nindex_img:\n\n# 归档页的横幅图片\narchive_img:\n\n# 注意: 是标签页（单个标签），不是标签页面（所有标签）\ntag_img:\n\n# 标签页的横幅图片，可以为每个标签设置横幅图片\n# 格式:\n#  - 标签名: 图片链接\ntag_per_img:\n\n# 注意: 是分类页（单个分类），不是分类页面（所有分类）\ncategory_img:\n\n# 分类页的横幅图片，可以为每个分类设置横幅图片\n# 格式:\n#  - 分类名: 图片链接\ncategory_per_img:\n\n# 页脚的背景图片\nfooter_img: false\n\n# 网站背景\n# 可以设置为颜色或图片\n# 图片格式: url(http://xxxxxx.com/xxx.jpg)\nbackground:\n\n# 封面设置\ncover:\n  # 是否禁用封面\n  index_enable: true\n  aside_enable: true\n  archives_enable: true\n  # 主页封面的位置\n  # 选择: left/right/both\n  position: both\n  # 当未设置封面时，显示默认封面\n  default_cover:\n    # - https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg\n\n# 替换损坏的图片\nerror_img:\n  # 友链页面的错误图片\n  flink: /img/friend_404.gif\n  # 文章页面的错误图片\n  post_page: /img/404.jpg\n\n# 简单的 404 页面\nerror_404:\n  # 是否启用 404 页面\n  enable: false\n  # 404 页面的副标题\n  subtitle: 'Page Not Found'\n  # 404 页面的卡片背景图片\n  background: https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png\n\n# 文章元数据设置\npost_meta:\n  # 主页页面\n  page:\n    # 日期类型: created / updated / both\n    date_type: created\n    # 日期格式: date / relative\n    date_format: date\n    # 是否显示分类\n    categories: true\n    # 是否显示标签\n    tags: false\n    # 是否显示文字标签\n    label: true\n  # 文章页面\n  post:\n    # 元数据位置: left / center\n    position: left\n    # 日期类型: created / updated / both\n    date_type: both\n    # 日期格式: date / relative\n    date_format: date\n    # 是否显示分类\n    categories: true\n    # 是否显示标签\n    tags: true\n    # 是否显示文字标签\n    label: true\n\n# --------------------------------------\n# 首页设置\n# --------------------------------------\n\n# 首页头图的设置\n# 默认: 头图全屏，站点信息在中间\n# 站点信息的位置，例如: 300px/300em/300rem/10%\nindex_site_info_top:\n# 头图的高度，例如: 300px/300em/300rem\nindex_top_img_height:\n\n# 首页的副标题设置\nsubtitle:\n  # 是否启用副标题\n  enable: false\n  # 是否启用打字机效果\n  effect: true\n  # 自定义 typed.js\n  # https://github.com/mattboldt/typed.js/#customization\n  typed_option:\n  # 来源 - 调用第三方服务 API（仅限中文）\n  # 它将首先显示来源，然后显示副标题内容\n  # 选择: false/1/2/3\n  # false - 禁用此功能\n  # 1 - hitokoto.cn\n  # 2 - yijuzhan.com\n  # 3 - jinrishici.com\n  source: false\n  # 如果关闭打字机效果，副标题将仅显示 sub 的第一行内容\n  sub:\n\n# 首页文章佈局\n# 1: 行佈局\n# 2: 列布局\nindex_layout: 1\n\n# 在首页显示文章简介\n# 1: 描述\n# 2: 两者（如果存在描述，将显示描述，否则显示自动摘要）\n# 3: 自动摘要（默认）\n# false: 不显示文章简介\nindex_post_content:\n  method: 3\n  # 如果设置 method 为 2 或 3，需要配置长度\n  length: 500\n\n# --------------------------------------\n# 文章设置\n# --------------------------------------\n\ntoc:\n  # 是否在文章中显示目录\n  post: true\n  # 是否在页面中显示目录\n  page: false\n  # 是否显示目录编号\n  number: true\n  # 是否默认展开目录\n  expand: false\n  # 是否使用简洁风格（仅适用于文章）\n  style_simple: false\n  # 是否显示滚动百分比\n  scroll_percent: true\n\npost_copyright:\n  # 是否启用版权声明\n  enable: true\n  # 是否进行文章 URL 解码\n  decode: false\n  # 作者链接\n  author_href:\n  # 许可证类型\n  license: CC BY-NC-SA 4.0\n  # 许可证链接\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/\n\n# 贊助/打赏\nreward:\n  # 是否启用打赏\n  enable: false\n  # 打赏案例文本\n  text:\n  QR_code:\n    # - img: /img/wechat.jpg\n    #   link:\n    #   text: 微信\n    # - img: /img/alipay.jpg\n    #   link:\n    #   text: 支付宝\n\n# 文章编辑\n# 轻鬆在线浏览和编辑博客源代码\npost_edit:\n  # 是否启用在线编辑\n  enable: false\n  # url: https://github.com/用户名/仓库名/edit/分支名/子目录名/\n  # 例如: https://github.com/jerryc127/butterfly.js.org/edit/main/source/\n  url:\n\n# 相关文章\nrelated_post:\n  # 是否显示相关文章\n  enable: true\n  # 显示的文章数量\n  limit: 6\n  # 选择: created / updated\n  date_type: created\n\n# 选择: 1 / 2 / false\n# 1: “下一篇文章”将链接到旧文章\n# 2: “下一篇文章”将链接到新文章\n# false: 禁用分页\npost_pagination: 1\n\n# 显示文章过期通知\nnoticeOutdate:\n  # 是否启用过期通知\n  enable: false\n  # 样式: simple / flat\n  style: flat\n  # 多少天后显示通知\n  limit_day: 365\n  # 位置: top / bottom\n  position: top\n  message_prev: 已经过了\n  message_next: 天自上次更新，文章内容可能已过时。\n\n# --------------------------------------\n# 页脚设置\n# --------------------------------------\nfooter:\n  owner:\n    # 是否启用所有者显示\n    enable: true\n    # 网站创建年份\n    since: 2019\n  # 自定义文本\n  custom_text:\n  # 主题和框架的版权声明\n  copyright: true\n\n# --------------------------------------\n# 侧边栏设置\n# --------------------------------------\n\naside:\n  # 是否启用侧边栏\n  enable: true\n  # 是否默认隐藏侧边栏\n  hide: false\n  # 是否在右下角显示隐藏侧边栏的按钮\n  button: true\n  # 移动设备上是否启用侧边栏\n  mobile: true\n  # 侧边栏位置：left / right\n  position: right\n  display:\n    # 归档页面是否显示侧边栏\n    archive: true\n    # 标签页面是否显示侧边栏\n    tag: true\n    # 分类页面是否显示侧边栏\n    category: true\n  card_author:\n    # 是否显示作者信息卡片\n    enable: true\n    # 作者描述\n    description:\n    button:\n      # 是否显示按钮\n      enable: true\n      # 按钮图标\n      icon: fab fa-github\n      # 按钮文本\n      text: Follow Me\n      # 按钮链接\n      link: https://github.com/xxxxxx\n  card_announcement:\n    # 是否显示公告卡片\n    enable: true\n    # 公告内容\n    content: This is my Blog\n  card_recent_post:\n    # 是否显示最近文章卡片\n    enable: true\n    # 显示文章数量，0 表示显示所有\n    limit: 5\n    # 排序方式：date / updated\n    sort: date\n    sort_order:\n  card_newest_comments:\n    # 是否显示最新评论卡片\n    enable: false\n    sort_order:\n    # 显示评论数量\n    limit: 6\n    # 单位：分钟，保存数据到 localStorage\n    storage: 10\n    # 是否显示头像\n    avatar: true\n  card_categories:\n    # 是否显示分类卡片\n    enable: true\n    # 显示分类数量，0 表示显示所有\n    limit: 8\n    # 选择：none / true / false\n    expand: none\n    sort_order:\n  card_tags:\n    # 是否显示标签卡片\n    enable: true\n    # 显示标签数量，0 表示显示所有\n    limit: 40\n    # 是否启用颜色\n    color: false\n    # 标签排序方式：random/name/length\n    orderby: random\n    # 排序顺序：1 表示升序，-1 表示降序\n    order: 1\n    sort_order:\n  card_archives:\n    # 是否显示归档卡片\n    enable: true\n    # 归档类型：monthly / yearly\n    type: monthly\n    # 日期格式，例如：YYYY年MM月\n    format: MMMM YYYY\n    # 排序顺序：1 表示升序，-1 表示降序\n    order: -1\n    # 显示归档数量，0 表示显示所有\n    limit: 8\n    sort_order:\n  card_post_series:\n    # 是否显示系列文章卡片\n    enable: true\n    # 标题显示系列名称\n    series_title: false\n    # 排序方式：title 或 date\n    orderBy: 'date'\n    # 排序顺序：1 表示升序，-1 表示降序\n    order: -1\n  card_webinfo:\n    # 是否显示网站信息卡片\n    enable: true\n    # 是否显示文章数量\n    post_count: true\n    # 是否显示最后推送日期\n    last_push_date: true\n    sort_order:\n    # 发佈日期与当前日期的时间差\n    # 格式：Month/Day/Year Time 或 Year/Month/Day Time\n    # 如果不启用此功能，请留空\n    runtime_date:\n\n# --------------------------------------\n# 右下角按钮设置\n# --------------------------------------\n\n# 右下角按钮与底部的距离（默认单位：px）\nrightside_bottom:\n\n# 简繁转换设置\ntranslate:\n  # 是否启用简繁转换\n  enable: false\n  # 按钮文本\n  default: 繁\n  # 网站语言（1 - 繁体中文 / 2 - 简体中文）\n  defaultEncoding: 2\n  # 转换延迟\n  translateDelay: 0\n  # 按钮在简体中文时的文本\n  msgToTraditionalChinese: '繁'\n  # 按钮在繁体中文时的文本\n  msgToSimplifiedChinese: '简'\n\n# 閲读模式\nreadmode: true\n\n# 暗黑模式设置\ndarkmode:\n  # 是否启用暗黑模式\n  enable: true\n  # 切换暗黑/明亮模式的按钮\n  button: true\n  # 是否自动切换暗黑/明亮模式\n  # autoChangeMode: 1  跟随系统设置，如果系统不支持暗黑模式，则在晚上 6 点到早上 6 点之间切换暗黑模式\n  # autoChangeMode: 2  在晚上 6 点到早上 6 点之间切换暗黑模式\n  # autoChangeMode: false  不自动切换\n  autoChangeMode: false\n  # 设置明亮模式时间，值在 0 到 24 之间。如果未设置，默认值为 6 和 18\n  start:\n  end:\n\n# 在返回顶部按钮中显示滚动百分比\nrightside_scroll_percent: false\n\n# 不要修改以下设置，除非你知道它们的工作原理\n# 选择：readmode,translate,darkmode,hideAside,toc,chat,comment\n# 不要重复相同的值\nrightside_item_order:\n  # 是否启用右侧项目顺序\n  enable: false\n  # 隐藏的默认项目：readmode,translate,darkmode,hideAside\n  hide:\n  # 显示的默认项目：toc,chat,comment\n  show:\n\n# --------------------------------------\n# 全局设置\n# --------------------------------------\n\n# 锚点设置\nanchor:\n  # 滚动时，URL 将根据标题 ID 更新\n  auto_update: false\n  # 点击标题滚动并更新锚点\n  click_to_scroll: false\n\n# 图片标题\nphotofigcaption: false\n\n# 复制设置\ncopy:\n  # 是否启用复制功能\n  enable: true\n  # 在复制的内容后添加版权信息\n  copyright:\n    enable: false\n    # 当复制字符数超过 limit_count 时添加版权信息\n    limit_count: 150\n\n# 需要安装 hexo-wordcount 插件\nwordcount:\n  # 是否启用字数统计\n  enable: false\n  # 在文章元信息中显示字数统计\n  post_wordcount: true\n  # 在文章元信息中显示閲读时间\n  min2read: true\n  # 在侧边栏网站信息中显示总字数\n  total_wordcount: true\n\n# 不蒜子 PV / UV 统计\nbusuanzi:\n  # 网站 UV 统计\n  site_uv: true\n  # 网站 PV 统计\n  site_pv: true\n  # 页面 PV 统计\n  page_pv: true\n\n# --------------------------------------\n# 数学公式设置\n# --------------------------------------\n\n# 关于 per_page\n# 如果设置为 true，将在每个页面加载 mathjax/katex 脚本\n# 如果设置为 false，将根据你的设置加载 mathjax/katex 脚本（在页面的 front-matter 中添加 'mathjax: true' 或者 'katex: true'）\nmath:\n  # 选择：mathjax, katex\n  # 如果不需要数学公式，保持为空\n  use:\n  per_page: true\n  hide_scrollbar: false\n\n  mathjax:\n    # 启用上下文菜单\n    enableMenu: true\n    # 选择：all / ams / none，这控制是否对公式编号以及如何编号\n    tags: none\n\n  katex:\n    # 启用复制 KaTeX 公式\n    copy_tex: false\n\n# --------------------------------------\n# 搜索设置\n# --------------------------------------\n\nsearch:\n  # 选择：algolia_search / local_search / docsearch\n  # 如果不需要搜索功能，保持为空\n  use:\n  placeholder:\n\n  # Algolia 搜索\n  algolia_search:\n    # 每页搜索结果数量\n    hitsPerPage: 6\n\n  # 本地搜索\n  local_search:\n    # 页面加载时预加载搜索数据\n    preload: false\n    # 每篇文章显示的顶部 n 个搜索结果，设置为 -1 显示所有结果\n    top_n_per_article: 1\n    # 将 HTML 字符串反转义为可读内容\n    unescape: false\n    CDN:\n\n  # Docsearch\n  # https://docsearch.algolia.com/\n  docsearch:\n    appId:\n    apiKey:\n    indexName:\n    option:\n\n# --------------------------------------\n# 分享系统\n# --------------------------------------\n\nshare:\n  # 选择：sharejs / addtoany\n  # 如果不需要分享功能，保持为空\n  use: sharejs\n\n  # Share.js\n  # https://github.com/overtrue/share.js\n  sharejs:\n    sites: facebook,twitter,wechat,weibo,qq\n\n  # AddToAny\n  # https://www.addtoany.com/\n  addtoany:\n    item: facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link\n\n# --------------------------------------\n# 评论系统\n# --------------------------------------\n\ncomments:\n  # 最多两个评论系统，第一个将作为默认显示\n  # 如果不需要评论功能，保持为空\n  # 选择：Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk\n  # 两个评论系统的格式：Disqus,Waline\n  use:\n  # 按钮旁边显示评论系统名称\n  text: true\n  # 懒加载：评论系统将在评论元素进入浏览器视口时加载\n  # 如果设置为 true，评论计数将无效\n  lazyload: false\n  # 在文章顶部图片中显示评论计数\n  count: false\n  # 在主页显示评论计数\n  card_post_count: false\n\n# Disqus 评论插件配置\n# 官方文档：https://disqus.com/\ndisqus:\n  # Disqus 的 shortname\n  shortname:\n  # 最新评论小部件的 API 密钥\n  apikey:\n\n# 使用 Disqus API 渲染评论的替代方案\n# 官方文档：https://github.com/SukkaW/DisqusJS\ndisqusjs:\n  # Disqus 的 shortname\n  shortname:\n  # API 密钥\n  apikey:\n  # 其他可选配置\n  option:\n\n# Livere 评论插件配置\n# 官方文档：https://www.livere.com/\nlivere:\n  # Livere 的用户 ID\n  uid:\n\n# Gitalk 评论插件配置\n# 官方文档：https://github.com/gitalk/gitalk\ngitalk:\n  # GitHub 应用的客户端 ID\n  client_id:\n  # GitHub 应用的客户端密钥\n  client_secret:\n  # 存储评论的仓库名称\n  repo:\n  # 仓库拥有者的用户名\n  owner:\n  # 管理员用户名列表\n  admin:\n  # 其他可选配置\n  option:\n\n# Valine 评论插件配置\n# 官方文档：https://valine.js.org\nvaline:\n  # LeanCloud 应用的 appId\n  appId:\n  # LeanCloud 应用的 appKey\n  appKey:\n  # 评论者头像样式\n  avatar: monsterid\n  # 该配置适用于国内自定义域名用户，海外版本将自动检测（无需手动填写）\n  serverURLs:\n  # 评论框背景图片\n  bg:\n  # 使用 Valine 的访客计数作为页面的访客量\n  visitor: false\n  # 其他可选配置\n  option:\n\n# Waline 评论插件配置，一个简单的评论系统，基于 Valine 开发，支持后端\n# 官方文档：https://waline.js.org/\nwaline:\n  # 服务器 URL\n  serverURL:\n  # 评论框背景图片\n  bg:\n  # 使用 Waline 的访客计数作为页面的访客量\n  pageview: false\n  # 其他可选配置\n  option:\n\n# Utterances 评论插件配置\n# 官方文档：https://utteranc.es/\nutterances:\n  # 存储评论的 GitHub 仓库\n  repo:\n  # 问题映射方式，可选值：pathname/url/title/og:title\n  issue_term: pathname\n  # 浅色主题，可选值：github-light\n  light_theme: github-light\n  # 深色主题，可选值：photon-dark\n  dark_theme: photon-dark\n\n# Facebook 评论插件配置\n# 官方文档：https://developers.facebook.com/docs/plugins/comments/\nfacebook_comments:\n  # 应用 ID\n  app_id:\n  # 用户 ID，可选\n  user_id:\n  # 每页显示评论数\n  pageSize: 10\n  # 评论排序方式，可选值：social / time / reverse_time\n  order_by: social\n  # 语言设置\n  lang: zh_TW\n\n# Twikoo 评论插件配置\n# 官方文档：https://github.com/imaegoo/twikoo\ntwikoo:\n  # 环境 ID\n  envId:\n  # 区域\n  region:\n  # 使用 Twikoo 的访客计数作为页面的访客量\n  visitor: false\n  # 其他可选配置\n  option:\n\n# Giscus 评论插件配置\n# 官方文档：https://giscus.app/\ngiscus:\n  # 仓库地址\n  repo:\n  # 仓库 ID\n  repo_id:\n  # 分类 ID\n  category_id:\n  # 主题配置，light 为浅色主题，dark 为深色主题\n  theme:\n    light: light\n    dark: dark\n  # 其他可选配置\n  option:\n\n# Remark42 评论插件配置\n# 官方文档：https://remark42.com/docs/configuration/frontend/\nremark42:\n  # 服务器地址\n  host:\n  # 站点 ID\n  siteId:\n  # 其他可选配置\n  option:\n\n# Artalk 评论插件配置\n# 官方文档：https://artalk.js.org/guide/frontend/config.html\nartalk:\n  # 服务器地址\n  server:\n  # 站点名\n  site:\n  # 使用 Artalk 的访客计数作为页面的访客量\n  visitor: false\n  # 其他可选配置\n  option:\n\n# --------------------------------------\n# 聊天服务配置\n# --------------------------------------\n\nchat:\n  # 聊天服务类型，可选值：chatra/tidio/crisp，如果不需要聊天功能则留空\n  use:\n  # 推荐使用聊天按钮，会在网站右下角创建一个按钮，并隐藏原始按钮\n  rightside_button: false\n  # 原始聊天按钮在向上滚动时显示，向下滚动时隐藏\n  button_hide_show: false\n\n# Chatra 聊天服务配置\n# 官方网站：https://chatra.io/\nchatra:\n  # Chatra 服务 ID\n  id:\n\n# Tidio 聊天服务配置\n# 官方网站：https://www.tidio.com/\ntidio:\n  # Tidio 公钥\n  public_key:\n\n# Crisp 聊天服务配置\n# 官方网站：https://crisp.chat/en/\ncrisp:\n  # Crisp 网站 ID\n  website_id:\n\n# --------------------------------------\n# 分析服务配置\n# --------------------------------------\n\n# 百度统计配置\n# 官方网站：https://tongji.baidu.com/web/welcome/login\nbaidu_analytics:\n\n# 谷歌分析配置\n# 官方网站：https://analytics.google.com/analytics/web/\ngoogle_analytics:\n\n# Cloudflare 分析配置\n# 官方网站：https://www.cloudflare.com/zh-tw/web-analytics/\ncloudflare_analytics:\n\n# Microsoft Clarity 分析配置\n# 官方网站：https://clarity.microsoft.com/\nmicrosoft_clarity:\n\n# --------------------------------------\n# 广告配置\n# --------------------------------------\n\n# Google Adsense 广告配置\ngoogle_adsense:\n  # 是否启用\n  enable: false\n  # 是否自动投放广告\n  auto_ads: true\n  # 广告脚本 URL\n  js: https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\n  # 客户 ID\n  client:\n  # 是否启用页面级广告\n  enable_page_level_ads: true\n\n# 手动插入广告配置，如果不需要广告则留空\nad:\n  # 在首页每三个帖子后插入广告\n  index:\n  # 在侧边栏插入广告\n  aside:\n  # 在文章分页前插入广告\n  post:\n\n# --------------------------------------\n# 站点验证配置\n# --------------------------------------\n\nsite_verification:\n  # 示例：\n  # - name: google-site-verification\n  #   content: xxxxxx\n  # - name: baidu-site-verification\n  #   content: xxxxxxx\n\n# --------------------------------------\n# 美化 / 效果\n# --------------------------------------\n\n# 主题颜色自定义\n# 注意：颜色值必须用双引号，如 \"#000\"，否则可能会导致错误！\n\n# 主题颜色配置\n# theme_color:\n#   是否启用主题颜色\n#   enable: true\n#   主颜色\n#   main: \"#49B1F5\"\n#   分页器颜色\n#   paginator: \"#00c4b6\"\n#   按钮悬停颜色\n#   button_hover: \"#FF7242\"\n#   文本选择颜色\n#   text_selection: \"#00c4b6\"\n#   链接颜色\n#   link_color: \"#99a9bf\"\n#   元数据颜色\n#   meta_color: \"#858585\"\n#   水平线颜色\n#   hr_color: \"#A4D8FA\"\n#   代码前景色\n#   code_foreground: \"#F47466\"\n#   代码背景色\n#   code_background: \"rgba(27, 31, 35, .05)\"\n#   目录颜色\n#   toc_color: \"#00c4b6\"\n#   引用块填充颜色\n#   blockquote_padding_color: \"#49b1f5\"\n#   引用块背景颜色\n#   blockquote_background_color: \"#49b1f5\"\n#   滚动条颜色\n#   scrollbar_color: \"#49b1f5\"\n#   浅色模式下的主题颜色\n#   meta_theme_color_light: \"ffffff\"\n#   深色模式下的主题颜色\n#   meta_theme_color_dark: \"#0d0d0d\"\n\n# 分类和标签页面的用户界面设置\n# 选择：index - 与主页 UI 相同 / default - 与归档 UI 相同\n# 留空或设置为 index\ncategory_ui:\ntag_ui:\n\n# 拉伸行使每行宽度相等\ntext_align_justify: false\n\n# 为页眉和页脚添加遮罩\nmask:\n  header: true\n  footer: true\n\n# 加载动画\npreloader:\n  # 是否启用加载动画\n  enable: false\n  # 资源\n  # 1. 全屏加载\n  # 2. 进度条\n  source: 1\n  # pace 主题 (参见 https://codebyzach.github.io/pace/)\n  pace_css_url:\n\n# 页面过渡效果\nenter_transitions: true\n\n# 默认显示模式 - light (默认) / dark\ndisplay_mode: light\n\n# 美化文章内容的配置\nbeautify:\n  # 是否启用美化\n  enable: false\n  # 指定美化的范围 (site 或 post)\n  field: post\n  # 指定标题前缀图标，如 '\\f0c1'\n  title-prefix-icon:\n  # 指定标题前缀图标的颜色，如 '#F47466'\n  title-prefix-icon-color:\n\n# 全局字体设置\n# 除非您知道它们的工作原理，否则不要修改以下设置\nfont:\n  global-font-size:\n  code-font-size:\n  font-family:\n  code-font-family:\n\n# 网站标题和副标题的字体设置\nblog_title_font:\n  font_link:\n  font-family:\n\n# 分隔符图标的设置\nhr_icon:\n  # 是否启用分隔符图标\n  enable: true\n  # Font Awesome 图标的 unicode 值，如 '\\3423'\n  icon:\n  icon-top:\n\n# 打字机效果\n# https://github.com/disjukr/activate-power-mode\nactivate_power_mode:\n  # 是否启用打字机效果\n  enable: false\n  # 是否启用彩色效果\n  colorful: true\n  # 是否启用震动效果\n  shake: true\n  # 是否在移动设备上启用\n  mobile: false\n\n# 背景效果\n# --------------------------------------\n\n# canvas_ribbon\n# 参见: https://github.com/hustcc/ribbon.js\ncanvas_ribbon:\n  # 是否启用 canvas_ribbon\n  enable: false\n  # ribbon 的大小\n  size: 150\n  # ribbon 的不透明度 (0 ~ 1)\n  alpha: 0.6\n  zIndex: -1\n  # 是否点击更改颜色\n  click_to_change: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# Fluttering Ribbon\ncanvas_fluttering_ribbon:\n  # 是否启用 Fluttering Ribbon\n  enable: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# canvas_nest\n# https://github.com/hustcc/canvas-nest.js\ncanvas_nest:\n  # 是否启用 canvas_nest\n  enable: false\n  # 线条颜色，默认: '0,0,0'; RGB 值: (R,G,B).(注意: 使用 ',' 分隔.)\n  color: '0,0,255'\n  # 线条的不透明度 (0~1)\n  opacity: 0.7\n  # 背景的 z-index 属性\n  zIndex: -1\n  # 线条数量\n  count: 99\n  # 是否在移动设备上启用\n  mobile: false\n\n# 鼠标点击效果: 烟花\nfireworks:\n  # 是否启用烟花效果\n  enable: false\n  zIndex: 9999\n  # 是否在移动设备上启用\n  mobile: false\n\n# 鼠标点击效果: 心形符号\nclick_heart:\n  # 是否启用心形符号效果\n  enable: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# 鼠标点击效果: 文字\nclickShowText:\n  # 是否启用文字效果\n  enable: false\n  text:\n    # - I\n    # - LOVE\n    # - YOU\n  fontSize: 15px\n  # 是否随机显示文字\n  random: false\n  # 是否在移动设备上启用\n  mobile: false\n\n# --------------------------------------\n# 灯箱设置\n# --------------------------------------\n\n# 选择: fancybox / medium_zoom\n# https://github.com/francoischalifour/medium-zoom\n# https://fancyapps.com/fancybox/\n# 如果不需要灯箱效果，请留空\nlightbox:\n\n# --------------------------------------\n# 标签外挂设置\n# --------------------------------------\n\n# 系列\nseries:\n  # 是否启用系列\n  enable: false\n  # 按标题或日期排序\n  orderBy: 'title'\n  # 排序方式。1, asc 为升序; -1, desc 为降序\n  order: 1\n  # 是否显示编号\n  number: true\n\n# ABCJS - ABC 音乐符号插件\n# https://github.com/paulrosen/abcjs\nabcjs:\n  # 是否启用 ABCJS\n  enable: false\n  # 是否每页启用\n  per_page: true\n\n# Mermaid\n# https://github.com/mermaid-js/mermaid\nmermaid:\n  # 是否启用 Mermaid\n  enable: false\n  # 使用代码块编写 Mermaid 图表\n  code_write: false\n  # 内置主题: default / forest / dark / neutral\n  theme:\n    light: default\n    dark: dark\n\n# chartjs\n# 参见 https://www.chartjs.org/docs/latest/\nchartjs:\n  enable: false\n  # 除非你了解它们的工作原理，否则不要修改。\n  # 默认设置仅在未指定 MD 语法时使用。\n  # 图表的字体颜色\n  fontColor:\n    light: \"rgba(0, 0, 0, 0.8)\"\n    dark: \"rgba(255, 255, 255, 0.8)\"\n  # 图表的边框颜色\n  borderColor:\n    light: \"rgba(0, 0, 0, 0.1)\"\n    dark: \"rgba(255, 255, 255, 0.2)\"\n  # 雷达图和极区图的刻度标签背景颜色\n  scale_ticks_backdropColor:\n    light: \"transparent\"\n    dark: \"transparent\"\n\n# Note - Bootstrap 提示框\nnote:\n  # Note 标签样式值:\n  #  - simple    bs-callout 旧警告样式。默认。\n  #  - modern    bs-callout 新 (v2-v3) 警告样式。\n  #  - flat      扁平提示框样式，带背景，如 Mozilla 或 StackOverflow。\n  #  - disabled  禁用所有 Note 标签的 CSS 样式。\n  style: flat\n  # 是否显示图标\n  icons: true\n  # 边框半径\n  border_radius: 3\n  # 背景颜色偏移百分比 (modern: -12 | 12; flat: -18 | 6)。\n  # 也应用于标签变量。此选项可与禁用的 Note 标签一起使用。\n  light_bg_offset: 0\n\n# --------------------------------------\n# 其他设置\n# --------------------------------------\n\n# https://github.com/MoOx/pjax\npjax:\n  # 是否启用 pjax\n  enable: false\n  # 排除指定页面不使用 pjax，如 '/music/'\n  exclude:\n    # - /xxxxxx/\n\n# 注入 CSS 和脚本 (aplayer/meting)\naplayerInject:\n  # 是否启用注入\n  enable: false\n  # 是否每页启用\n  per_page: true\n\n# Snackbar - Toast 通知\n# https://github.com/polonel/SnackBar\n# 位置: top-left / top-center / top-right / bottom-left / bottom-center / bottom-right\nsnackbar:\n  # 是否启用 Snackbar\n  enable: false\n  # 通知位置\n  position: bottom-left\n  # 浅色模式和深色模式下的通知背景颜色\n  bg_light: '#49b1f5'\n  bg_dark: '#1f1f1f'\n\n# Instant.page\n# https://instant.page/\ninstantpage: false\n\n# Pangu - 在中文字符和英文字符之间插入空格\n# https://github.com/vinta/pangu.js\npangu:\n  # 是否启用 Pangu\n  enable: false\n  # 指定使用 Pangu 的范围(site 或 post)\n  field: site\n\n# Lazyload\n# https://github.com/verlok/vanilla-lazyload\nlazyload:\n  # 是否启用 Lazyload\n  enable: false\n  # 指定使用 Lazyload 的范围 (site 或 post)\n  field: site\n  placeholder:\n  blur: false\n\n# PWA\n# 参见 https://github.com/JLHwung/hexo-offline\n# ---------------\npwa:\n  # 是否启用 PWA\n  enable: false\n  # PWA manifest 文件路径\n  manifest:\n  # Apple Touch 图标路径\n  apple_touch_icon:\n  # 32x32 像素的 favicon 图标路径\n  favicon_32_32:\n  # 16x16 像素的 favicon 图标路径\n  favicon_16_16:\n  # mask 图标路径\n  mask_icon:\n\n# Open graph meta tags\n# 参见 https://hexo.io/docs/helpers#open-graph\nOpen_Graph_meta:\n  # 是否启用 Open Graph meta 标签\n  enable: true\n  option:\n    # twitter_card:\n    # twitter_image:\n    # twitter_id:\n    # twitter_site:\n    # google_plus:\n    # fb_admins:\n    # fb_app_id:\n\n# 添加供应商前缀以确保兼容性\n# 是否启用 CSS 前缀\ncss_prefix: true\n\n# Inject\n# 插入代码到 head（在 '</head>' 标签之前）和底部（在 '</body>' 标签之前）\ninject:\n  head:\n    # - <link rel=\"stylesheet\" href=\"/xxx.css\">\n  bottom:\n    # - <script src=\"xxxx\"></script>\n\n# CDN 设置\n# 除非你知道它们的工作原理，否则不要修改以下设置\nCDN:\n  # 内部和第三方脚本的 CDN 提供商\n  # 两者的选项：local/jsdelivr/unpkg/cdnjs/custom\n  # 注意： Dev 版本只能使用 'local' 作为内部脚本\n  # 注意：将第三方脚本设置为 'local' 时，需要安装 hexo-butterfly-extjs\n  internal_provider: local\n  third_party_provider: jsdelivr\n\n  # 是否在 URL 中添加版本号，true 或 false\n  version: false\n\n  # 自定义格式\n  # 例如：https://cdn.staticfile.org/${cdnjs_name}/${version}/${min_cdnjs_file}\n  custom_format:\n\n  option:\n\n```\n","slug":"1.安装Hexo+Butterfly","published":1,"comments":1,"layout":"post","photos":[],"_id":"cmfhayg8x00013es3boxu7s1p"},{"title":"使用AllinSSL实现自动续签雷池WAF的SSL证书","date":"2025-07-18T10:25:20.000Z","series":10,"description":"使用EC384-SHA384算法为内网服务器自签SSL/TLS证书。包含创建CA、服务器密钥和证书的完整步骤，支持多域名/IP配置。","_content":"\n## 前言\n\n### 什么是AllinSSL？\n\nAllinSSL是**开源免费的 SSL 证书自动化管理平台**，可实现一键自动化申请、续期、部署、监控所有 SSL/TLS 证书，支持跨云环境，告别繁琐配置和高昂费用。\n\n### 什么是雷池WAF？\n\n雷池WAF是一款简单好用, 效果突出的 `Web 应用防火墙(WAF)`，可以保护 Web 服务不受黑客攻击。\n\n雷池通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。可以保护 Web 服务免受 `SQL 注入`、`XSS`、 `代码注入`、`命令注入`、`CRLF 注入`、`ldap 注入`、`xpath 注入`、`RCE`、`XXE`、`SSRF`、`路径遍历`、`后门`、`暴力破解`、`CC`、`爬虫` 等攻击。\n\n## 安装AllinSSL\n\n### 使用二进制安装命令 (推荐)\n\n```bash\ncurl -sSO http://download.allinssl.com/install_allinssl.sh && bash install_allinssl.sh allinssl\n```\n\n### 备用安装命令\n\n```bash\ncurl -sSO https://cnb.cool/allinssl/install.sh/-/git/raw/main/install_allinssl.sh && \n```\n\n### 使用Docker部署\n\n> 使用Docker部署时，证书保存路径为AllinSSL所在Docker文件夹内。\n\n直接复制以下命令安装，用户名：`allinssl` 密码：`allinssldocker` 安全入口：`allinssl`。可自行更改\n\n```\ndocker run -itd \\\n  --name allinssl \\\n  -p 7979:8888 \\\n  -v /www/allinssl/data:/www/allinssl/data \\\n  -e ALLINSSL_USER=allinssl \\\n  -e ALLINSSL_PWD=allinssldocker \\\n  -e ALLINSSL_URL=allinssl \\\n  allinssl/allinssl:latest\n```\n\n或使用宝塔面板进行安装，在宝塔面板Docker页搜索AllinSSL，自行修改端口、用户名、密码、安全入口后安装即可。由于操作简单，为节约大家的流量和节省服务器资源，这里不再放图和过多赘述。\n\n## 配置雷池\n\n### 上传一张证书\n\n在雷池WAF主界面——通用设置——防护配置——证书管理中的添加证书里上传一张证书\n\n![](/img/post/10/1.png)\n\n### 获取证书ID\n\n![](/img/post/10/2.png)\n\n在通用设置——控制台管理——雷池控制台证书中找到你刚才上传的`证书ID`\n\n### 获取证书路径\n\n进入雷池证书目录`/data/safeline/resources/nginx/certs`，找到你的证书\n\n![](/img/post/10/3.png)\n\n证书为cert_ + `你刚刚上传的证书ID` .crt和`.key`\n\n## 设置AllinSSL\n\n### 配置DNS\n\n在AllinSSL面板中，选择`授权API管理`，添加你的DNS提供商给你的公私钥，并点击确认\n\n![](/img/post/10/4.png)\n\n### 配置通知\n\n如果你有通知需求的话，可以配置通知\n\n在AllinSSL面板中，选择`设置`，选择`告警通知`，并点击确认\n\n![](/img/post/10/5.png)\n\n### 新建自动化部署工作流\n\n在AllinSSL面板中，选择`自动化部署`，选择`添加自动化部署`，模板自由选择，并点击确认\n\n![](/img/post/10/6.png)\n\n### 设置申请证书流程\n\n点击`申请证书`设置流程并配置\n\n![](/img/post/10/7.png)\n\n- 域名：以逗号分隔，没有空格，如`*.example.com,example.com`\n- 证书CA：`Let's Encrypt`除外的CA机构需要添加CA授权\n- 邮件：可随意填写\n\n> 我实测境外服务器如中国香港使用阿里云Key时，在`本地预检查`时无法连接上阿里云服务器，会导致预检查失败和证书申请失败，好几个证书申请软件都是这样。需要在`高级设置`中勾选`跳过本地预检查`\n\n### 设置部署流程\n\n点击`部署`流程，点击`本地部署`并点击下一步\n\n![](/img/post/10/8.png)\n\n由于我们在前面看到，需要在雷池中需要部署的`证书ID`是`2`。因此：\n\n- 证书路径为：`/data/safeline/resources/nginx/certs/cert_2.crt`\n\n- 证书私钥为：`/data/safeline/resources/nginx/certs/cert_2.key`\n\n> 雷池WAF会每一小时拉取一次，你也可以添加后置命令重启雷池容器，使雷池立即拉取\n\n![](/img/post/10/9.png)\n\n### 其他需要更改的地方\n\n其他需要更改的地方有通知，其他无特别需要的地方。设置非常简单，这里不再过多赘述。\n\n## 执行工作流\n\n保存工作流后，点击执行开始申请一张证书\n\n![](/img/post/10/10.png)\n\n此时状态会变成`正在执行`\n\n![](/img/post/10/11.png)\n\n点击详情可以看到执行进度。我忘记配邮件通知了，所以最后的状态变成了失败，懒得重新弄了\n\n![](/img/post/10/12.png)\n\n此时雷池目录对应的证书也被更新\n\n![](/img/post/10/13.png)\n\n此时，我们在雷池WAF实现了证书的自动续签","source":"_posts/10.使用AllinSSL自动续签雷池WAF证书.md","raw":"---\ntitle: 使用AllinSSL实现自动续签雷池WAF的SSL证书\ndate: 2025-07-18 18:25:20\ntags:\n  - Linux\n  - 经验\n  - 雷池WAF\n  - 建站\ncategories:\n  - Linux\nseries: 10\ndescription: 使用EC384-SHA384算法为内网服务器自签SSL/TLS证书。包含创建CA、服务器密钥和证书的完整步骤，支持多域名/IP配置。\n---\n\n## 前言\n\n### 什么是AllinSSL？\n\nAllinSSL是**开源免费的 SSL 证书自动化管理平台**，可实现一键自动化申请、续期、部署、监控所有 SSL/TLS 证书，支持跨云环境，告别繁琐配置和高昂费用。\n\n### 什么是雷池WAF？\n\n雷池WAF是一款简单好用, 效果突出的 `Web 应用防火墙(WAF)`，可以保护 Web 服务不受黑客攻击。\n\n雷池通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。可以保护 Web 服务免受 `SQL 注入`、`XSS`、 `代码注入`、`命令注入`、`CRLF 注入`、`ldap 注入`、`xpath 注入`、`RCE`、`XXE`、`SSRF`、`路径遍历`、`后门`、`暴力破解`、`CC`、`爬虫` 等攻击。\n\n## 安装AllinSSL\n\n### 使用二进制安装命令 (推荐)\n\n```bash\ncurl -sSO http://download.allinssl.com/install_allinssl.sh && bash install_allinssl.sh allinssl\n```\n\n### 备用安装命令\n\n```bash\ncurl -sSO https://cnb.cool/allinssl/install.sh/-/git/raw/main/install_allinssl.sh && \n```\n\n### 使用Docker部署\n\n> 使用Docker部署时，证书保存路径为AllinSSL所在Docker文件夹内。\n\n直接复制以下命令安装，用户名：`allinssl` 密码：`allinssldocker` 安全入口：`allinssl`。可自行更改\n\n```\ndocker run -itd \\\n  --name allinssl \\\n  -p 7979:8888 \\\n  -v /www/allinssl/data:/www/allinssl/data \\\n  -e ALLINSSL_USER=allinssl \\\n  -e ALLINSSL_PWD=allinssldocker \\\n  -e ALLINSSL_URL=allinssl \\\n  allinssl/allinssl:latest\n```\n\n或使用宝塔面板进行安装，在宝塔面板Docker页搜索AllinSSL，自行修改端口、用户名、密码、安全入口后安装即可。由于操作简单，为节约大家的流量和节省服务器资源，这里不再放图和过多赘述。\n\n## 配置雷池\n\n### 上传一张证书\n\n在雷池WAF主界面——通用设置——防护配置——证书管理中的添加证书里上传一张证书\n\n![](/img/post/10/1.png)\n\n### 获取证书ID\n\n![](/img/post/10/2.png)\n\n在通用设置——控制台管理——雷池控制台证书中找到你刚才上传的`证书ID`\n\n### 获取证书路径\n\n进入雷池证书目录`/data/safeline/resources/nginx/certs`，找到你的证书\n\n![](/img/post/10/3.png)\n\n证书为cert_ + `你刚刚上传的证书ID` .crt和`.key`\n\n## 设置AllinSSL\n\n### 配置DNS\n\n在AllinSSL面板中，选择`授权API管理`，添加你的DNS提供商给你的公私钥，并点击确认\n\n![](/img/post/10/4.png)\n\n### 配置通知\n\n如果你有通知需求的话，可以配置通知\n\n在AllinSSL面板中，选择`设置`，选择`告警通知`，并点击确认\n\n![](/img/post/10/5.png)\n\n### 新建自动化部署工作流\n\n在AllinSSL面板中，选择`自动化部署`，选择`添加自动化部署`，模板自由选择，并点击确认\n\n![](/img/post/10/6.png)\n\n### 设置申请证书流程\n\n点击`申请证书`设置流程并配置\n\n![](/img/post/10/7.png)\n\n- 域名：以逗号分隔，没有空格，如`*.example.com,example.com`\n- 证书CA：`Let's Encrypt`除外的CA机构需要添加CA授权\n- 邮件：可随意填写\n\n> 我实测境外服务器如中国香港使用阿里云Key时，在`本地预检查`时无法连接上阿里云服务器，会导致预检查失败和证书申请失败，好几个证书申请软件都是这样。需要在`高级设置`中勾选`跳过本地预检查`\n\n### 设置部署流程\n\n点击`部署`流程，点击`本地部署`并点击下一步\n\n![](/img/post/10/8.png)\n\n由于我们在前面看到，需要在雷池中需要部署的`证书ID`是`2`。因此：\n\n- 证书路径为：`/data/safeline/resources/nginx/certs/cert_2.crt`\n\n- 证书私钥为：`/data/safeline/resources/nginx/certs/cert_2.key`\n\n> 雷池WAF会每一小时拉取一次，你也可以添加后置命令重启雷池容器，使雷池立即拉取\n\n![](/img/post/10/9.png)\n\n### 其他需要更改的地方\n\n其他需要更改的地方有通知，其他无特别需要的地方。设置非常简单，这里不再过多赘述。\n\n## 执行工作流\n\n保存工作流后，点击执行开始申请一张证书\n\n![](/img/post/10/10.png)\n\n此时状态会变成`正在执行`\n\n![](/img/post/10/11.png)\n\n点击详情可以看到执行进度。我忘记配邮件通知了，所以最后的状态变成了失败，懒得重新弄了\n\n![](/img/post/10/12.png)\n\n此时雷池目录对应的证书也被更新\n\n![](/img/post/10/13.png)\n\n此时，我们在雷池WAF实现了证书的自动续签","slug":"10.使用AllinSSL自动续签雷池WAF证书","published":1,"updated":"2025-09-09T05:36:04.096Z","comments":1,"layout":"post","photos":[],"_id":"cmfhayg9900033es366d1fmol","content":"<h2 id=\"前言\">前言</h2>\n<h3 id=\"什么是AllinSSL？\">什么是AllinSSL？</h3>\n<p>AllinSSL是<strong>开源免费的 SSL 证书自动化管理平台</strong>，可实现一键自动化申请、续期、部署、监控所有 SSL/TLS 证书，支持跨云环境，告别繁琐配置和高昂费用。</p>\n<h3 id=\"什么是雷池WAF？\">什么是雷池WAF？</h3>\n<p>雷池WAF是一款简单好用, 效果突出的 <code>Web 应用防火墙(WAF)</code>，可以保护 Web 服务不受黑客攻击。</p>\n<p>雷池通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。可以保护 Web 服务免受 <code>SQL 注入</code>、<code>XSS</code>、 <code>代码注入</code>、<code>命令注入</code>、<code>CRLF 注入</code>、<code>ldap 注入</code>、<code>xpath 注入</code>、<code>RCE</code>、<code>XXE</code>、<code>SSRF</code>、<code>路径遍历</code>、<code>后门</code>、<code>暴力破解</code>、<code>CC</code>、<code>爬虫</code> 等攻击。</p>\n<h2 id=\"安装AllinSSL\">安装AllinSSL</h2>\n<h3 id=\"使用二进制安装命令-推荐\">使用二进制安装命令 (推荐)</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSO http://download.allinssl.com/install_allinssl.sh &amp;&amp; bash install_allinssl.sh allinssl</span><br></pre></td></tr></table></figure>\n<h3 id=\"备用安装命令\">备用安装命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSO https://cnb.cool/allinssl/install.sh/-/git/raw/main/install_allinssl.sh &amp;&amp; </span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Docker部署\">使用Docker部署</h3>\n<blockquote>\n<p>使用Docker部署时，证书保存路径为AllinSSL所在Docker文件夹内。</p>\n</blockquote>\n<p>直接复制以下命令安装，用户名：<code>allinssl</code> 密码：<code>allinssldocker</code> 安全入口：<code>allinssl</code>。可自行更改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">  --name allinssl \\</span><br><span class=\"line\">  -p 7979:8888 \\</span><br><span class=\"line\">  -v /www/allinssl/data:/www/allinssl/data \\</span><br><span class=\"line\">  -e ALLINSSL_USER=allinssl \\</span><br><span class=\"line\">  -e ALLINSSL_PWD=allinssldocker \\</span><br><span class=\"line\">  -e ALLINSSL_URL=allinssl \\</span><br><span class=\"line\">  allinssl/allinssl:latest</span><br></pre></td></tr></table></figure>\n<p>或使用宝塔面板进行安装，在宝塔面板Docker页搜索AllinSSL，自行修改端口、用户名、密码、安全入口后安装即可。由于操作简单，为节约大家的流量和节省服务器资源，这里不再放图和过多赘述。</p>\n<h2 id=\"配置雷池\">配置雷池</h2>\n<h3 id=\"上传一张证书\">上传一张证书</h3>\n<p>在雷池WAF主界面——通用设置——防护配置——证书管理中的添加证书里上传一张证书</p>\n<p><img src=\"/img/post/10/1.png\" alt=\"\"></p>\n<h3 id=\"获取证书ID\">获取证书ID</h3>\n<p><img src=\"/img/post/10/2.png\" alt=\"\"></p>\n<p>在通用设置——控制台管理——雷池控制台证书中找到你刚才上传的<code>证书ID</code></p>\n<h3 id=\"获取证书路径\">获取证书路径</h3>\n<p>进入雷池证书目录<code>/data/safeline/resources/nginx/certs</code>，找到你的证书</p>\n<p><img src=\"/img/post/10/3.png\" alt=\"\"></p>\n<p>证书为cert_ + <code>你刚刚上传的证书ID</code> .crt和<code>.key</code></p>\n<h2 id=\"设置AllinSSL\">设置AllinSSL</h2>\n<h3 id=\"配置DNS\">配置DNS</h3>\n<p>在AllinSSL面板中，选择<code>授权API管理</code>，添加你的DNS提供商给你的公私钥，并点击确认</p>\n<p><img src=\"/img/post/10/4.png\" alt=\"\"></p>\n<h3 id=\"配置通知\">配置通知</h3>\n<p>如果你有通知需求的话，可以配置通知</p>\n<p>在AllinSSL面板中，选择<code>设置</code>，选择<code>告警通知</code>，并点击确认</p>\n<p><img src=\"/img/post/10/5.png\" alt=\"\"></p>\n<h3 id=\"新建自动化部署工作流\">新建自动化部署工作流</h3>\n<p>在AllinSSL面板中，选择<code>自动化部署</code>，选择<code>添加自动化部署</code>，模板自由选择，并点击确认</p>\n<p><img src=\"/img/post/10/6.png\" alt=\"\"></p>\n<h3 id=\"设置申请证书流程\">设置申请证书流程</h3>\n<p>点击<code>申请证书</code>设置流程并配置</p>\n<p><img src=\"/img/post/10/7.png\" alt=\"\"></p>\n<ul>\n<li>域名：以逗号分隔，没有空格，如<code>*.example.com,example.com</code></li>\n<li>证书CA：<code>Let's Encrypt</code>除外的CA机构需要添加CA授权</li>\n<li>邮件：可随意填写</li>\n</ul>\n<blockquote>\n<p>我实测境外服务器如中国香港使用阿里云Key时，在<code>本地预检查</code>时无法连接上阿里云服务器，会导致预检查失败和证书申请失败，好几个证书申请软件都是这样。需要在<code>高级设置</code>中勾选<code>跳过本地预检查</code></p>\n</blockquote>\n<h3 id=\"设置部署流程\">设置部署流程</h3>\n<p>点击<code>部署</code>流程，点击<code>本地部署</code>并点击下一步</p>\n<p><img src=\"/img/post/10/8.png\" alt=\"\"></p>\n<p>由于我们在前面看到，需要在雷池中需要部署的<code>证书ID</code>是<code>2</code>。因此：</p>\n<ul>\n<li>\n<p>证书路径为：<code>/data/safeline/resources/nginx/certs/cert_2.crt</code></p>\n</li>\n<li>\n<p>证书私钥为：<code>/data/safeline/resources/nginx/certs/cert_2.key</code></p>\n</li>\n</ul>\n<blockquote>\n<p>雷池WAF会每一小时拉取一次，你也可以添加后置命令重启雷池容器，使雷池立即拉取</p>\n</blockquote>\n<p><img src=\"/img/post/10/9.png\" alt=\"\"></p>\n<h3 id=\"其他需要更改的地方\">其他需要更改的地方</h3>\n<p>其他需要更改的地方有通知，其他无特别需要的地方。设置非常简单，这里不再过多赘述。</p>\n<h2 id=\"执行工作流\">执行工作流</h2>\n<p>保存工作流后，点击执行开始申请一张证书</p>\n<p><img src=\"/img/post/10/10.png\" alt=\"\"></p>\n<p>此时状态会变成<code>正在执行</code></p>\n<p><img src=\"/img/post/10/11.png\" alt=\"\"></p>\n<p>点击详情可以看到执行进度。我忘记配邮件通知了，所以最后的状态变成了失败，懒得重新弄了</p>\n<p><img src=\"/img/post/10/12.png\" alt=\"\"></p>\n<p>此时雷池目录对应的证书也被更新</p>\n<p><img src=\"/img/post/10/13.png\" alt=\"\"></p>\n<p>此时，我们在雷池WAF实现了证书的自动续签</p>\n","excerpt":"","more":"<h2 id=\"前言\">前言</h2>\n<h3 id=\"什么是AllinSSL？\">什么是AllinSSL？</h3>\n<p>AllinSSL是<strong>开源免费的 SSL 证书自动化管理平台</strong>，可实现一键自动化申请、续期、部署、监控所有 SSL/TLS 证书，支持跨云环境，告别繁琐配置和高昂费用。</p>\n<h3 id=\"什么是雷池WAF？\">什么是雷池WAF？</h3>\n<p>雷池WAF是一款简单好用, 效果突出的 <code>Web 应用防火墙(WAF)</code>，可以保护 Web 服务不受黑客攻击。</p>\n<p>雷池通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。可以保护 Web 服务免受 <code>SQL 注入</code>、<code>XSS</code>、 <code>代码注入</code>、<code>命令注入</code>、<code>CRLF 注入</code>、<code>ldap 注入</code>、<code>xpath 注入</code>、<code>RCE</code>、<code>XXE</code>、<code>SSRF</code>、<code>路径遍历</code>、<code>后门</code>、<code>暴力破解</code>、<code>CC</code>、<code>爬虫</code> 等攻击。</p>\n<h2 id=\"安装AllinSSL\">安装AllinSSL</h2>\n<h3 id=\"使用二进制安装命令-推荐\">使用二进制安装命令 (推荐)</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSO http://download.allinssl.com/install_allinssl.sh &amp;&amp; bash install_allinssl.sh allinssl</span><br></pre></td></tr></table></figure>\n<h3 id=\"备用安装命令\">备用安装命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSO https://cnb.cool/allinssl/install.sh/-/git/raw/main/install_allinssl.sh &amp;&amp; </span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Docker部署\">使用Docker部署</h3>\n<blockquote>\n<p>使用Docker部署时，证书保存路径为AllinSSL所在Docker文件夹内。</p>\n</blockquote>\n<p>直接复制以下命令安装，用户名：<code>allinssl</code> 密码：<code>allinssldocker</code> 安全入口：<code>allinssl</code>。可自行更改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">  --name allinssl \\</span><br><span class=\"line\">  -p 7979:8888 \\</span><br><span class=\"line\">  -v /www/allinssl/data:/www/allinssl/data \\</span><br><span class=\"line\">  -e ALLINSSL_USER=allinssl \\</span><br><span class=\"line\">  -e ALLINSSL_PWD=allinssldocker \\</span><br><span class=\"line\">  -e ALLINSSL_URL=allinssl \\</span><br><span class=\"line\">  allinssl/allinssl:latest</span><br></pre></td></tr></table></figure>\n<p>或使用宝塔面板进行安装，在宝塔面板Docker页搜索AllinSSL，自行修改端口、用户名、密码、安全入口后安装即可。由于操作简单，为节约大家的流量和节省服务器资源，这里不再放图和过多赘述。</p>\n<h2 id=\"配置雷池\">配置雷池</h2>\n<h3 id=\"上传一张证书\">上传一张证书</h3>\n<p>在雷池WAF主界面——通用设置——防护配置——证书管理中的添加证书里上传一张证书</p>\n<p><img src=\"/img/post/10/1.png\" alt=\"\"></p>\n<h3 id=\"获取证书ID\">获取证书ID</h3>\n<p><img src=\"/img/post/10/2.png\" alt=\"\"></p>\n<p>在通用设置——控制台管理——雷池控制台证书中找到你刚才上传的<code>证书ID</code></p>\n<h3 id=\"获取证书路径\">获取证书路径</h3>\n<p>进入雷池证书目录<code>/data/safeline/resources/nginx/certs</code>，找到你的证书</p>\n<p><img src=\"/img/post/10/3.png\" alt=\"\"></p>\n<p>证书为cert_ + <code>你刚刚上传的证书ID</code> .crt和<code>.key</code></p>\n<h2 id=\"设置AllinSSL\">设置AllinSSL</h2>\n<h3 id=\"配置DNS\">配置DNS</h3>\n<p>在AllinSSL面板中，选择<code>授权API管理</code>，添加你的DNS提供商给你的公私钥，并点击确认</p>\n<p><img src=\"/img/post/10/4.png\" alt=\"\"></p>\n<h3 id=\"配置通知\">配置通知</h3>\n<p>如果你有通知需求的话，可以配置通知</p>\n<p>在AllinSSL面板中，选择<code>设置</code>，选择<code>告警通知</code>，并点击确认</p>\n<p><img src=\"/img/post/10/5.png\" alt=\"\"></p>\n<h3 id=\"新建自动化部署工作流\">新建自动化部署工作流</h3>\n<p>在AllinSSL面板中，选择<code>自动化部署</code>，选择<code>添加自动化部署</code>，模板自由选择，并点击确认</p>\n<p><img src=\"/img/post/10/6.png\" alt=\"\"></p>\n<h3 id=\"设置申请证书流程\">设置申请证书流程</h3>\n<p>点击<code>申请证书</code>设置流程并配置</p>\n<p><img src=\"/img/post/10/7.png\" alt=\"\"></p>\n<ul>\n<li>域名：以逗号分隔，没有空格，如<code>*.example.com,example.com</code></li>\n<li>证书CA：<code>Let's Encrypt</code>除外的CA机构需要添加CA授权</li>\n<li>邮件：可随意填写</li>\n</ul>\n<blockquote>\n<p>我实测境外服务器如中国香港使用阿里云Key时，在<code>本地预检查</code>时无法连接上阿里云服务器，会导致预检查失败和证书申请失败，好几个证书申请软件都是这样。需要在<code>高级设置</code>中勾选<code>跳过本地预检查</code></p>\n</blockquote>\n<h3 id=\"设置部署流程\">设置部署流程</h3>\n<p>点击<code>部署</code>流程，点击<code>本地部署</code>并点击下一步</p>\n<p><img src=\"/img/post/10/8.png\" alt=\"\"></p>\n<p>由于我们在前面看到，需要在雷池中需要部署的<code>证书ID</code>是<code>2</code>。因此：</p>\n<ul>\n<li>\n<p>证书路径为：<code>/data/safeline/resources/nginx/certs/cert_2.crt</code></p>\n</li>\n<li>\n<p>证书私钥为：<code>/data/safeline/resources/nginx/certs/cert_2.key</code></p>\n</li>\n</ul>\n<blockquote>\n<p>雷池WAF会每一小时拉取一次，你也可以添加后置命令重启雷池容器，使雷池立即拉取</p>\n</blockquote>\n<p><img src=\"/img/post/10/9.png\" alt=\"\"></p>\n<h3 id=\"其他需要更改的地方\">其他需要更改的地方</h3>\n<p>其他需要更改的地方有通知，其他无特别需要的地方。设置非常简单，这里不再过多赘述。</p>\n<h2 id=\"执行工作流\">执行工作流</h2>\n<p>保存工作流后，点击执行开始申请一张证书</p>\n<p><img src=\"/img/post/10/10.png\" alt=\"\"></p>\n<p>此时状态会变成<code>正在执行</code></p>\n<p><img src=\"/img/post/10/11.png\" alt=\"\"></p>\n<p>点击详情可以看到执行进度。我忘记配邮件通知了，所以最后的状态变成了失败，懒得重新弄了</p>\n<p><img src=\"/img/post/10/12.png\" alt=\"\"></p>\n<p>此时雷池目录对应的证书也被更新</p>\n<p><img src=\"/img/post/10/13.png\" alt=\"\"></p>\n<p>此时，我们在雷池WAF实现了证书的自动续签</p>\n"},{"title":"保姆级Matrix+Synapse部署教程，支持端到端加密，部署一个独属于自己的去中心化在线加密匿名聊天室！","date":"2025-07-28T15:30:50.000Z","updated":"2025-09-12T11:30:20.000Z","series":11,"description":"本文没有废话，全是干货，保姆式讲解了如何在Linux系统上通过Docker部署Matrix+Synapse服务端，实现去中心化端到端加密聊天。）、通过Docker Compose安装配置Postgres数据库、生成服务端配置文件、修改数据库连接及开放注册设置，并提供客户端Element APK反编译修改连接域名的方法，最终实现独立部署的加密匿名聊天室。","_content":"\n## 什么是Matrix\n\n### `Martix`是`完全开源免费`的通信协议\n\n`Martix`是用于安全实时通信的去中心化端到端加密通信协议，可以保护您的隐私和通信自由。\n\n`Martix`通过端到端加密来保护您的通信安全，可确保消息在发送方和接收方之间加密，中间服务器无法访问消息内容。Matrix 采用了分散式架构，没有单一的中央服务器，而是由多个独立的服务器通过联邦组成网络。\n\n`Martix`支持去中心化端到端加密通信、WebRTC语音，视频通话、消息已读，输入状态提示、群组聊天等。\n\n\n\n## 环境依赖\n\n安装Matrix前请确保你的系统环境符合以下要求\n\n- 操作系统：Linux\n- CPU 指令架构：x86_64, arm64\n- CPU 指令架构：x86_64 架构需要支持 ssse3 指令集\n- 软件依赖：Docker 20.10.14 版本以上\n- 软件依赖：Docker Compose 2.0.0 版本以上\n- 最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘\n\n可以根据以下命令来查看相关信息\n\n```bash\nuname -m                                    # 查看指令架构\ncat /proc/cpuinfo| grep \"processor\"         # 查看 CPU 信息\nlscpu | grep ssse3                          # 确认 CPU 是否支持 ssse3 指令集\ndocker version                              # 查看 Docker 版本\ndocker compose version                      # 查看 Docker Compose 版本\ndocker-compose version                      # 查看老版本 docker-compose 版本\nfree -h                                     # 查看内存信息\ndf -h                                       # 查看磁盘信息\n```\n\n## 安装前准备\n\n安装前，请先想好你的服务端域名和客户端域名（如果你有指定客户端域名的需求）\n\n在本篇教程中：\n\n- 服务端域名：`matrix.example.com`\n- 客户端域名：`matrix-client.example.com`\n\n\n\n## 安装Matrix\n\n安装前，请确保全程在`root`用户下安装，否则可能安装失败\n\n示例仓库：\n\n```\nhttps://github.com/sweetsky123/matrix-docker\n```\n\n```\nhttps://cnb.cool/hslzz/matrix-docker\n```\n\n### 创建目录\n\n```bash\nmkdir /data/synapse\n```\n\n### 创建Docker Compose编排脚本\n\n在/data/synapse文件夹下创建docker-compose.yml\n\n```bash\ncd /data/synapse && touch \"docker-compose.yml\"\n```\n\n使用文本编辑器打开 `docer-compose.yml` 文件，写入下方的内容\n\n```yaml\nnetworks:\n  synapse:\n    name: synapse\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n      \t\t# 指定网关\n        - gateway: ${SUBNET_PREFIX:?SUBNET_PREFIX required}.1\n        \t# 指定网段\n          subnet: ${SUBNET_PREFIX}.0/24\n    driver_opts:\n      com.docker.network.bridge.name: synapse\nservices:\n    # Matrix容器\n  matrix-synapse:\n      # 镜像地址\n    image: \"matrixdotorg/synapse:latest\"\n      # 容器名称\n    container_name: \"matrix-synapse\"\n      # 异常停止自动重启\n    restart: unless-stopped\n    ports:\n        # 端口转发\n      - ${MARTRIX_PORT:?error message}:8008 \n    volumes:\n      - \"./data:/data\" \n    environment:\n      VIRTUAL_HOST: \"${SERVICE_URL:?error message}\"\n      VIRTUAL_PORT: 8008\n      LETSENCRYPT_HOST: \"${SERVICE_URL:?error message}\"\n      SYNAPSE_SERVER_NAME: \"${SERVICE_URL:?error message}\"\n      SYNAPSE_REPORT_STATS: \"yes\"\n    depends_on:\n      - matrix-pg\n\n    # Postgres数据库\n  matrix-pg:\n      # 镜像地址\n    image: postgres:latest\n      # 容器名称\n    container_name: matrix-pg\n    environment:\n      # 管理员密码\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error message}  # postgres管理员密码\n    volumes:\n        # 持久化数据放置目录\n      - ./pgdata:/var/lib/postgresql/data\n        # 脚本目录\n      - ./init:/docker-entrypoint-initdb.d\n      # 异常停止自动重启\n    restart: unless-stopped\n    \n```\n\n### 配置compose环境变量\n\n使用下方的命令进入`Matrix`安装目录，并创建`.env`文件\n\n```\ncd /data/synapse && touch \".env\"\n```\n\n使用文本编辑器打开 `.env` 文件，写入下方的内容，POSTGRES的密码需自定义\n\n```\nMARTRIX_PORT=10086\nSERVICE_URL=matrix.example.com\nPOSTGRES_PASSWORD=NZ5yZLd5Ntxt3jXYUCCm\n```\n\n>  推荐的随机密码生成器：[安全、强大的密码生成器 | 1Password](https://1password.com/zh-cn/password-generator)\n\n配置文件的格式说明如下：\n\n- MARTRIX_PORT：`Martix`容器的对外端口，请修改为`1-65535`之内的任意数字\n- SERVICE_URL：服务端域名，如`matrix.example.com`\n- POSTGRES_PASSWORD：`Martix`所需数据库的初始化密码，请随机生成一个\n\n### 配置数据库创建脚本\n\n使用下方的命令创建`/init`文件夹，并创建`matrix.sql`文件\n\n```\ncd && mkdir /data/synapse/init && cd /data/synapse/init && touch \"matrix.sql\"\n```\n\n使用文本编辑器打开 `matrix.sql` 文件，写入下方的内容\n\n> POSTGRES的密码需自行设置，**需与`.env`文件中设置的相同**\n\n```\n-- 创建matrix用户并设置密码\nCREATE USER matrix WITH PASSWORD 'NZ5yZLd5Ntxt3jXYUCCm'; -- 记得要改成你在.env文件中设置的数据库密码\n\n-- 创建使用C排序规则的matrix数据库\nCREATE DATABASE matrix\n    WITH \n    OWNER = matrix\n    ENCODING = 'UTF8'\n    LC_COLLATE = 'C'\n    LC_CTYPE = 'C'\n    TEMPLATE = template0;  -- 使用纯净模板，避免继承默认设置\n\n-- 授予所有权限\nGRANT ALL PRIVILEGES ON DATABASE matrix TO matrix;\n```\n\n### 生成配置文件\n\n请将第三行的`matrix.example.com`改为你的服务端域名\n\n```\nsudo docker run -it --rm \\\n-v /data/synapse/data:/data \\\n-e SYNAPSE_SERVER_NAME=matrix.example.com \\\n-e SYNAPSE_REPORT_STATS=yes \\\nmatrixdotorg/synapse:latest generate\n```\n\n执行完后，你的目录结构应为如下，若不同请检查是否有遗漏步骤\n\n```yaml\nsynapse\n├── data\n│   ├── homeserver.yaml # 家服务器配置文件\n│   ├── matrix.example.com.log.config # 日志文件\n│   └── matrix.example.com.signing.key # 服务端密钥\n├── init\n│   └── matrix.sql # 创建数据库命令\n├── .env # compose环境变量文件\n└── docker-compose.yml # Docker Compose编排脚本\n```\n\n此时，你的`默认homeserver.yaml`服务端配置文件应为如下，\n\n```\n# Configuration file for Synapse.\n#\n# This is a YAML file: see [1] for a quick introduction. Note in particular\n# that *indentation is important*: all the elements of a list or dictionary\n# should have the same indentation.\n#\n# [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\n#\n# For more information on how to configure Synapse, including a complete accounting of\n# each option, go to docs/usage/configuration/config_documentation.md or\n# https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html\nserver_name: \"matrix.example.com\" # 服务器域名\npid_file: /data/homeserver.pid # 协议类型（http/manhole/metrics）\nlisteners: # 服务监听配置\n  - port: 8008 # 监听端口\n    tls: false # 是否启用https\n    type: http # 协议类型\n    x_forwarded: true # 启用 X-Forwarded-For 头\n    resources: # 资源类型 \n      - names: [client, federation] # 资源列表\n        compress: false # 启用 gzip 压缩\ndatabase: # 数据库配置\n  name: sqlite3 # 默认使用sqllite数据库\n  args:\n    database: /data/homeserver.db # 数据库存储路径\nlog_config: \"/data/matrix.example.com.log.config\" # 日志配置文件路径\nmedia_store_path: /data/media_store\nregistration_shared_secret: \"VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&6KUbh=9.Cr*YbQB\"\nreport_stats: true\nmacaroon_secret_key: \"~_wKxePWW&I@,xlWG6j:&lv8#1.io#:Ru:kjqL8T;J6.esRvkS\"\nform_secret: \"34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK\"\nsigning_key_path: \"/data/matrix.example.com.signing.key\"\ntrusted_key_servers:\n  - server_name: \"matrix.org\"\n\n\n# vim:ft=yaml\n```\n\n### 修改服务端配置文件\n\n- 1. 注释原`database`块、配置`Postgres`数据库，修改后如下：\n\n你可选择配置连接池最小/最大连接数\n\n```yaml\ndatabase:\n  name: psycopg2                              # 使用 PostgreSQL 驱动\n  args:\n    user: matrix                              # 数据库用户\n    password: NZ5yZLd5Ntxt3jXYUCCm            # 数据库密码\n    dbname: matrix                            # 数据库名\n    host: matrix-pg                           # 数据库容器名\n#     cp_min: 5                                 # 连接池最小连接数\n#     cp_max: 10                                # 连接池最大连接数\n\n\n# database:\n#   name: sqlite3\n#   args:\n#     database: /data/homeserver.db\n```\n\n- 2. 新增自动生成`.well-known`文件配置，新增客户端访问地址配置\n\n```\n# 自动生成 .well-known 文件\nserve_server_wellknown: true \n# 客户端访问地址\npublic_baseurl: https://matrix.example.com\n```\n\n- 3. **Debug测试**：添加开放注册、注册无需验证配置（生产环境请关闭、注释或删除后重启容器即可）\n\n```\n# 为新用户启用注册\nenable_registration: true\n# 无需电子邮件或 recaptcha 验证即可注册（其实不推荐）\nenable_registration_without_verification: true\n```\n\n<u>**若要添加下方可选配置，请完成上方配置后测试是否可以正常使用再进行配置**</u>\n\n- 4. （**可选**）配置邮件通知\n\n```\nemail:\n  smtp_host: smtp.example.com                 # SMTP 服务器\n  smtp_port: 465                              # SMTP 端口\n  smtp_user: matrix@example.com               # SMTP 用户\n  smtp_pass: Mailpassword                     # SMTP 密码\n  force_tls: true                             # 强制 TLS\n  require_transport_security: true            # 要求传输安全\n  enable_tls: true                            # 启用 TLS\n  notif_from: \"Matrix <service@example.com>\"  # 通知来源\n  enable_notifs: true                         # 启用通知\n```\n\n- 5. （可选）优化性能\n\n```\n# 事件缓存大小\nevent_cache_size: 10K\n# 缓存配置\ncaches:\n  global_factor: 0.5                          # 全局缓存系数\n  per_cache_factors:                          # 单个缓存系数\n    get_users_who_share_room_with_user: 2.0\n  expire_caches: true                         # 启用缓存过期\n  cache_entry_ttl: 30m                        # 缓存条目存活时间\n# 垃圾回收\ngc_thresholds: [700, 10, 10]                  # GC 阈值\ngc_min_interval: [1s, 10s, 30s]               # GC 最小间隔\n# 性能优化\nmax_event_delay_duration: 24h                 # 最大事件延迟\nfilter_timeline_limit: 100                    # 时间线事件限制\n```\n\n- 6. （可选）安全配置\n\n```\nip_range_blacklist:                           # 禁止访问的 IP 段\n  - \"127.0.0.0/8\"\n  - \"10.0.0.0/8\"\nip_range_whitelist:                           # 允许访问的 IP 段（覆盖黑名单）\n  - \"192.168.1.0/24\"\n```\n\n- 7. （可选）联邦配置\n\n```\n# 联邦白名单\nfederation_domain_whitelist:\n  - example.com\n  - another.com\n# 联邦证书验证\nfederation_verify_certificates: true          # 验证联邦证书\nfederation_client_minimum_tls_version: \"1.2\"  # 最低 TLS 版本\n```\n\n- 8. 保留策略\n\n```\nretention:\n  enabled: true                               # 启用保留策略\n  default_policy:                             # 默认策略\n    min_lifetime: 30d\t\t\t\t\t\t  # 超过1天的记录自动删除\n    max_lifetime: 1y\t\t\t\t\t\t  # 允许的最大保留时间（可选）\n  allowed_lifetime_min: 1d                    # 最小允许保留时间\n  allowed_lifetime_max: 1y                    # 最大允许保留时间\n  purge_jobs:                                 # 定期清理任务\n    - shortest_max_lifetime: 30d\t\t\t  # 处理超过30天的数据\n      interval: 1d\t\t\t\t\t\t\t  # 每天执行一次\n```\n\n- 9. 其他配置\n\n```\n# 用户类型\nuser_types:\n  default_user_type: null\n  extra_user_types: []\n# 限制配置\nlimit_usage_by_mau: false                     # 限制月活用户\nmax_mau_value: 0                              # 最大月活用户数\n# 模板配置\ntemplates:\n  custom_template_directory: /path/to/templates # 自定义模板目录\n```\n\n### 我自用的最终`homeserver.yaml`文件如下（关键部分脱敏）\n\n```\n# Configuration file for Synapse.\n#\n# This is a YAML file: see [1] for a quick introduction. Note in particular\n# that *indentation is important*: all the elements of a list or dictionary\n# should have the same indentation.\n#\n# [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\n#\n# For more information on how to configure Synapse, including a complete accounting of\n# each option, go to docs/usage/configuration/config_documentation.md or\n# https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html\n# 服务器域名\nserver_name: \"matrix.example.com\"\n\n# 自动生成 .well-known 文件\nserve_server_wellknown: true \n\n# 客户端访问地址\npublic_baseurl: https://matrix.example.com\n\n# PID 文件路径\npid_file: /data/homeserver.pid\n\n# 服务监听配置\nlisteners:\n    # 监听端口\n  - port: 8008\n    # 是否启用https\n    tls: false\n    # 协议类型\n    type: http\n    # 启用 X-Forwarded-For 头\n    x_forwarded: true\n    # 资源类型\n    resources:\n        # 资源列表\n      - names: [client, federation]\n        # 启用 gzip 压缩\n        compress: true\ndatabase:\n  name: psycopg2                              # 使用 PostgreSQL 驱动\n  args:\n    user: matrix                              # 数据库用户\n    password: zR7Kd5AKb3BE7Y5k                # 数据库密码\n    dbname: matrix                            # 数据库名\n    host: matrix-pg                           # 数据库容器名\n#     cp_min: 5                                 # 连接池最小连接数\n#     cp_max: 10                                # 连接池最大连接数\nlog_config: \"/data/matrix.example.com.log.config\" # 日志配置文件路径\nmedia_store_path: /data/media_store\nregistration_shared_secret: \"VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&6KUbh=9.Cr*YbQB\"\nreport_stats: true\nmacaroon_secret_key: \"~_wKxePWW&I@,xlWG6j:&lv8#1.io#:Ru:kjqL8T;J6.esRvkS\"\nform_secret: \"34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK\"\nsigning_key_path: \"/data/matrix.example.com.signing.key\"\ntrusted_key_servers:\n  - server_name: \"matrix.org\"\n\n\nenable_registration: true\nenable_registration_without_verification: true\n\n\n\n# 事件缓存大小\nevent_cache_size: 10K\n# 缓存配置\ncaches:\n  global_factor: 0.5                          # 全局缓存系数\n  per_cache_factors:                          # 单个缓存系数\n    get_users_who_share_room_with_user: 2.0\n  expire_caches: true                         # 启用缓存过期\n  cache_entry_ttl: 60m                        # 缓存条目存活时间\n# 垃圾回收\ngc_thresholds: [700, 10, 10]                  # GC 阈值\ngc_min_interval: [1s, 10s, 30s]               # GC 最小间隔\n# 性能优化\nmax_event_delay_duration: 24h                 # 最大事件延迟\nfilter_timeline_limit: 100                    # 时间线事件限制\n\n\n\nemail:\n  smtp_host: smtp.example.com                 # SMTP 服务器\n  smtp_port: 465                              # SMTP 端口\n  smtp_user: matrix@example.com               # SMTP 用户\n  smtp_pass: Mailpassword                     # SMTP 密码\n  force_tls: true                             # 强制 TLS\n  require_transport_security: true            # 要求传输安全\n  enable_tls: true                            # 启用 TLS\n  notif_from: \"Matrix <service@example.com>\"  # 通知来源\n  enable_notifs: true                         # 启用通知\n  \n  \n# 服务器提示配置\n# server_notices:\n#   enabled: true  # 启用服务器提示功能\n  # 可选：配置发送提示的机器人账号（需提前注册）\n#   sender_localpart: \"bot\"\n  # 可选：提示的默认房间配置\n#   room_name: \"Server Notices\"\n#   room_alias: \"@bot:matrix.hslzz.cn\"\n  # 可选：提示消息的模板\n#   message_type: \"m.text\"\n# vim:ft=yaml\n```\n\n### 构建Docker容器\n\n现在万事大吉，可以开始构建你的Docker容器了\n\n```\ncd && cd /data/synapse && docker compose up -d\n```\n\n## 配置反向代理进行访问测试\n\n- 上游服务器：`http://127.0.0.1:你设置的端口号` 或`http://Synapse容器ip:8080`\n- 域名：你的服务端域名，在本篇文章是`matrix.example.com`\n\n配置好反向代理进行访问，若为此页面则为安装成功\n\n![正常访问示例](/img/post/11/1.png)\n\n## 添加第一个管理员用户\n\n请将命令最后的用户名和密码替换成你想添加的用户名和密码\n\n```\ndocker exec -it matrix-synapse register_new_matrix_user http://localhost:8008 -c /data/homeserver.yaml -a -u 用户名 -p 密码\n```\n\n### 创建其他类型的账户\n\n#### 1. 进入 Synapse 容器\n\n```bash\ndocker exec -it matrix-synapse bash\n```\n\n#### 2. 创建普通用户（交互式）\n\n```bash\n进入虚拟环境（如果使用虚拟环境）\nsource /env/bin/activate  # 根据实际路径调整\n# 运行注册命令\nregister_new_matrix_user -c /config/homeserver.yaml\n```\n\n按提示输入：\n\n```bash\nNew user localpart: alice    # 用户名（不含域名）\nPassword:                   # 输入密码\nConfirm password:           # 再次输入密码\nMake admin [no]:            # 输入 yes 或 no（是否管理员）\nSuccess!\n```\n\n### 创建普通用户（非交互式）\n\n```bash\ndocker exec matrix-synapse register_new_matrix_user \\\n  -c /config/homeserver.yaml \\\n  --user alice \\\n  --password Password \\\n  --no-admin\n```\n\n## 修改Android端\n\n在Google Play中下载`Element`：\n\n`https://play.google.com/store/apps/details?id=im.vector.app`\n\n或下载我在Google Play安装后提取的安装包：\n\n```\nhttps://cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/Element_1.6.42.apk\n```\n\n```\nhttps://github.com/sweetsky123/matrix-docker/releases/download/Release/Element_1.6.42.apk\n```\n\n\n\n默认的Element软件启动后点击登录或注册，会先连接`matrix.org`，且在连接过程中无法点击任何东西。\n\n![](/img/post/11/2.png)\n\n由于众所周知的原因，中国大陆网络无法连接`matrix.org`，导致无法使用`Element`作为`Android Matrix`客户端。\n\n<u>**因此，我们需要对它的APK进行反编译以修改连接地址**</u>\n\n推荐我自用的MT管理器版本\n\n```\nhttps:/cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/MTManager_2.18.2.apk\n```\n\n```\nhttps://github.com/sweetsky123/matrix-docker/releases/download/Release/MTManager_2.18.2.apk\n```\n\n1. **点击APK安装包后，进入`查看`**\n\n2. 点击任意`.dex`文件后，点击第一个选项`Dex编辑器++`\n\n3. 全选所有`dex`文件，点击确定\n4. 搜索`matrix.org`\n5. 将`matrix.org`替换为你的域名：\n\n  - `matrix.org`替换为你的服务端域名，如`matrix.example.com`\n  - `matrix-client.matrix.org`替换为你的客户端域名，如`matrix-client.example.com`\n\n然后点击右上角的锤子进行编译，编译后退出，按提示保存即可。\n","source":"_posts/11.Marix+Synapse部署教程.md","raw":"---\ntitle: 保姆级Matrix+Synapse部署教程，支持端到端加密，部署一个独属于自己的去中心化在线加密匿名聊天室！\ndate: 2025-07-28 23:30:50\nupdated: 2025-09-12 19:30:20\ntags:\n  - Linux\n  - 经验\n  - Matrix\ncategories:\n  - Linux\nseries: 11\ndescription: 本文没有废话，全是干货，保姆式讲解了如何在Linux系统上通过Docker部署Matrix+Synapse服务端，实现去中心化端到端加密聊天。）、通过Docker Compose安装配置Postgres数据库、生成服务端配置文件、修改数据库连接及开放注册设置，并提供客户端Element APK反编译修改连接域名的方法，最终实现独立部署的加密匿名聊天室。\n---\n\n## 什么是Matrix\n\n### `Martix`是`完全开源免费`的通信协议\n\n`Martix`是用于安全实时通信的去中心化端到端加密通信协议，可以保护您的隐私和通信自由。\n\n`Martix`通过端到端加密来保护您的通信安全，可确保消息在发送方和接收方之间加密，中间服务器无法访问消息内容。Matrix 采用了分散式架构，没有单一的中央服务器，而是由多个独立的服务器通过联邦组成网络。\n\n`Martix`支持去中心化端到端加密通信、WebRTC语音，视频通话、消息已读，输入状态提示、群组聊天等。\n\n\n\n## 环境依赖\n\n安装Matrix前请确保你的系统环境符合以下要求\n\n- 操作系统：Linux\n- CPU 指令架构：x86_64, arm64\n- CPU 指令架构：x86_64 架构需要支持 ssse3 指令集\n- 软件依赖：Docker 20.10.14 版本以上\n- 软件依赖：Docker Compose 2.0.0 版本以上\n- 最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘\n\n可以根据以下命令来查看相关信息\n\n```bash\nuname -m                                    # 查看指令架构\ncat /proc/cpuinfo| grep \"processor\"         # 查看 CPU 信息\nlscpu | grep ssse3                          # 确认 CPU 是否支持 ssse3 指令集\ndocker version                              # 查看 Docker 版本\ndocker compose version                      # 查看 Docker Compose 版本\ndocker-compose version                      # 查看老版本 docker-compose 版本\nfree -h                                     # 查看内存信息\ndf -h                                       # 查看磁盘信息\n```\n\n## 安装前准备\n\n安装前，请先想好你的服务端域名和客户端域名（如果你有指定客户端域名的需求）\n\n在本篇教程中：\n\n- 服务端域名：`matrix.example.com`\n- 客户端域名：`matrix-client.example.com`\n\n\n\n## 安装Matrix\n\n安装前，请确保全程在`root`用户下安装，否则可能安装失败\n\n示例仓库：\n\n```\nhttps://github.com/sweetsky123/matrix-docker\n```\n\n```\nhttps://cnb.cool/hslzz/matrix-docker\n```\n\n### 创建目录\n\n```bash\nmkdir /data/synapse\n```\n\n### 创建Docker Compose编排脚本\n\n在/data/synapse文件夹下创建docker-compose.yml\n\n```bash\ncd /data/synapse && touch \"docker-compose.yml\"\n```\n\n使用文本编辑器打开 `docer-compose.yml` 文件，写入下方的内容\n\n```yaml\nnetworks:\n  synapse:\n    name: synapse\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n      \t\t# 指定网关\n        - gateway: ${SUBNET_PREFIX:?SUBNET_PREFIX required}.1\n        \t# 指定网段\n          subnet: ${SUBNET_PREFIX}.0/24\n    driver_opts:\n      com.docker.network.bridge.name: synapse\nservices:\n    # Matrix容器\n  matrix-synapse:\n      # 镜像地址\n    image: \"matrixdotorg/synapse:latest\"\n      # 容器名称\n    container_name: \"matrix-synapse\"\n      # 异常停止自动重启\n    restart: unless-stopped\n    ports:\n        # 端口转发\n      - ${MARTRIX_PORT:?error message}:8008 \n    volumes:\n      - \"./data:/data\" \n    environment:\n      VIRTUAL_HOST: \"${SERVICE_URL:?error message}\"\n      VIRTUAL_PORT: 8008\n      LETSENCRYPT_HOST: \"${SERVICE_URL:?error message}\"\n      SYNAPSE_SERVER_NAME: \"${SERVICE_URL:?error message}\"\n      SYNAPSE_REPORT_STATS: \"yes\"\n    depends_on:\n      - matrix-pg\n\n    # Postgres数据库\n  matrix-pg:\n      # 镜像地址\n    image: postgres:latest\n      # 容器名称\n    container_name: matrix-pg\n    environment:\n      # 管理员密码\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error message}  # postgres管理员密码\n    volumes:\n        # 持久化数据放置目录\n      - ./pgdata:/var/lib/postgresql/data\n        # 脚本目录\n      - ./init:/docker-entrypoint-initdb.d\n      # 异常停止自动重启\n    restart: unless-stopped\n    \n```\n\n### 配置compose环境变量\n\n使用下方的命令进入`Matrix`安装目录，并创建`.env`文件\n\n```\ncd /data/synapse && touch \".env\"\n```\n\n使用文本编辑器打开 `.env` 文件，写入下方的内容，POSTGRES的密码需自定义\n\n```\nMARTRIX_PORT=10086\nSERVICE_URL=matrix.example.com\nPOSTGRES_PASSWORD=NZ5yZLd5Ntxt3jXYUCCm\n```\n\n>  推荐的随机密码生成器：[安全、强大的密码生成器 | 1Password](https://1password.com/zh-cn/password-generator)\n\n配置文件的格式说明如下：\n\n- MARTRIX_PORT：`Martix`容器的对外端口，请修改为`1-65535`之内的任意数字\n- SERVICE_URL：服务端域名，如`matrix.example.com`\n- POSTGRES_PASSWORD：`Martix`所需数据库的初始化密码，请随机生成一个\n\n### 配置数据库创建脚本\n\n使用下方的命令创建`/init`文件夹，并创建`matrix.sql`文件\n\n```\ncd && mkdir /data/synapse/init && cd /data/synapse/init && touch \"matrix.sql\"\n```\n\n使用文本编辑器打开 `matrix.sql` 文件，写入下方的内容\n\n> POSTGRES的密码需自行设置，**需与`.env`文件中设置的相同**\n\n```\n-- 创建matrix用户并设置密码\nCREATE USER matrix WITH PASSWORD 'NZ5yZLd5Ntxt3jXYUCCm'; -- 记得要改成你在.env文件中设置的数据库密码\n\n-- 创建使用C排序规则的matrix数据库\nCREATE DATABASE matrix\n    WITH \n    OWNER = matrix\n    ENCODING = 'UTF8'\n    LC_COLLATE = 'C'\n    LC_CTYPE = 'C'\n    TEMPLATE = template0;  -- 使用纯净模板，避免继承默认设置\n\n-- 授予所有权限\nGRANT ALL PRIVILEGES ON DATABASE matrix TO matrix;\n```\n\n### 生成配置文件\n\n请将第三行的`matrix.example.com`改为你的服务端域名\n\n```\nsudo docker run -it --rm \\\n-v /data/synapse/data:/data \\\n-e SYNAPSE_SERVER_NAME=matrix.example.com \\\n-e SYNAPSE_REPORT_STATS=yes \\\nmatrixdotorg/synapse:latest generate\n```\n\n执行完后，你的目录结构应为如下，若不同请检查是否有遗漏步骤\n\n```yaml\nsynapse\n├── data\n│   ├── homeserver.yaml # 家服务器配置文件\n│   ├── matrix.example.com.log.config # 日志文件\n│   └── matrix.example.com.signing.key # 服务端密钥\n├── init\n│   └── matrix.sql # 创建数据库命令\n├── .env # compose环境变量文件\n└── docker-compose.yml # Docker Compose编排脚本\n```\n\n此时，你的`默认homeserver.yaml`服务端配置文件应为如下，\n\n```\n# Configuration file for Synapse.\n#\n# This is a YAML file: see [1] for a quick introduction. Note in particular\n# that *indentation is important*: all the elements of a list or dictionary\n# should have the same indentation.\n#\n# [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\n#\n# For more information on how to configure Synapse, including a complete accounting of\n# each option, go to docs/usage/configuration/config_documentation.md or\n# https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html\nserver_name: \"matrix.example.com\" # 服务器域名\npid_file: /data/homeserver.pid # 协议类型（http/manhole/metrics）\nlisteners: # 服务监听配置\n  - port: 8008 # 监听端口\n    tls: false # 是否启用https\n    type: http # 协议类型\n    x_forwarded: true # 启用 X-Forwarded-For 头\n    resources: # 资源类型 \n      - names: [client, federation] # 资源列表\n        compress: false # 启用 gzip 压缩\ndatabase: # 数据库配置\n  name: sqlite3 # 默认使用sqllite数据库\n  args:\n    database: /data/homeserver.db # 数据库存储路径\nlog_config: \"/data/matrix.example.com.log.config\" # 日志配置文件路径\nmedia_store_path: /data/media_store\nregistration_shared_secret: \"VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&6KUbh=9.Cr*YbQB\"\nreport_stats: true\nmacaroon_secret_key: \"~_wKxePWW&I@,xlWG6j:&lv8#1.io#:Ru:kjqL8T;J6.esRvkS\"\nform_secret: \"34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK\"\nsigning_key_path: \"/data/matrix.example.com.signing.key\"\ntrusted_key_servers:\n  - server_name: \"matrix.org\"\n\n\n# vim:ft=yaml\n```\n\n### 修改服务端配置文件\n\n- 1. 注释原`database`块、配置`Postgres`数据库，修改后如下：\n\n你可选择配置连接池最小/最大连接数\n\n```yaml\ndatabase:\n  name: psycopg2                              # 使用 PostgreSQL 驱动\n  args:\n    user: matrix                              # 数据库用户\n    password: NZ5yZLd5Ntxt3jXYUCCm            # 数据库密码\n    dbname: matrix                            # 数据库名\n    host: matrix-pg                           # 数据库容器名\n#     cp_min: 5                                 # 连接池最小连接数\n#     cp_max: 10                                # 连接池最大连接数\n\n\n# database:\n#   name: sqlite3\n#   args:\n#     database: /data/homeserver.db\n```\n\n- 2. 新增自动生成`.well-known`文件配置，新增客户端访问地址配置\n\n```\n# 自动生成 .well-known 文件\nserve_server_wellknown: true \n# 客户端访问地址\npublic_baseurl: https://matrix.example.com\n```\n\n- 3. **Debug测试**：添加开放注册、注册无需验证配置（生产环境请关闭、注释或删除后重启容器即可）\n\n```\n# 为新用户启用注册\nenable_registration: true\n# 无需电子邮件或 recaptcha 验证即可注册（其实不推荐）\nenable_registration_without_verification: true\n```\n\n<u>**若要添加下方可选配置，请完成上方配置后测试是否可以正常使用再进行配置**</u>\n\n- 4. （**可选**）配置邮件通知\n\n```\nemail:\n  smtp_host: smtp.example.com                 # SMTP 服务器\n  smtp_port: 465                              # SMTP 端口\n  smtp_user: matrix@example.com               # SMTP 用户\n  smtp_pass: Mailpassword                     # SMTP 密码\n  force_tls: true                             # 强制 TLS\n  require_transport_security: true            # 要求传输安全\n  enable_tls: true                            # 启用 TLS\n  notif_from: \"Matrix <service@example.com>\"  # 通知来源\n  enable_notifs: true                         # 启用通知\n```\n\n- 5. （可选）优化性能\n\n```\n# 事件缓存大小\nevent_cache_size: 10K\n# 缓存配置\ncaches:\n  global_factor: 0.5                          # 全局缓存系数\n  per_cache_factors:                          # 单个缓存系数\n    get_users_who_share_room_with_user: 2.0\n  expire_caches: true                         # 启用缓存过期\n  cache_entry_ttl: 30m                        # 缓存条目存活时间\n# 垃圾回收\ngc_thresholds: [700, 10, 10]                  # GC 阈值\ngc_min_interval: [1s, 10s, 30s]               # GC 最小间隔\n# 性能优化\nmax_event_delay_duration: 24h                 # 最大事件延迟\nfilter_timeline_limit: 100                    # 时间线事件限制\n```\n\n- 6. （可选）安全配置\n\n```\nip_range_blacklist:                           # 禁止访问的 IP 段\n  - \"127.0.0.0/8\"\n  - \"10.0.0.0/8\"\nip_range_whitelist:                           # 允许访问的 IP 段（覆盖黑名单）\n  - \"192.168.1.0/24\"\n```\n\n- 7. （可选）联邦配置\n\n```\n# 联邦白名单\nfederation_domain_whitelist:\n  - example.com\n  - another.com\n# 联邦证书验证\nfederation_verify_certificates: true          # 验证联邦证书\nfederation_client_minimum_tls_version: \"1.2\"  # 最低 TLS 版本\n```\n\n- 8. 保留策略\n\n```\nretention:\n  enabled: true                               # 启用保留策略\n  default_policy:                             # 默认策略\n    min_lifetime: 30d\t\t\t\t\t\t  # 超过1天的记录自动删除\n    max_lifetime: 1y\t\t\t\t\t\t  # 允许的最大保留时间（可选）\n  allowed_lifetime_min: 1d                    # 最小允许保留时间\n  allowed_lifetime_max: 1y                    # 最大允许保留时间\n  purge_jobs:                                 # 定期清理任务\n    - shortest_max_lifetime: 30d\t\t\t  # 处理超过30天的数据\n      interval: 1d\t\t\t\t\t\t\t  # 每天执行一次\n```\n\n- 9. 其他配置\n\n```\n# 用户类型\nuser_types:\n  default_user_type: null\n  extra_user_types: []\n# 限制配置\nlimit_usage_by_mau: false                     # 限制月活用户\nmax_mau_value: 0                              # 最大月活用户数\n# 模板配置\ntemplates:\n  custom_template_directory: /path/to/templates # 自定义模板目录\n```\n\n### 我自用的最终`homeserver.yaml`文件如下（关键部分脱敏）\n\n```\n# Configuration file for Synapse.\n#\n# This is a YAML file: see [1] for a quick introduction. Note in particular\n# that *indentation is important*: all the elements of a list or dictionary\n# should have the same indentation.\n#\n# [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\n#\n# For more information on how to configure Synapse, including a complete accounting of\n# each option, go to docs/usage/configuration/config_documentation.md or\n# https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html\n# 服务器域名\nserver_name: \"matrix.example.com\"\n\n# 自动生成 .well-known 文件\nserve_server_wellknown: true \n\n# 客户端访问地址\npublic_baseurl: https://matrix.example.com\n\n# PID 文件路径\npid_file: /data/homeserver.pid\n\n# 服务监听配置\nlisteners:\n    # 监听端口\n  - port: 8008\n    # 是否启用https\n    tls: false\n    # 协议类型\n    type: http\n    # 启用 X-Forwarded-For 头\n    x_forwarded: true\n    # 资源类型\n    resources:\n        # 资源列表\n      - names: [client, federation]\n        # 启用 gzip 压缩\n        compress: true\ndatabase:\n  name: psycopg2                              # 使用 PostgreSQL 驱动\n  args:\n    user: matrix                              # 数据库用户\n    password: zR7Kd5AKb3BE7Y5k                # 数据库密码\n    dbname: matrix                            # 数据库名\n    host: matrix-pg                           # 数据库容器名\n#     cp_min: 5                                 # 连接池最小连接数\n#     cp_max: 10                                # 连接池最大连接数\nlog_config: \"/data/matrix.example.com.log.config\" # 日志配置文件路径\nmedia_store_path: /data/media_store\nregistration_shared_secret: \"VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&6KUbh=9.Cr*YbQB\"\nreport_stats: true\nmacaroon_secret_key: \"~_wKxePWW&I@,xlWG6j:&lv8#1.io#:Ru:kjqL8T;J6.esRvkS\"\nform_secret: \"34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK\"\nsigning_key_path: \"/data/matrix.example.com.signing.key\"\ntrusted_key_servers:\n  - server_name: \"matrix.org\"\n\n\nenable_registration: true\nenable_registration_without_verification: true\n\n\n\n# 事件缓存大小\nevent_cache_size: 10K\n# 缓存配置\ncaches:\n  global_factor: 0.5                          # 全局缓存系数\n  per_cache_factors:                          # 单个缓存系数\n    get_users_who_share_room_with_user: 2.0\n  expire_caches: true                         # 启用缓存过期\n  cache_entry_ttl: 60m                        # 缓存条目存活时间\n# 垃圾回收\ngc_thresholds: [700, 10, 10]                  # GC 阈值\ngc_min_interval: [1s, 10s, 30s]               # GC 最小间隔\n# 性能优化\nmax_event_delay_duration: 24h                 # 最大事件延迟\nfilter_timeline_limit: 100                    # 时间线事件限制\n\n\n\nemail:\n  smtp_host: smtp.example.com                 # SMTP 服务器\n  smtp_port: 465                              # SMTP 端口\n  smtp_user: matrix@example.com               # SMTP 用户\n  smtp_pass: Mailpassword                     # SMTP 密码\n  force_tls: true                             # 强制 TLS\n  require_transport_security: true            # 要求传输安全\n  enable_tls: true                            # 启用 TLS\n  notif_from: \"Matrix <service@example.com>\"  # 通知来源\n  enable_notifs: true                         # 启用通知\n  \n  \n# 服务器提示配置\n# server_notices:\n#   enabled: true  # 启用服务器提示功能\n  # 可选：配置发送提示的机器人账号（需提前注册）\n#   sender_localpart: \"bot\"\n  # 可选：提示的默认房间配置\n#   room_name: \"Server Notices\"\n#   room_alias: \"@bot:matrix.hslzz.cn\"\n  # 可选：提示消息的模板\n#   message_type: \"m.text\"\n# vim:ft=yaml\n```\n\n### 构建Docker容器\n\n现在万事大吉，可以开始构建你的Docker容器了\n\n```\ncd && cd /data/synapse && docker compose up -d\n```\n\n## 配置反向代理进行访问测试\n\n- 上游服务器：`http://127.0.0.1:你设置的端口号` 或`http://Synapse容器ip:8080`\n- 域名：你的服务端域名，在本篇文章是`matrix.example.com`\n\n配置好反向代理进行访问，若为此页面则为安装成功\n\n![正常访问示例](/img/post/11/1.png)\n\n## 添加第一个管理员用户\n\n请将命令最后的用户名和密码替换成你想添加的用户名和密码\n\n```\ndocker exec -it matrix-synapse register_new_matrix_user http://localhost:8008 -c /data/homeserver.yaml -a -u 用户名 -p 密码\n```\n\n### 创建其他类型的账户\n\n#### 1. 进入 Synapse 容器\n\n```bash\ndocker exec -it matrix-synapse bash\n```\n\n#### 2. 创建普通用户（交互式）\n\n```bash\n进入虚拟环境（如果使用虚拟环境）\nsource /env/bin/activate  # 根据实际路径调整\n# 运行注册命令\nregister_new_matrix_user -c /config/homeserver.yaml\n```\n\n按提示输入：\n\n```bash\nNew user localpart: alice    # 用户名（不含域名）\nPassword:                   # 输入密码\nConfirm password:           # 再次输入密码\nMake admin [no]:            # 输入 yes 或 no（是否管理员）\nSuccess!\n```\n\n### 创建普通用户（非交互式）\n\n```bash\ndocker exec matrix-synapse register_new_matrix_user \\\n  -c /config/homeserver.yaml \\\n  --user alice \\\n  --password Password \\\n  --no-admin\n```\n\n## 修改Android端\n\n在Google Play中下载`Element`：\n\n`https://play.google.com/store/apps/details?id=im.vector.app`\n\n或下载我在Google Play安装后提取的安装包：\n\n```\nhttps://cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/Element_1.6.42.apk\n```\n\n```\nhttps://github.com/sweetsky123/matrix-docker/releases/download/Release/Element_1.6.42.apk\n```\n\n\n\n默认的Element软件启动后点击登录或注册，会先连接`matrix.org`，且在连接过程中无法点击任何东西。\n\n![](/img/post/11/2.png)\n\n由于众所周知的原因，中国大陆网络无法连接`matrix.org`，导致无法使用`Element`作为`Android Matrix`客户端。\n\n<u>**因此，我们需要对它的APK进行反编译以修改连接地址**</u>\n\n推荐我自用的MT管理器版本\n\n```\nhttps:/cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/MTManager_2.18.2.apk\n```\n\n```\nhttps://github.com/sweetsky123/matrix-docker/releases/download/Release/MTManager_2.18.2.apk\n```\n\n1. **点击APK安装包后，进入`查看`**\n\n2. 点击任意`.dex`文件后，点击第一个选项`Dex编辑器++`\n\n3. 全选所有`dex`文件，点击确定\n4. 搜索`matrix.org`\n5. 将`matrix.org`替换为你的域名：\n\n  - `matrix.org`替换为你的服务端域名，如`matrix.example.com`\n  - `matrix-client.matrix.org`替换为你的客户端域名，如`matrix-client.example.com`\n\n然后点击右上角的锤子进行编译，编译后退出，按提示保存即可。\n","slug":"11.Marix+Synapse部署教程","published":1,"comments":1,"layout":"post","photos":[],"_id":"cmfhayg9n00073es3hi3u7bwq","content":"<h2 id=\"什么是Matrix\">什么是Matrix</h2>\n<h3 id=\"Martix是完全开源免费的通信协议\"><code>Martix</code>是<code>完全开源免费</code>的通信协议</h3>\n<p><code>Martix</code>是用于安全实时通信的去中心化端到端加密通信协议，可以保护您的隐私和通信自由。</p>\n<p><code>Martix</code>通过端到端加密来保护您的通信安全，可确保消息在发送方和接收方之间加密，中间服务器无法访问消息内容。Matrix 采用了分散式架构，没有单一的中央服务器，而是由多个独立的服务器通过联邦组成网络。</p>\n<p><code>Martix</code>支持去中心化端到端加密通信、WebRTC语音，视频通话、消息已读，输入状态提示、群组聊天等。</p>\n<h2 id=\"环境依赖\">环境依赖</h2>\n<p>安装Matrix前请确保你的系统环境符合以下要求</p>\n<ul>\n<li>操作系统：Linux</li>\n<li>CPU 指令架构：x86_64, arm64</li>\n<li>CPU 指令架构：x86_64 架构需要支持 ssse3 指令集</li>\n<li>软件依赖：Docker 20.10.14 版本以上</li>\n<li>软件依赖：Docker Compose 2.0.0 版本以上</li>\n<li>最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘</li>\n</ul>\n<p>可以根据以下命令来查看相关信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -m                                    <span class=\"comment\"># 查看指令架构</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/cpuinfo| grep <span class=\"string\">&quot;processor&quot;</span>         <span class=\"comment\"># 查看 CPU 信息</span></span><br><span class=\"line\">lscpu | grep ssse3                          <span class=\"comment\"># 确认 CPU 是否支持 ssse3 指令集</span></span><br><span class=\"line\">docker version                              <span class=\"comment\"># 查看 Docker 版本</span></span><br><span class=\"line\">docker compose version                      <span class=\"comment\"># 查看 Docker Compose 版本</span></span><br><span class=\"line\">docker-compose version                      <span class=\"comment\"># 查看老版本 docker-compose 版本</span></span><br><span class=\"line\">free -h                                     <span class=\"comment\"># 查看内存信息</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -h                                       <span class=\"comment\"># 查看磁盘信息</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装前准备\">安装前准备</h2>\n<p>安装前，请先想好你的服务端域名和客户端域名（如果你有指定客户端域名的需求）</p>\n<p>在本篇教程中：</p>\n<ul>\n<li>服务端域名：<code>matrix.example.com</code></li>\n<li>客户端域名：<code>matrix-client.example.com</code></li>\n</ul>\n<h2 id=\"安装Matrix\">安装Matrix</h2>\n<p>安装前，请确保全程在<code>root</code>用户下安装，否则可能安装失败</p>\n<p>示例仓库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/sweetsky123/matrix-docker</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cnb.cool/hslzz/matrix-docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建目录\">创建目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /data/synapse</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建Docker-Compose编排脚本\">创建Docker Compose编排脚本</h3>\n<p>在/data/synapse文件夹下创建docker-compose.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /data/synapse &amp;&amp; <span class=\"built_in\">touch</span> <span class=\"string\">&quot;docker-compose.yml&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>docer-compose.yml</code> 文件，写入下方的内容</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\">  <span class=\"attr\">synapse:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">synapse</span></span><br><span class=\"line\">    <span class=\"attr\">driver:</span> <span class=\"string\">bridge</span></span><br><span class=\"line\">    <span class=\"attr\">ipam:</span></span><br><span class=\"line\">      <span class=\"attr\">driver:</span> <span class=\"string\">default</span></span><br><span class=\"line\">      <span class=\"attr\">config:</span></span><br><span class=\"line\">      \t\t<span class=\"comment\"># 指定网关</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">gateway:</span> <span class=\"string\">$&#123;SUBNET_PREFIX:?SUBNET_PREFIX</span> <span class=\"string\">required&#125;.1</span></span><br><span class=\"line\">        \t<span class=\"comment\"># 指定网段</span></span><br><span class=\"line\">          <span class=\"attr\">subnet:</span> <span class=\"string\">$&#123;SUBNET_PREFIX&#125;.0/24</span></span><br><span class=\"line\">    <span class=\"attr\">driver_opts:</span></span><br><span class=\"line\">      <span class=\"attr\">com.docker.network.bridge.name:</span> <span class=\"string\">synapse</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"comment\"># Matrix容器</span></span><br><span class=\"line\">  <span class=\"attr\">matrix-synapse:</span></span><br><span class=\"line\">      <span class=\"comment\"># 镜像地址</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&quot;matrixdotorg/synapse:latest&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># 容器名称</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">&quot;matrix-synapse&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># 异常停止自动重启</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"comment\"># 端口转发</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">$&#123;MARTRIX_PORT:?error</span> <span class=\"string\">message&#125;:8008</span> </span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data:/data&quot;</span> </span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">VIRTUAL_HOST:</span> <span class=\"string\">&quot;$&#123;SERVICE_URL:?error message&#125;&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">VIRTUAL_PORT:</span> <span class=\"number\">8008</span></span><br><span class=\"line\">      <span class=\"attr\">LETSENCRYPT_HOST:</span> <span class=\"string\">&quot;$&#123;SERVICE_URL:?error message&#125;&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">SYNAPSE_SERVER_NAME:</span> <span class=\"string\">&quot;$&#123;SERVICE_URL:?error message&#125;&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">SYNAPSE_REPORT_STATS:</span> <span class=\"string\">&quot;yes&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">matrix-pg</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Postgres数据库</span></span><br><span class=\"line\">  <span class=\"attr\">matrix-pg:</span></span><br><span class=\"line\">      <span class=\"comment\"># 镜像地址</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">postgres:latest</span></span><br><span class=\"line\">      <span class=\"comment\"># 容器名称</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">matrix-pg</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"comment\"># 管理员密码</span></span><br><span class=\"line\">      <span class=\"attr\">POSTGRES_PASSWORD:</span> <span class=\"string\">$&#123;POSTGRES_PASSWORD:?error</span> <span class=\"string\">message&#125;</span>  <span class=\"comment\"># postgres管理员密码</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"comment\"># 持久化数据放置目录</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./pgdata:/var/lib/postgresql/data</span></span><br><span class=\"line\">        <span class=\"comment\"># 脚本目录</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./init:/docker-entrypoint-initdb.d</span></span><br><span class=\"line\">      <span class=\"comment\"># 异常停止自动重启</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h3 id=\"配置compose环境变量\">配置compose环境变量</h3>\n<p>使用下方的命令进入<code>Matrix</code>安装目录，并创建<code>.env</code>文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /data/synapse &amp;&amp; touch &quot;.env&quot;</span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>.env</code> 文件，写入下方的内容，POSTGRES的密码需自定义</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MARTRIX_PORT=10086</span><br><span class=\"line\">SERVICE_URL=matrix.example.com</span><br><span class=\"line\">POSTGRES_PASSWORD=NZ5yZLd5Ntxt3jXYUCCm</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>推荐的随机密码生成器：<a href=\"https://1password.com/zh-cn/password-generator\">安全、强大的密码生成器 | 1Password</a></p>\n</blockquote>\n<p>配置文件的格式说明如下：</p>\n<ul>\n<li>MARTRIX_PORT：<code>Martix</code>容器的对外端口，请修改为<code>1-65535</code>之内的任意数字</li>\n<li>SERVICE_URL：服务端域名，如<code>matrix.example.com</code></li>\n<li>POSTGRES_PASSWORD：<code>Martix</code>所需数据库的初始化密码，请随机生成一个</li>\n</ul>\n<h3 id=\"配置数据库创建脚本\">配置数据库创建脚本</h3>\n<p>使用下方的命令创建<code>/init</code>文件夹，并创建<code>matrix.sql</code>文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &amp;&amp; mkdir /data/synapse/init &amp;&amp; cd /data/synapse/init &amp;&amp; touch &quot;matrix.sql&quot;</span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>matrix.sql</code> 文件，写入下方的内容</p>\n<blockquote>\n<p>POSTGRES的密码需自行设置，<strong>需与<code>.env</code>文件中设置的相同</strong></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建matrix用户并设置密码</span><br><span class=\"line\">CREATE USER matrix WITH PASSWORD &#x27;NZ5yZLd5Ntxt3jXYUCCm&#x27;; -- 记得要改成你在.env文件中设置的数据库密码</span><br><span class=\"line\"></span><br><span class=\"line\">-- 创建使用C排序规则的matrix数据库</span><br><span class=\"line\">CREATE DATABASE matrix</span><br><span class=\"line\">    WITH </span><br><span class=\"line\">    OWNER = matrix</span><br><span class=\"line\">    ENCODING = &#x27;UTF8&#x27;</span><br><span class=\"line\">    LC_COLLATE = &#x27;C&#x27;</span><br><span class=\"line\">    LC_CTYPE = &#x27;C&#x27;</span><br><span class=\"line\">    TEMPLATE = template0;  -- 使用纯净模板，避免继承默认设置</span><br><span class=\"line\"></span><br><span class=\"line\">-- 授予所有权限</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON DATABASE matrix TO matrix;</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成配置文件\">生成配置文件</h3>\n<p>请将第三行的<code>matrix.example.com</code>改为你的服务端域名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -it --rm \\</span><br><span class=\"line\">-v /data/synapse/data:/data \\</span><br><span class=\"line\">-e SYNAPSE_SERVER_NAME=matrix.example.com \\</span><br><span class=\"line\">-e SYNAPSE_REPORT_STATS=yes \\</span><br><span class=\"line\">matrixdotorg/synapse:latest generate</span><br></pre></td></tr></table></figure>\n<p>执行完后，你的目录结构应为如下，若不同请检查是否有遗漏步骤</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">synapse</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">data</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">├──</span> <span class=\"string\">homeserver.yaml</span> <span class=\"comment\"># 家服务器配置文件</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">├──</span> <span class=\"string\">matrix.example.com.log.config</span> <span class=\"comment\"># 日志文件</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">└──</span> <span class=\"string\">matrix.example.com.signing.key</span> <span class=\"comment\"># 服务端密钥</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">init</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">└──</span> <span class=\"string\">matrix.sql</span> <span class=\"comment\"># 创建数据库命令</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">.env</span> <span class=\"comment\"># compose环境变量文件</span></span><br><span class=\"line\"><span class=\"string\">└──</span> <span class=\"string\">docker-compose.yml</span> <span class=\"comment\"># Docker Compose编排脚本</span></span><br></pre></td></tr></table></figure>\n<p>此时，你的<code>默认homeserver.yaml</code>服务端配置文件应为如下，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Configuration file for Synapse.</span><br><span class=\"line\">#</span><br><span class=\"line\"># This is a YAML file: see [1] for a quick introduction. Note in particular</span><br><span class=\"line\"># that *indentation is important*: all the elements of a list or dictionary</span><br><span class=\"line\"># should have the same indentation.</span><br><span class=\"line\">#</span><br><span class=\"line\"># [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html</span><br><span class=\"line\">#</span><br><span class=\"line\"># For more information on how to configure Synapse, including a complete accounting of</span><br><span class=\"line\"># each option, go to docs/usage/configuration/config_documentation.md or</span><br><span class=\"line\"># https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html</span><br><span class=\"line\">server_name: &quot;matrix.example.com&quot; # 服务器域名</span><br><span class=\"line\">pid_file: /data/homeserver.pid # 协议类型（http/manhole/metrics）</span><br><span class=\"line\">listeners: # 服务监听配置</span><br><span class=\"line\">  - port: 8008 # 监听端口</span><br><span class=\"line\">    tls: false # 是否启用https</span><br><span class=\"line\">    type: http # 协议类型</span><br><span class=\"line\">    x_forwarded: true # 启用 X-Forwarded-For 头</span><br><span class=\"line\">    resources: # 资源类型 </span><br><span class=\"line\">      - names: [client, federation] # 资源列表</span><br><span class=\"line\">        compress: false # 启用 gzip 压缩</span><br><span class=\"line\">database: # 数据库配置</span><br><span class=\"line\">  name: sqlite3 # 默认使用sqllite数据库</span><br><span class=\"line\">  args:</span><br><span class=\"line\">    database: /data/homeserver.db # 数据库存储路径</span><br><span class=\"line\">log_config: &quot;/data/matrix.example.com.log.config&quot; # 日志配置文件路径</span><br><span class=\"line\">media_store_path: /data/media_store</span><br><span class=\"line\">registration_shared_secret: &quot;VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&amp;6KUbh=9.Cr*YbQB&quot;</span><br><span class=\"line\">report_stats: true</span><br><span class=\"line\">macaroon_secret_key: &quot;~_wKxePWW&amp;I@,xlWG6j:&amp;lv8#1.io#:Ru:kjqL8T;J6.esRvkS&quot;</span><br><span class=\"line\">form_secret: &quot;34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK&quot;</span><br><span class=\"line\">signing_key_path: &quot;/data/matrix.example.com.signing.key&quot;</span><br><span class=\"line\">trusted_key_servers:</span><br><span class=\"line\">  - server_name: &quot;matrix.org&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># vim:ft=yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改服务端配置文件\">修改服务端配置文件</h3>\n<ul>\n<li>\n<ol>\n<li>注释原<code>database</code>块、配置<code>Postgres</code>数据库，修改后如下：</li>\n</ol>\n</li>\n</ul>\n<p>你可选择配置连接池最小/最大连接数</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">database:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">psycopg2</span>                              <span class=\"comment\"># 使用 PostgreSQL 驱动</span></span><br><span class=\"line\">  <span class=\"attr\">args:</span></span><br><span class=\"line\">    <span class=\"attr\">user:</span> <span class=\"string\">matrix</span>                              <span class=\"comment\"># 数据库用户</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">NZ5yZLd5Ntxt3jXYUCCm</span>            <span class=\"comment\"># 数据库密码</span></span><br><span class=\"line\">    <span class=\"attr\">dbname:</span> <span class=\"string\">matrix</span>                            <span class=\"comment\"># 数据库名</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">matrix-pg</span>                           <span class=\"comment\"># 数据库容器名</span></span><br><span class=\"line\"><span class=\"comment\">#     cp_min: 5                                 # 连接池最小连接数</span></span><br><span class=\"line\"><span class=\"comment\">#     cp_max: 10                                # 连接池最大连接数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># database:</span></span><br><span class=\"line\"><span class=\"comment\">#   name: sqlite3</span></span><br><span class=\"line\"><span class=\"comment\">#   args:</span></span><br><span class=\"line\"><span class=\"comment\">#     database: /data/homeserver.db</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"2\">\n<li>新增自动生成<code>.well-known</code>文件配置，新增客户端访问地址配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成 .well-known 文件</span><br><span class=\"line\">serve_server_wellknown: true </span><br><span class=\"line\"># 客户端访问地址</span><br><span class=\"line\">public_baseurl: https://matrix.example.com</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"3\">\n<li><strong>Debug测试</strong>：添加开放注册、注册无需验证配置（生产环境请关闭、注释或删除后重启容器即可）</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 为新用户启用注册</span><br><span class=\"line\">enable_registration: true</span><br><span class=\"line\"># 无需电子邮件或 recaptcha 验证即可注册（其实不推荐）</span><br><span class=\"line\">enable_registration_without_verification: true</span><br></pre></td></tr></table></figure>\n<p><u><strong>若要添加下方可选配置，请完成上方配置后测试是否可以正常使用再进行配置</strong></u></p>\n<ul>\n<li>\n<ol start=\"4\">\n<li>（<strong>可选</strong>）配置邮件通知</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">email:</span><br><span class=\"line\">  smtp_host: smtp.example.com                 # SMTP 服务器</span><br><span class=\"line\">  smtp_port: 465                              # SMTP 端口</span><br><span class=\"line\">  smtp_user: matrix@example.com               # SMTP 用户</span><br><span class=\"line\">  smtp_pass: Mailpassword                     # SMTP 密码</span><br><span class=\"line\">  force_tls: true                             # 强制 TLS</span><br><span class=\"line\">  require_transport_security: true            # 要求传输安全</span><br><span class=\"line\">  enable_tls: true                            # 启用 TLS</span><br><span class=\"line\">  notif_from: &quot;Matrix &lt;service@example.com&gt;&quot;  # 通知来源</span><br><span class=\"line\">  enable_notifs: true                         # 启用通知</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"5\">\n<li>（可选）优化性能</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 事件缓存大小</span><br><span class=\"line\">event_cache_size: 10K</span><br><span class=\"line\"># 缓存配置</span><br><span class=\"line\">caches:</span><br><span class=\"line\">  global_factor: 0.5                          # 全局缓存系数</span><br><span class=\"line\">  per_cache_factors:                          # 单个缓存系数</span><br><span class=\"line\">    get_users_who_share_room_with_user: 2.0</span><br><span class=\"line\">  expire_caches: true                         # 启用缓存过期</span><br><span class=\"line\">  cache_entry_ttl: 30m                        # 缓存条目存活时间</span><br><span class=\"line\"># 垃圾回收</span><br><span class=\"line\">gc_thresholds: [700, 10, 10]                  # GC 阈值</span><br><span class=\"line\">gc_min_interval: [1s, 10s, 30s]               # GC 最小间隔</span><br><span class=\"line\"># 性能优化</span><br><span class=\"line\">max_event_delay_duration: 24h                 # 最大事件延迟</span><br><span class=\"line\">filter_timeline_limit: 100                    # 时间线事件限制</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"6\">\n<li>（可选）安全配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip_range_blacklist:                           # 禁止访问的 IP 段</span><br><span class=\"line\">  - &quot;127.0.0.0/8&quot;</span><br><span class=\"line\">  - &quot;10.0.0.0/8&quot;</span><br><span class=\"line\">ip_range_whitelist:                           # 允许访问的 IP 段（覆盖黑名单）</span><br><span class=\"line\">  - &quot;192.168.1.0/24&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"7\">\n<li>（可选）联邦配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 联邦白名单</span><br><span class=\"line\">federation_domain_whitelist:</span><br><span class=\"line\">  - example.com</span><br><span class=\"line\">  - another.com</span><br><span class=\"line\"># 联邦证书验证</span><br><span class=\"line\">federation_verify_certificates: true          # 验证联邦证书</span><br><span class=\"line\">federation_client_minimum_tls_version: &quot;1.2&quot;  # 最低 TLS 版本</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"8\">\n<li>保留策略</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">retention:</span><br><span class=\"line\">  enabled: true                               # 启用保留策略</span><br><span class=\"line\">  default_policy:                             # 默认策略</span><br><span class=\"line\">    min_lifetime: 30d\t\t\t\t\t\t  # 超过1天的记录自动删除</span><br><span class=\"line\">    max_lifetime: 1y\t\t\t\t\t\t  # 允许的最大保留时间（可选）</span><br><span class=\"line\">  allowed_lifetime_min: 1d                    # 最小允许保留时间</span><br><span class=\"line\">  allowed_lifetime_max: 1y                    # 最大允许保留时间</span><br><span class=\"line\">  purge_jobs:                                 # 定期清理任务</span><br><span class=\"line\">    - shortest_max_lifetime: 30d\t\t\t  # 处理超过30天的数据</span><br><span class=\"line\">      interval: 1d\t\t\t\t\t\t\t  # 每天执行一次</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"9\">\n<li>其他配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 用户类型</span><br><span class=\"line\">user_types:</span><br><span class=\"line\">  default_user_type: null</span><br><span class=\"line\">  extra_user_types: []</span><br><span class=\"line\"># 限制配置</span><br><span class=\"line\">limit_usage_by_mau: false                     # 限制月活用户</span><br><span class=\"line\">max_mau_value: 0                              # 最大月活用户数</span><br><span class=\"line\"># 模板配置</span><br><span class=\"line\">templates:</span><br><span class=\"line\">  custom_template_directory: /path/to/templates # 自定义模板目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"我自用的最终homeserver-yaml文件如下（关键部分脱敏）\">我自用的最终<code>homeserver.yaml</code>文件如下（关键部分脱敏）</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Configuration file for Synapse.</span><br><span class=\"line\">#</span><br><span class=\"line\"># This is a YAML file: see [1] for a quick introduction. Note in particular</span><br><span class=\"line\"># that *indentation is important*: all the elements of a list or dictionary</span><br><span class=\"line\"># should have the same indentation.</span><br><span class=\"line\">#</span><br><span class=\"line\"># [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html</span><br><span class=\"line\">#</span><br><span class=\"line\"># For more information on how to configure Synapse, including a complete accounting of</span><br><span class=\"line\"># each option, go to docs/usage/configuration/config_documentation.md or</span><br><span class=\"line\"># https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html</span><br><span class=\"line\"># 服务器域名</span><br><span class=\"line\">server_name: &quot;matrix.example.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 自动生成 .well-known 文件</span><br><span class=\"line\">serve_server_wellknown: true </span><br><span class=\"line\"></span><br><span class=\"line\"># 客户端访问地址</span><br><span class=\"line\">public_baseurl: https://matrix.example.com</span><br><span class=\"line\"></span><br><span class=\"line\"># PID 文件路径</span><br><span class=\"line\">pid_file: /data/homeserver.pid</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务监听配置</span><br><span class=\"line\">listeners:</span><br><span class=\"line\">    # 监听端口</span><br><span class=\"line\">  - port: 8008</span><br><span class=\"line\">    # 是否启用https</span><br><span class=\"line\">    tls: false</span><br><span class=\"line\">    # 协议类型</span><br><span class=\"line\">    type: http</span><br><span class=\"line\">    # 启用 X-Forwarded-For 头</span><br><span class=\"line\">    x_forwarded: true</span><br><span class=\"line\">    # 资源类型</span><br><span class=\"line\">    resources:</span><br><span class=\"line\">        # 资源列表</span><br><span class=\"line\">      - names: [client, federation]</span><br><span class=\"line\">        # 启用 gzip 压缩</span><br><span class=\"line\">        compress: true</span><br><span class=\"line\">database:</span><br><span class=\"line\">  name: psycopg2                              # 使用 PostgreSQL 驱动</span><br><span class=\"line\">  args:</span><br><span class=\"line\">    user: matrix                              # 数据库用户</span><br><span class=\"line\">    password: zR7Kd5AKb3BE7Y5k                # 数据库密码</span><br><span class=\"line\">    dbname: matrix                            # 数据库名</span><br><span class=\"line\">    host: matrix-pg                           # 数据库容器名</span><br><span class=\"line\">#     cp_min: 5                                 # 连接池最小连接数</span><br><span class=\"line\">#     cp_max: 10                                # 连接池最大连接数</span><br><span class=\"line\">log_config: &quot;/data/matrix.example.com.log.config&quot; # 日志配置文件路径</span><br><span class=\"line\">media_store_path: /data/media_store</span><br><span class=\"line\">registration_shared_secret: &quot;VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&amp;6KUbh=9.Cr*YbQB&quot;</span><br><span class=\"line\">report_stats: true</span><br><span class=\"line\">macaroon_secret_key: &quot;~_wKxePWW&amp;I@,xlWG6j:&amp;lv8#1.io#:Ru:kjqL8T;J6.esRvkS&quot;</span><br><span class=\"line\">form_secret: &quot;34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK&quot;</span><br><span class=\"line\">signing_key_path: &quot;/data/matrix.example.com.signing.key&quot;</span><br><span class=\"line\">trusted_key_servers:</span><br><span class=\"line\">  - server_name: &quot;matrix.org&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">enable_registration: true</span><br><span class=\"line\">enable_registration_without_verification: true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 事件缓存大小</span><br><span class=\"line\">event_cache_size: 10K</span><br><span class=\"line\"># 缓存配置</span><br><span class=\"line\">caches:</span><br><span class=\"line\">  global_factor: 0.5                          # 全局缓存系数</span><br><span class=\"line\">  per_cache_factors:                          # 单个缓存系数</span><br><span class=\"line\">    get_users_who_share_room_with_user: 2.0</span><br><span class=\"line\">  expire_caches: true                         # 启用缓存过期</span><br><span class=\"line\">  cache_entry_ttl: 60m                        # 缓存条目存活时间</span><br><span class=\"line\"># 垃圾回收</span><br><span class=\"line\">gc_thresholds: [700, 10, 10]                  # GC 阈值</span><br><span class=\"line\">gc_min_interval: [1s, 10s, 30s]               # GC 最小间隔</span><br><span class=\"line\"># 性能优化</span><br><span class=\"line\">max_event_delay_duration: 24h                 # 最大事件延迟</span><br><span class=\"line\">filter_timeline_limit: 100                    # 时间线事件限制</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">email:</span><br><span class=\"line\">  smtp_host: smtp.example.com                 # SMTP 服务器</span><br><span class=\"line\">  smtp_port: 465                              # SMTP 端口</span><br><span class=\"line\">  smtp_user: matrix@example.com               # SMTP 用户</span><br><span class=\"line\">  smtp_pass: Mailpassword                     # SMTP 密码</span><br><span class=\"line\">  force_tls: true                             # 强制 TLS</span><br><span class=\"line\">  require_transport_security: true            # 要求传输安全</span><br><span class=\"line\">  enable_tls: true                            # 启用 TLS</span><br><span class=\"line\">  notif_from: &quot;Matrix &lt;service@example.com&gt;&quot;  # 通知来源</span><br><span class=\"line\">  enable_notifs: true                         # 启用通知</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"># 服务器提示配置</span><br><span class=\"line\"># server_notices:</span><br><span class=\"line\">#   enabled: true  # 启用服务器提示功能</span><br><span class=\"line\">  # 可选：配置发送提示的机器人账号（需提前注册）</span><br><span class=\"line\">#   sender_localpart: &quot;bot&quot;</span><br><span class=\"line\">  # 可选：提示的默认房间配置</span><br><span class=\"line\">#   room_name: &quot;Server Notices&quot;</span><br><span class=\"line\">#   room_alias: &quot;@bot:matrix.hslzz.cn&quot;</span><br><span class=\"line\">  # 可选：提示消息的模板</span><br><span class=\"line\">#   message_type: &quot;m.text&quot;</span><br><span class=\"line\"># vim:ft=yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建Docker容器\">构建Docker容器</h3>\n<p>现在万事大吉，可以开始构建你的Docker容器了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &amp;&amp; cd /data/synapse &amp;&amp; docker compose up -d</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置反向代理进行访问测试\">配置反向代理进行访问测试</h2>\n<ul>\n<li>上游服务器：<code>http://127.0.0.1:你设置的端口号</code> 或<code>http://Synapse容器ip:8080</code></li>\n<li>域名：你的服务端域名，在本篇文章是<code>matrix.example.com</code></li>\n</ul>\n<p>配置好反向代理进行访问，若为此页面则为安装成功</p>\n<p><img src=\"/img/post/11/1.png\" alt=\"正常访问示例\"></p>\n<h2 id=\"添加第一个管理员用户\">添加第一个管理员用户</h2>\n<p>请将命令最后的用户名和密码替换成你想添加的用户名和密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it matrix-synapse register_new_matrix_user http://localhost:8008 -c /data/homeserver.yaml -a -u 用户名 -p 密码</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建其他类型的账户\">创建其他类型的账户</h3>\n<h4 id=\"1-进入-Synapse-容器\">1. 进入 Synapse 容器</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it matrix-synapse bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-创建普通用户（交互式）\">2. 创建普通用户（交互式）</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">进入虚拟环境（如果使用虚拟环境）</span><br><span class=\"line\"><span class=\"built_in\">source</span> /env/bin/activate  <span class=\"comment\"># 根据实际路径调整</span></span><br><span class=\"line\"><span class=\"comment\"># 运行注册命令</span></span><br><span class=\"line\">register_new_matrix_user -c /config/homeserver.yaml</span><br></pre></td></tr></table></figure>\n<p>按提示输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">New user localpart: alice    <span class=\"comment\"># 用户名（不含域名）</span></span><br><span class=\"line\">Password:                   <span class=\"comment\"># 输入密码</span></span><br><span class=\"line\">Confirm password:           <span class=\"comment\"># 再次输入密码</span></span><br><span class=\"line\">Make admin [no]:            <span class=\"comment\"># 输入 yes 或 no（是否管理员）</span></span><br><span class=\"line\">Success!</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建普通用户（非交互式）\">创建普通用户（非交互式）</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> matrix-synapse register_new_matrix_user \\</span><br><span class=\"line\">  -c /config/homeserver.yaml \\</span><br><span class=\"line\">  --user alice \\</span><br><span class=\"line\">  --password Password \\</span><br><span class=\"line\">  --no-admin</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改Android端\">修改Android端</h2>\n<p>在Google Play中下载<code>Element</code>：</p>\n<p><code>https://play.google.com/store/apps/details?id=im.vector.app</code></p>\n<p>或下载我在Google Play安装后提取的安装包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/Element_1.6.42.apk</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/sweetsky123/matrix-docker/releases/download/Release/Element_1.6.42.apk</span><br></pre></td></tr></table></figure>\n<p>默认的Element软件启动后点击登录或注册，会先连接<code>matrix.org</code>，且在连接过程中无法点击任何东西。</p>\n<p><img src=\"/img/post/11/2.png\" alt=\"\"></p>\n<p>由于众所周知的原因，中国大陆网络无法连接<code>matrix.org</code>，导致无法使用<code>Element</code>作为<code>Android Matrix</code>客户端。</p>\n<p><u><strong>因此，我们需要对它的APK进行反编译以修改连接地址</strong></u></p>\n<p>推荐我自用的MT管理器版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:/cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/MTManager_2.18.2.apk</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/sweetsky123/matrix-docker/releases/download/Release/MTManager_2.18.2.apk</span><br></pre></td></tr></table></figure>\n<ol>\n<li>\n<p><strong>点击APK安装包后，进入<code>查看</code></strong></p>\n</li>\n<li>\n<p>点击任意<code>.dex</code>文件后，点击第一个选项<code>Dex编辑器++</code></p>\n</li>\n<li>\n<p>全选所有<code>dex</code>文件，点击确定</p>\n</li>\n<li>\n<p>搜索<code>matrix.org</code></p>\n</li>\n<li>\n<p>将<code>matrix.org</code>替换为你的域名：</p>\n</li>\n</ol>\n<ul>\n<li><code>matrix.org</code>替换为你的服务端域名，如<code>matrix.example.com</code></li>\n<li><code>matrix-client.matrix.org</code>替换为你的客户端域名，如<code>matrix-client.example.com</code></li>\n</ul>\n<p>然后点击右上角的锤子进行编译，编译后退出，按提示保存即可。</p>\n","excerpt":"","more":"<h2 id=\"什么是Matrix\">什么是Matrix</h2>\n<h3 id=\"Martix是完全开源免费的通信协议\"><code>Martix</code>是<code>完全开源免费</code>的通信协议</h3>\n<p><code>Martix</code>是用于安全实时通信的去中心化端到端加密通信协议，可以保护您的隐私和通信自由。</p>\n<p><code>Martix</code>通过端到端加密来保护您的通信安全，可确保消息在发送方和接收方之间加密，中间服务器无法访问消息内容。Matrix 采用了分散式架构，没有单一的中央服务器，而是由多个独立的服务器通过联邦组成网络。</p>\n<p><code>Martix</code>支持去中心化端到端加密通信、WebRTC语音，视频通话、消息已读，输入状态提示、群组聊天等。</p>\n<h2 id=\"环境依赖\">环境依赖</h2>\n<p>安装Matrix前请确保你的系统环境符合以下要求</p>\n<ul>\n<li>操作系统：Linux</li>\n<li>CPU 指令架构：x86_64, arm64</li>\n<li>CPU 指令架构：x86_64 架构需要支持 ssse3 指令集</li>\n<li>软件依赖：Docker 20.10.14 版本以上</li>\n<li>软件依赖：Docker Compose 2.0.0 版本以上</li>\n<li>最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘</li>\n</ul>\n<p>可以根据以下命令来查看相关信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -m                                    <span class=\"comment\"># 查看指令架构</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/cpuinfo| grep <span class=\"string\">&quot;processor&quot;</span>         <span class=\"comment\"># 查看 CPU 信息</span></span><br><span class=\"line\">lscpu | grep ssse3                          <span class=\"comment\"># 确认 CPU 是否支持 ssse3 指令集</span></span><br><span class=\"line\">docker version                              <span class=\"comment\"># 查看 Docker 版本</span></span><br><span class=\"line\">docker compose version                      <span class=\"comment\"># 查看 Docker Compose 版本</span></span><br><span class=\"line\">docker-compose version                      <span class=\"comment\"># 查看老版本 docker-compose 版本</span></span><br><span class=\"line\">free -h                                     <span class=\"comment\"># 查看内存信息</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -h                                       <span class=\"comment\"># 查看磁盘信息</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装前准备\">安装前准备</h2>\n<p>安装前，请先想好你的服务端域名和客户端域名（如果你有指定客户端域名的需求）</p>\n<p>在本篇教程中：</p>\n<ul>\n<li>服务端域名：<code>matrix.example.com</code></li>\n<li>客户端域名：<code>matrix-client.example.com</code></li>\n</ul>\n<h2 id=\"安装Matrix\">安装Matrix</h2>\n<p>安装前，请确保全程在<code>root</code>用户下安装，否则可能安装失败</p>\n<p>示例仓库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/sweetsky123/matrix-docker</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cnb.cool/hslzz/matrix-docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建目录\">创建目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /data/synapse</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建Docker-Compose编排脚本\">创建Docker Compose编排脚本</h3>\n<p>在/data/synapse文件夹下创建docker-compose.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /data/synapse &amp;&amp; <span class=\"built_in\">touch</span> <span class=\"string\">&quot;docker-compose.yml&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>docer-compose.yml</code> 文件，写入下方的内容</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\">  <span class=\"attr\">synapse:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">synapse</span></span><br><span class=\"line\">    <span class=\"attr\">driver:</span> <span class=\"string\">bridge</span></span><br><span class=\"line\">    <span class=\"attr\">ipam:</span></span><br><span class=\"line\">      <span class=\"attr\">driver:</span> <span class=\"string\">default</span></span><br><span class=\"line\">      <span class=\"attr\">config:</span></span><br><span class=\"line\">      \t\t<span class=\"comment\"># 指定网关</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">gateway:</span> <span class=\"string\">$&#123;SUBNET_PREFIX:?SUBNET_PREFIX</span> <span class=\"string\">required&#125;.1</span></span><br><span class=\"line\">        \t<span class=\"comment\"># 指定网段</span></span><br><span class=\"line\">          <span class=\"attr\">subnet:</span> <span class=\"string\">$&#123;SUBNET_PREFIX&#125;.0/24</span></span><br><span class=\"line\">    <span class=\"attr\">driver_opts:</span></span><br><span class=\"line\">      <span class=\"attr\">com.docker.network.bridge.name:</span> <span class=\"string\">synapse</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"comment\"># Matrix容器</span></span><br><span class=\"line\">  <span class=\"attr\">matrix-synapse:</span></span><br><span class=\"line\">      <span class=\"comment\"># 镜像地址</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&quot;matrixdotorg/synapse:latest&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># 容器名称</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">&quot;matrix-synapse&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># 异常停止自动重启</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"comment\"># 端口转发</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">$&#123;MARTRIX_PORT:?error</span> <span class=\"string\">message&#125;:8008</span> </span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data:/data&quot;</span> </span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">VIRTUAL_HOST:</span> <span class=\"string\">&quot;$&#123;SERVICE_URL:?error message&#125;&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">VIRTUAL_PORT:</span> <span class=\"number\">8008</span></span><br><span class=\"line\">      <span class=\"attr\">LETSENCRYPT_HOST:</span> <span class=\"string\">&quot;$&#123;SERVICE_URL:?error message&#125;&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">SYNAPSE_SERVER_NAME:</span> <span class=\"string\">&quot;$&#123;SERVICE_URL:?error message&#125;&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">SYNAPSE_REPORT_STATS:</span> <span class=\"string\">&quot;yes&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">matrix-pg</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Postgres数据库</span></span><br><span class=\"line\">  <span class=\"attr\">matrix-pg:</span></span><br><span class=\"line\">      <span class=\"comment\"># 镜像地址</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">postgres:latest</span></span><br><span class=\"line\">      <span class=\"comment\"># 容器名称</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">matrix-pg</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"comment\"># 管理员密码</span></span><br><span class=\"line\">      <span class=\"attr\">POSTGRES_PASSWORD:</span> <span class=\"string\">$&#123;POSTGRES_PASSWORD:?error</span> <span class=\"string\">message&#125;</span>  <span class=\"comment\"># postgres管理员密码</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"comment\"># 持久化数据放置目录</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./pgdata:/var/lib/postgresql/data</span></span><br><span class=\"line\">        <span class=\"comment\"># 脚本目录</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./init:/docker-entrypoint-initdb.d</span></span><br><span class=\"line\">      <span class=\"comment\"># 异常停止自动重启</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h3 id=\"配置compose环境变量\">配置compose环境变量</h3>\n<p>使用下方的命令进入<code>Matrix</code>安装目录，并创建<code>.env</code>文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /data/synapse &amp;&amp; touch &quot;.env&quot;</span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>.env</code> 文件，写入下方的内容，POSTGRES的密码需自定义</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MARTRIX_PORT=10086</span><br><span class=\"line\">SERVICE_URL=matrix.example.com</span><br><span class=\"line\">POSTGRES_PASSWORD=NZ5yZLd5Ntxt3jXYUCCm</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>推荐的随机密码生成器：<a href=\"https://1password.com/zh-cn/password-generator\">安全、强大的密码生成器 | 1Password</a></p>\n</blockquote>\n<p>配置文件的格式说明如下：</p>\n<ul>\n<li>MARTRIX_PORT：<code>Martix</code>容器的对外端口，请修改为<code>1-65535</code>之内的任意数字</li>\n<li>SERVICE_URL：服务端域名，如<code>matrix.example.com</code></li>\n<li>POSTGRES_PASSWORD：<code>Martix</code>所需数据库的初始化密码，请随机生成一个</li>\n</ul>\n<h3 id=\"配置数据库创建脚本\">配置数据库创建脚本</h3>\n<p>使用下方的命令创建<code>/init</code>文件夹，并创建<code>matrix.sql</code>文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &amp;&amp; mkdir /data/synapse/init &amp;&amp; cd /data/synapse/init &amp;&amp; touch &quot;matrix.sql&quot;</span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>matrix.sql</code> 文件，写入下方的内容</p>\n<blockquote>\n<p>POSTGRES的密码需自行设置，<strong>需与<code>.env</code>文件中设置的相同</strong></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建matrix用户并设置密码</span><br><span class=\"line\">CREATE USER matrix WITH PASSWORD &#x27;NZ5yZLd5Ntxt3jXYUCCm&#x27;; -- 记得要改成你在.env文件中设置的数据库密码</span><br><span class=\"line\"></span><br><span class=\"line\">-- 创建使用C排序规则的matrix数据库</span><br><span class=\"line\">CREATE DATABASE matrix</span><br><span class=\"line\">    WITH </span><br><span class=\"line\">    OWNER = matrix</span><br><span class=\"line\">    ENCODING = &#x27;UTF8&#x27;</span><br><span class=\"line\">    LC_COLLATE = &#x27;C&#x27;</span><br><span class=\"line\">    LC_CTYPE = &#x27;C&#x27;</span><br><span class=\"line\">    TEMPLATE = template0;  -- 使用纯净模板，避免继承默认设置</span><br><span class=\"line\"></span><br><span class=\"line\">-- 授予所有权限</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON DATABASE matrix TO matrix;</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成配置文件\">生成配置文件</h3>\n<p>请将第三行的<code>matrix.example.com</code>改为你的服务端域名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -it --rm \\</span><br><span class=\"line\">-v /data/synapse/data:/data \\</span><br><span class=\"line\">-e SYNAPSE_SERVER_NAME=matrix.example.com \\</span><br><span class=\"line\">-e SYNAPSE_REPORT_STATS=yes \\</span><br><span class=\"line\">matrixdotorg/synapse:latest generate</span><br></pre></td></tr></table></figure>\n<p>执行完后，你的目录结构应为如下，若不同请检查是否有遗漏步骤</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">synapse</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">data</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">├──</span> <span class=\"string\">homeserver.yaml</span> <span class=\"comment\"># 家服务器配置文件</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">├──</span> <span class=\"string\">matrix.example.com.log.config</span> <span class=\"comment\"># 日志文件</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">└──</span> <span class=\"string\">matrix.example.com.signing.key</span> <span class=\"comment\"># 服务端密钥</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">init</span></span><br><span class=\"line\"><span class=\"string\">│</span>   <span class=\"string\">└──</span> <span class=\"string\">matrix.sql</span> <span class=\"comment\"># 创建数据库命令</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">.env</span> <span class=\"comment\"># compose环境变量文件</span></span><br><span class=\"line\"><span class=\"string\">└──</span> <span class=\"string\">docker-compose.yml</span> <span class=\"comment\"># Docker Compose编排脚本</span></span><br></pre></td></tr></table></figure>\n<p>此时，你的<code>默认homeserver.yaml</code>服务端配置文件应为如下，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Configuration file for Synapse.</span><br><span class=\"line\">#</span><br><span class=\"line\"># This is a YAML file: see [1] for a quick introduction. Note in particular</span><br><span class=\"line\"># that *indentation is important*: all the elements of a list or dictionary</span><br><span class=\"line\"># should have the same indentation.</span><br><span class=\"line\">#</span><br><span class=\"line\"># [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html</span><br><span class=\"line\">#</span><br><span class=\"line\"># For more information on how to configure Synapse, including a complete accounting of</span><br><span class=\"line\"># each option, go to docs/usage/configuration/config_documentation.md or</span><br><span class=\"line\"># https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html</span><br><span class=\"line\">server_name: &quot;matrix.example.com&quot; # 服务器域名</span><br><span class=\"line\">pid_file: /data/homeserver.pid # 协议类型（http/manhole/metrics）</span><br><span class=\"line\">listeners: # 服务监听配置</span><br><span class=\"line\">  - port: 8008 # 监听端口</span><br><span class=\"line\">    tls: false # 是否启用https</span><br><span class=\"line\">    type: http # 协议类型</span><br><span class=\"line\">    x_forwarded: true # 启用 X-Forwarded-For 头</span><br><span class=\"line\">    resources: # 资源类型 </span><br><span class=\"line\">      - names: [client, federation] # 资源列表</span><br><span class=\"line\">        compress: false # 启用 gzip 压缩</span><br><span class=\"line\">database: # 数据库配置</span><br><span class=\"line\">  name: sqlite3 # 默认使用sqllite数据库</span><br><span class=\"line\">  args:</span><br><span class=\"line\">    database: /data/homeserver.db # 数据库存储路径</span><br><span class=\"line\">log_config: &quot;/data/matrix.example.com.log.config&quot; # 日志配置文件路径</span><br><span class=\"line\">media_store_path: /data/media_store</span><br><span class=\"line\">registration_shared_secret: &quot;VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&amp;6KUbh=9.Cr*YbQB&quot;</span><br><span class=\"line\">report_stats: true</span><br><span class=\"line\">macaroon_secret_key: &quot;~_wKxePWW&amp;I@,xlWG6j:&amp;lv8#1.io#:Ru:kjqL8T;J6.esRvkS&quot;</span><br><span class=\"line\">form_secret: &quot;34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK&quot;</span><br><span class=\"line\">signing_key_path: &quot;/data/matrix.example.com.signing.key&quot;</span><br><span class=\"line\">trusted_key_servers:</span><br><span class=\"line\">  - server_name: &quot;matrix.org&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># vim:ft=yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改服务端配置文件\">修改服务端配置文件</h3>\n<ul>\n<li>\n<ol>\n<li>注释原<code>database</code>块、配置<code>Postgres</code>数据库，修改后如下：</li>\n</ol>\n</li>\n</ul>\n<p>你可选择配置连接池最小/最大连接数</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">database:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">psycopg2</span>                              <span class=\"comment\"># 使用 PostgreSQL 驱动</span></span><br><span class=\"line\">  <span class=\"attr\">args:</span></span><br><span class=\"line\">    <span class=\"attr\">user:</span> <span class=\"string\">matrix</span>                              <span class=\"comment\"># 数据库用户</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">NZ5yZLd5Ntxt3jXYUCCm</span>            <span class=\"comment\"># 数据库密码</span></span><br><span class=\"line\">    <span class=\"attr\">dbname:</span> <span class=\"string\">matrix</span>                            <span class=\"comment\"># 数据库名</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">matrix-pg</span>                           <span class=\"comment\"># 数据库容器名</span></span><br><span class=\"line\"><span class=\"comment\">#     cp_min: 5                                 # 连接池最小连接数</span></span><br><span class=\"line\"><span class=\"comment\">#     cp_max: 10                                # 连接池最大连接数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># database:</span></span><br><span class=\"line\"><span class=\"comment\">#   name: sqlite3</span></span><br><span class=\"line\"><span class=\"comment\">#   args:</span></span><br><span class=\"line\"><span class=\"comment\">#     database: /data/homeserver.db</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"2\">\n<li>新增自动生成<code>.well-known</code>文件配置，新增客户端访问地址配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成 .well-known 文件</span><br><span class=\"line\">serve_server_wellknown: true </span><br><span class=\"line\"># 客户端访问地址</span><br><span class=\"line\">public_baseurl: https://matrix.example.com</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"3\">\n<li><strong>Debug测试</strong>：添加开放注册、注册无需验证配置（生产环境请关闭、注释或删除后重启容器即可）</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 为新用户启用注册</span><br><span class=\"line\">enable_registration: true</span><br><span class=\"line\"># 无需电子邮件或 recaptcha 验证即可注册（其实不推荐）</span><br><span class=\"line\">enable_registration_without_verification: true</span><br></pre></td></tr></table></figure>\n<p><u><strong>若要添加下方可选配置，请完成上方配置后测试是否可以正常使用再进行配置</strong></u></p>\n<ul>\n<li>\n<ol start=\"4\">\n<li>（<strong>可选</strong>）配置邮件通知</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">email:</span><br><span class=\"line\">  smtp_host: smtp.example.com                 # SMTP 服务器</span><br><span class=\"line\">  smtp_port: 465                              # SMTP 端口</span><br><span class=\"line\">  smtp_user: matrix@example.com               # SMTP 用户</span><br><span class=\"line\">  smtp_pass: Mailpassword                     # SMTP 密码</span><br><span class=\"line\">  force_tls: true                             # 强制 TLS</span><br><span class=\"line\">  require_transport_security: true            # 要求传输安全</span><br><span class=\"line\">  enable_tls: true                            # 启用 TLS</span><br><span class=\"line\">  notif_from: &quot;Matrix &lt;service@example.com&gt;&quot;  # 通知来源</span><br><span class=\"line\">  enable_notifs: true                         # 启用通知</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"5\">\n<li>（可选）优化性能</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 事件缓存大小</span><br><span class=\"line\">event_cache_size: 10K</span><br><span class=\"line\"># 缓存配置</span><br><span class=\"line\">caches:</span><br><span class=\"line\">  global_factor: 0.5                          # 全局缓存系数</span><br><span class=\"line\">  per_cache_factors:                          # 单个缓存系数</span><br><span class=\"line\">    get_users_who_share_room_with_user: 2.0</span><br><span class=\"line\">  expire_caches: true                         # 启用缓存过期</span><br><span class=\"line\">  cache_entry_ttl: 30m                        # 缓存条目存活时间</span><br><span class=\"line\"># 垃圾回收</span><br><span class=\"line\">gc_thresholds: [700, 10, 10]                  # GC 阈值</span><br><span class=\"line\">gc_min_interval: [1s, 10s, 30s]               # GC 最小间隔</span><br><span class=\"line\"># 性能优化</span><br><span class=\"line\">max_event_delay_duration: 24h                 # 最大事件延迟</span><br><span class=\"line\">filter_timeline_limit: 100                    # 时间线事件限制</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"6\">\n<li>（可选）安全配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip_range_blacklist:                           # 禁止访问的 IP 段</span><br><span class=\"line\">  - &quot;127.0.0.0/8&quot;</span><br><span class=\"line\">  - &quot;10.0.0.0/8&quot;</span><br><span class=\"line\">ip_range_whitelist:                           # 允许访问的 IP 段（覆盖黑名单）</span><br><span class=\"line\">  - &quot;192.168.1.0/24&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"7\">\n<li>（可选）联邦配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 联邦白名单</span><br><span class=\"line\">federation_domain_whitelist:</span><br><span class=\"line\">  - example.com</span><br><span class=\"line\">  - another.com</span><br><span class=\"line\"># 联邦证书验证</span><br><span class=\"line\">federation_verify_certificates: true          # 验证联邦证书</span><br><span class=\"line\">federation_client_minimum_tls_version: &quot;1.2&quot;  # 最低 TLS 版本</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"8\">\n<li>保留策略</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">retention:</span><br><span class=\"line\">  enabled: true                               # 启用保留策略</span><br><span class=\"line\">  default_policy:                             # 默认策略</span><br><span class=\"line\">    min_lifetime: 30d\t\t\t\t\t\t  # 超过1天的记录自动删除</span><br><span class=\"line\">    max_lifetime: 1y\t\t\t\t\t\t  # 允许的最大保留时间（可选）</span><br><span class=\"line\">  allowed_lifetime_min: 1d                    # 最小允许保留时间</span><br><span class=\"line\">  allowed_lifetime_max: 1y                    # 最大允许保留时间</span><br><span class=\"line\">  purge_jobs:                                 # 定期清理任务</span><br><span class=\"line\">    - shortest_max_lifetime: 30d\t\t\t  # 处理超过30天的数据</span><br><span class=\"line\">      interval: 1d\t\t\t\t\t\t\t  # 每天执行一次</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<ol start=\"9\">\n<li>其他配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 用户类型</span><br><span class=\"line\">user_types:</span><br><span class=\"line\">  default_user_type: null</span><br><span class=\"line\">  extra_user_types: []</span><br><span class=\"line\"># 限制配置</span><br><span class=\"line\">limit_usage_by_mau: false                     # 限制月活用户</span><br><span class=\"line\">max_mau_value: 0                              # 最大月活用户数</span><br><span class=\"line\"># 模板配置</span><br><span class=\"line\">templates:</span><br><span class=\"line\">  custom_template_directory: /path/to/templates # 自定义模板目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"我自用的最终homeserver-yaml文件如下（关键部分脱敏）\">我自用的最终<code>homeserver.yaml</code>文件如下（关键部分脱敏）</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Configuration file for Synapse.</span><br><span class=\"line\">#</span><br><span class=\"line\"># This is a YAML file: see [1] for a quick introduction. Note in particular</span><br><span class=\"line\"># that *indentation is important*: all the elements of a list or dictionary</span><br><span class=\"line\"># should have the same indentation.</span><br><span class=\"line\">#</span><br><span class=\"line\"># [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html</span><br><span class=\"line\">#</span><br><span class=\"line\"># For more information on how to configure Synapse, including a complete accounting of</span><br><span class=\"line\"># each option, go to docs/usage/configuration/config_documentation.md or</span><br><span class=\"line\"># https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html</span><br><span class=\"line\"># 服务器域名</span><br><span class=\"line\">server_name: &quot;matrix.example.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 自动生成 .well-known 文件</span><br><span class=\"line\">serve_server_wellknown: true </span><br><span class=\"line\"></span><br><span class=\"line\"># 客户端访问地址</span><br><span class=\"line\">public_baseurl: https://matrix.example.com</span><br><span class=\"line\"></span><br><span class=\"line\"># PID 文件路径</span><br><span class=\"line\">pid_file: /data/homeserver.pid</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务监听配置</span><br><span class=\"line\">listeners:</span><br><span class=\"line\">    # 监听端口</span><br><span class=\"line\">  - port: 8008</span><br><span class=\"line\">    # 是否启用https</span><br><span class=\"line\">    tls: false</span><br><span class=\"line\">    # 协议类型</span><br><span class=\"line\">    type: http</span><br><span class=\"line\">    # 启用 X-Forwarded-For 头</span><br><span class=\"line\">    x_forwarded: true</span><br><span class=\"line\">    # 资源类型</span><br><span class=\"line\">    resources:</span><br><span class=\"line\">        # 资源列表</span><br><span class=\"line\">      - names: [client, federation]</span><br><span class=\"line\">        # 启用 gzip 压缩</span><br><span class=\"line\">        compress: true</span><br><span class=\"line\">database:</span><br><span class=\"line\">  name: psycopg2                              # 使用 PostgreSQL 驱动</span><br><span class=\"line\">  args:</span><br><span class=\"line\">    user: matrix                              # 数据库用户</span><br><span class=\"line\">    password: zR7Kd5AKb3BE7Y5k                # 数据库密码</span><br><span class=\"line\">    dbname: matrix                            # 数据库名</span><br><span class=\"line\">    host: matrix-pg                           # 数据库容器名</span><br><span class=\"line\">#     cp_min: 5                                 # 连接池最小连接数</span><br><span class=\"line\">#     cp_max: 10                                # 连接池最大连接数</span><br><span class=\"line\">log_config: &quot;/data/matrix.example.com.log.config&quot; # 日志配置文件路径</span><br><span class=\"line\">media_store_path: /data/media_store</span><br><span class=\"line\">registration_shared_secret: &quot;VH:0I@rI9BCNI~TCO,.YE~+5k#fJG3m0H5&amp;6KUbh=9.Cr*YbQB&quot;</span><br><span class=\"line\">report_stats: true</span><br><span class=\"line\">macaroon_secret_key: &quot;~_wKxePWW&amp;I@,xlWG6j:&amp;lv8#1.io#:Ru:kjqL8T;J6.esRvkS&quot;</span><br><span class=\"line\">form_secret: &quot;34;:CLfGEX-1qV9=XsJKe:V-OFKn+@JhxyIVGcaTkCoXIKN~cK&quot;</span><br><span class=\"line\">signing_key_path: &quot;/data/matrix.example.com.signing.key&quot;</span><br><span class=\"line\">trusted_key_servers:</span><br><span class=\"line\">  - server_name: &quot;matrix.org&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">enable_registration: true</span><br><span class=\"line\">enable_registration_without_verification: true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 事件缓存大小</span><br><span class=\"line\">event_cache_size: 10K</span><br><span class=\"line\"># 缓存配置</span><br><span class=\"line\">caches:</span><br><span class=\"line\">  global_factor: 0.5                          # 全局缓存系数</span><br><span class=\"line\">  per_cache_factors:                          # 单个缓存系数</span><br><span class=\"line\">    get_users_who_share_room_with_user: 2.0</span><br><span class=\"line\">  expire_caches: true                         # 启用缓存过期</span><br><span class=\"line\">  cache_entry_ttl: 60m                        # 缓存条目存活时间</span><br><span class=\"line\"># 垃圾回收</span><br><span class=\"line\">gc_thresholds: [700, 10, 10]                  # GC 阈值</span><br><span class=\"line\">gc_min_interval: [1s, 10s, 30s]               # GC 最小间隔</span><br><span class=\"line\"># 性能优化</span><br><span class=\"line\">max_event_delay_duration: 24h                 # 最大事件延迟</span><br><span class=\"line\">filter_timeline_limit: 100                    # 时间线事件限制</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">email:</span><br><span class=\"line\">  smtp_host: smtp.example.com                 # SMTP 服务器</span><br><span class=\"line\">  smtp_port: 465                              # SMTP 端口</span><br><span class=\"line\">  smtp_user: matrix@example.com               # SMTP 用户</span><br><span class=\"line\">  smtp_pass: Mailpassword                     # SMTP 密码</span><br><span class=\"line\">  force_tls: true                             # 强制 TLS</span><br><span class=\"line\">  require_transport_security: true            # 要求传输安全</span><br><span class=\"line\">  enable_tls: true                            # 启用 TLS</span><br><span class=\"line\">  notif_from: &quot;Matrix &lt;service@example.com&gt;&quot;  # 通知来源</span><br><span class=\"line\">  enable_notifs: true                         # 启用通知</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"># 服务器提示配置</span><br><span class=\"line\"># server_notices:</span><br><span class=\"line\">#   enabled: true  # 启用服务器提示功能</span><br><span class=\"line\">  # 可选：配置发送提示的机器人账号（需提前注册）</span><br><span class=\"line\">#   sender_localpart: &quot;bot&quot;</span><br><span class=\"line\">  # 可选：提示的默认房间配置</span><br><span class=\"line\">#   room_name: &quot;Server Notices&quot;</span><br><span class=\"line\">#   room_alias: &quot;@bot:matrix.hslzz.cn&quot;</span><br><span class=\"line\">  # 可选：提示消息的模板</span><br><span class=\"line\">#   message_type: &quot;m.text&quot;</span><br><span class=\"line\"># vim:ft=yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建Docker容器\">构建Docker容器</h3>\n<p>现在万事大吉，可以开始构建你的Docker容器了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &amp;&amp; cd /data/synapse &amp;&amp; docker compose up -d</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置反向代理进行访问测试\">配置反向代理进行访问测试</h2>\n<ul>\n<li>上游服务器：<code>http://127.0.0.1:你设置的端口号</code> 或<code>http://Synapse容器ip:8080</code></li>\n<li>域名：你的服务端域名，在本篇文章是<code>matrix.example.com</code></li>\n</ul>\n<p>配置好反向代理进行访问，若为此页面则为安装成功</p>\n<p><img src=\"/img/post/11/1.png\" alt=\"正常访问示例\"></p>\n<h2 id=\"添加第一个管理员用户\">添加第一个管理员用户</h2>\n<p>请将命令最后的用户名和密码替换成你想添加的用户名和密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it matrix-synapse register_new_matrix_user http://localhost:8008 -c /data/homeserver.yaml -a -u 用户名 -p 密码</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建其他类型的账户\">创建其他类型的账户</h3>\n<h4 id=\"1-进入-Synapse-容器\">1. 进入 Synapse 容器</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it matrix-synapse bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-创建普通用户（交互式）\">2. 创建普通用户（交互式）</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">进入虚拟环境（如果使用虚拟环境）</span><br><span class=\"line\"><span class=\"built_in\">source</span> /env/bin/activate  <span class=\"comment\"># 根据实际路径调整</span></span><br><span class=\"line\"><span class=\"comment\"># 运行注册命令</span></span><br><span class=\"line\">register_new_matrix_user -c /config/homeserver.yaml</span><br></pre></td></tr></table></figure>\n<p>按提示输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">New user localpart: alice    <span class=\"comment\"># 用户名（不含域名）</span></span><br><span class=\"line\">Password:                   <span class=\"comment\"># 输入密码</span></span><br><span class=\"line\">Confirm password:           <span class=\"comment\"># 再次输入密码</span></span><br><span class=\"line\">Make admin [no]:            <span class=\"comment\"># 输入 yes 或 no（是否管理员）</span></span><br><span class=\"line\">Success!</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建普通用户（非交互式）\">创建普通用户（非交互式）</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> matrix-synapse register_new_matrix_user \\</span><br><span class=\"line\">  -c /config/homeserver.yaml \\</span><br><span class=\"line\">  --user alice \\</span><br><span class=\"line\">  --password Password \\</span><br><span class=\"line\">  --no-admin</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改Android端\">修改Android端</h2>\n<p>在Google Play中下载<code>Element</code>：</p>\n<p><code>https://play.google.com/store/apps/details?id=im.vector.app</code></p>\n<p>或下载我在Google Play安装后提取的安装包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/Element_1.6.42.apk</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/sweetsky123/matrix-docker/releases/download/Release/Element_1.6.42.apk</span><br></pre></td></tr></table></figure>\n<p>默认的Element软件启动后点击登录或注册，会先连接<code>matrix.org</code>，且在连接过程中无法点击任何东西。</p>\n<p><img src=\"/img/post/11/2.png\" alt=\"\"></p>\n<p>由于众所周知的原因，中国大陆网络无法连接<code>matrix.org</code>，导致无法使用<code>Element</code>作为<code>Android Matrix</code>客户端。</p>\n<p><u><strong>因此，我们需要对它的APK进行反编译以修改连接地址</strong></u></p>\n<p>推荐我自用的MT管理器版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:/cnb.cool/hslzz/matrix-docker/-/releases/download/lastest/MTManager_2.18.2.apk</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/sweetsky123/matrix-docker/releases/download/Release/MTManager_2.18.2.apk</span><br></pre></td></tr></table></figure>\n<ol>\n<li>\n<p><strong>点击APK安装包后，进入<code>查看</code></strong></p>\n</li>\n<li>\n<p>点击任意<code>.dex</code>文件后，点击第一个选项<code>Dex编辑器++</code></p>\n</li>\n<li>\n<p>全选所有<code>dex</code>文件，点击确定</p>\n</li>\n<li>\n<p>搜索<code>matrix.org</code></p>\n</li>\n<li>\n<p>将<code>matrix.org</code>替换为你的域名：</p>\n</li>\n</ol>\n<ul>\n<li><code>matrix.org</code>替换为你的服务端域名，如<code>matrix.example.com</code></li>\n<li><code>matrix-client.matrix.org</code>替换为你的客户端域名，如<code>matrix-client.example.com</code></li>\n</ul>\n<p>然后点击右上角的锤子进行编译，编译后退出，按提示保存即可。</p>\n"},{"title":"彻底解决Ubuntu的经典DNS之127.0.0.53问题，让你的服务永不停机！","date":"2025-09-12T10:30:50.000Z","updated":"2025-09-12T10:30:50.000Z","series":12,"description":"Ubuntu 在默认配置下总是将 DNS 设置为127.0.0.53导致服务器无法上网，为了保证服务的稳定性，解决这个问题应该是必要的。本文将对该问题进行研究并提出一个彻底解决 DNS 变为127.0.0.53的问题的办法，让你的服务稳定运行！","_content":"\n## 摘要\n\n在 Ubuntu 系统中，默认的 DNS 设置会导致服务器会将 DNS 不间断的设置为`127.0.0.53`。\n\n在一些情况下，如果您不对其做出迅速反应，将会导致所有 DNS 解析请求均失败，导致服务器无法访问外网，对于需要高稳定性且较为依赖 DNS 的服务，无异于灭顶之灾。\n\n本文将对该问题进行研究，并提出一种解决该问题的方法\n\n> **关键词：** Linux ; Ubuntu ; DNS\n\n## Ubuntu 默认 DNS 策略概述\n\n在 Ubuntu 中，DNS 由`systemd-resolved`服务管辖，其默认配置会在 `127.0.0.53:53` 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。这意味着当系统尝试解析域名时，它会首先向这个地址发送请求。 `systemd-resolved`服务会尝试解析这些请求，如果它自己的缓存中没有相应的记录，它会进一步向配置的上游 DNS 服务器查询。\n\n由于Ubuntu 的 DNS 设计存在显著问题，这一默认策略可能导致 DNS 解析失败导致无法访问外网的后果。因此为了保证服务的稳定性，禁用其是必要的\n\n## 禁用 DNS 存根监听器\n\n在前文已提到，DNS 由`systemd-resolved`服务管辖，该服务的配置文件在`/etc/systemd/resolved.conf`。因此需要尝试修改该配置文件以禁用 DNS 存根监听器。\n\n### 修改配置文件\n\n首先，使用你喜欢的编辑器打开`/etc/systemd/resolved.conf`\n\n默认配置一般如下：\n```\n[Resolve]\n# Some examples of DNS servers which may be used for DNS= and FallbackDNS=\n:\n# Cloudflare: 1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com 2606:4\n700:4700::1111#cloudflare-dns.com 2606:4700:4700::1001#cloudflare-dns.com\n# Google:     8.8.8.8#dns.google 8.8.4.4#dns.google 2001:4860:4860::8888#d\nns.google 2001:4860:4860::8844#dns.google\n# Quad9:      9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe:\n:fe#dns.quad9.net 2620:fe::9#dns.quad9.net\n#DNS=\n#FallbackDNS=\n#Domains=\n#DNSSEC=no\n#DNSOverTLS=no\n#MulticastDNS=no\n#LLMNR=no\n#Cache=no-negative\n#CacheFromLocalhost=no\n#DNSStubListener=yes\n#DNSStubListenerExtra=\n#ReadEtcHosts=yes\n#ResolveUnicastSingleLabel=no\n```\n\n在该配置文件中，被注释掉的配置中的内容通常是在该配置项没有被配置时，服务将默认使用的配置项\n\n每个配置项的含义说明如下：\n\n- `DNS`：主要 DNS ，系统将使用这些 DNS 服务器查询。你可以指定多个服务器，用空格分隔（例如 `DNS=8.8.8.8 1.1.1.1`）\n- `FallbackDNS`：备用 DNS，当主要DNS均无法查询时，系统将使用这里列出的备用服务器，同样你可以指定多个备用服务器\n- `Domains`： 用于指定这些 DNS 服务器应使用的搜索域。\n- `DNSSEC=no`： 是否启用 DNSSEC 验证。`no` 表示不启用。\n- `DNSOverTLS=no`： 是否通过 TLS 加密向 DNS 服务器发送查询。`no` 表示不加密。\n- `MulticastDNS=no`： 是否启用多播 DNS (mDNS) 解析（如 `.local` 域名）。`no` 表示不启用。\n- `LLMNR=no`： 是否启用链路本地多播名称解析 (LLMNR)。`no` 表示不启用。\n- `Cache=no-negative`： 配置 DNS 缓存行为。`no-negative` 表示不缓存负面（查询失败）响应。\n- `CacheFromLocalhost=no`： 是否缓存来自本地回环接口（localhost）的响应。`no` 表示不缓存。\n- `DNSStubListener=yes`： 是否在 `127.0.0.53:53` 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。`yes` 表示启用。\n- `DNSStubListenerExtra=`： 在额外地址上启用 DNS 存根监听器。\n- `ReadEtcHosts=yes`： 是否在解析域名时读取 `/etc/hosts` 文件。`yes` 表示读取。\n- `ResolveUnicastSingleLabel=no`： 是否尝试通过 DNS 解析单标签名称（没有点的名称）。`no` 表示不尝试。\n\n在其中，我们可以发现`DNSStubListener=yes`这一配置项是我们需要配置的，系统默认的配置项为yes表示启用，我们需要禁用它。\n\n因此，我们需要解除其注释并修改成no，其配置项如下：\n\n```\nDNSStubListener=no\n```\n\n以下为我设置的完整配置文件，我使用谷歌`8.8.8.8`DNS并启用了`DNSSEC`和`TLS`查询，可保证DNS查询结果在网络传输中不被篡改，你可以直接应用或自行更改配置项。\n\n```\n[Resolve]\nDNS=8.8.8.8 8.8.4.4\nFallbackDNS=1.1.1.1\n#Domains=\nDNSSEC=allow-downgrade\nDNSOverTLS=yes\n#MulticastDNS=no\n#LLMNR=no\n#Cache=no-negative\n#CacheFromLocalhost=no\nDNSStubListener=no\n#DNSStubListenerExtra=\n#ReadEtcHosts=yes\n#ResolveUnicastSingleLabel=no\n```\n","source":"_posts/12.彻底解决Ubuntu的DNS问题.md","raw":"---\ntitle: 彻底解决Ubuntu的经典DNS之127.0.0.53问题，让你的服务永不停机！\ndate: 2025-09-12 18:30:50\nupdated: 2025-09-12 18:30:50\ntags:\n  - Linux\n  - Ubuntu\n  - 教程\ncategories:\n  - Linux\nseries: 12\ndescription: Ubuntu 在默认配置下总是将 DNS 设置为127.0.0.53导致服务器无法上网，为了保证服务的稳定性，解决这个问题应该是必要的。本文将对该问题进行研究并提出一个彻底解决 DNS 变为127.0.0.53的问题的办法，让你的服务稳定运行！\n---\n\n## 摘要\n\n在 Ubuntu 系统中，默认的 DNS 设置会导致服务器会将 DNS 不间断的设置为`127.0.0.53`。\n\n在一些情况下，如果您不对其做出迅速反应，将会导致所有 DNS 解析请求均失败，导致服务器无法访问外网，对于需要高稳定性且较为依赖 DNS 的服务，无异于灭顶之灾。\n\n本文将对该问题进行研究，并提出一种解决该问题的方法\n\n> **关键词：** Linux ; Ubuntu ; DNS\n\n## Ubuntu 默认 DNS 策略概述\n\n在 Ubuntu 中，DNS 由`systemd-resolved`服务管辖，其默认配置会在 `127.0.0.53:53` 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。这意味着当系统尝试解析域名时，它会首先向这个地址发送请求。 `systemd-resolved`服务会尝试解析这些请求，如果它自己的缓存中没有相应的记录，它会进一步向配置的上游 DNS 服务器查询。\n\n由于Ubuntu 的 DNS 设计存在显著问题，这一默认策略可能导致 DNS 解析失败导致无法访问外网的后果。因此为了保证服务的稳定性，禁用其是必要的\n\n## 禁用 DNS 存根监听器\n\n在前文已提到，DNS 由`systemd-resolved`服务管辖，该服务的配置文件在`/etc/systemd/resolved.conf`。因此需要尝试修改该配置文件以禁用 DNS 存根监听器。\n\n### 修改配置文件\n\n首先，使用你喜欢的编辑器打开`/etc/systemd/resolved.conf`\n\n默认配置一般如下：\n```\n[Resolve]\n# Some examples of DNS servers which may be used for DNS= and FallbackDNS=\n:\n# Cloudflare: 1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com 2606:4\n700:4700::1111#cloudflare-dns.com 2606:4700:4700::1001#cloudflare-dns.com\n# Google:     8.8.8.8#dns.google 8.8.4.4#dns.google 2001:4860:4860::8888#d\nns.google 2001:4860:4860::8844#dns.google\n# Quad9:      9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe:\n:fe#dns.quad9.net 2620:fe::9#dns.quad9.net\n#DNS=\n#FallbackDNS=\n#Domains=\n#DNSSEC=no\n#DNSOverTLS=no\n#MulticastDNS=no\n#LLMNR=no\n#Cache=no-negative\n#CacheFromLocalhost=no\n#DNSStubListener=yes\n#DNSStubListenerExtra=\n#ReadEtcHosts=yes\n#ResolveUnicastSingleLabel=no\n```\n\n在该配置文件中，被注释掉的配置中的内容通常是在该配置项没有被配置时，服务将默认使用的配置项\n\n每个配置项的含义说明如下：\n\n- `DNS`：主要 DNS ，系统将使用这些 DNS 服务器查询。你可以指定多个服务器，用空格分隔（例如 `DNS=8.8.8.8 1.1.1.1`）\n- `FallbackDNS`：备用 DNS，当主要DNS均无法查询时，系统将使用这里列出的备用服务器，同样你可以指定多个备用服务器\n- `Domains`： 用于指定这些 DNS 服务器应使用的搜索域。\n- `DNSSEC=no`： 是否启用 DNSSEC 验证。`no` 表示不启用。\n- `DNSOverTLS=no`： 是否通过 TLS 加密向 DNS 服务器发送查询。`no` 表示不加密。\n- `MulticastDNS=no`： 是否启用多播 DNS (mDNS) 解析（如 `.local` 域名）。`no` 表示不启用。\n- `LLMNR=no`： 是否启用链路本地多播名称解析 (LLMNR)。`no` 表示不启用。\n- `Cache=no-negative`： 配置 DNS 缓存行为。`no-negative` 表示不缓存负面（查询失败）响应。\n- `CacheFromLocalhost=no`： 是否缓存来自本地回环接口（localhost）的响应。`no` 表示不缓存。\n- `DNSStubListener=yes`： 是否在 `127.0.0.53:53` 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。`yes` 表示启用。\n- `DNSStubListenerExtra=`： 在额外地址上启用 DNS 存根监听器。\n- `ReadEtcHosts=yes`： 是否在解析域名时读取 `/etc/hosts` 文件。`yes` 表示读取。\n- `ResolveUnicastSingleLabel=no`： 是否尝试通过 DNS 解析单标签名称（没有点的名称）。`no` 表示不尝试。\n\n在其中，我们可以发现`DNSStubListener=yes`这一配置项是我们需要配置的，系统默认的配置项为yes表示启用，我们需要禁用它。\n\n因此，我们需要解除其注释并修改成no，其配置项如下：\n\n```\nDNSStubListener=no\n```\n\n以下为我设置的完整配置文件，我使用谷歌`8.8.8.8`DNS并启用了`DNSSEC`和`TLS`查询，可保证DNS查询结果在网络传输中不被篡改，你可以直接应用或自行更改配置项。\n\n```\n[Resolve]\nDNS=8.8.8.8 8.8.4.4\nFallbackDNS=1.1.1.1\n#Domains=\nDNSSEC=allow-downgrade\nDNSOverTLS=yes\n#MulticastDNS=no\n#LLMNR=no\n#Cache=no-negative\n#CacheFromLocalhost=no\nDNSStubListener=no\n#DNSStubListenerExtra=\n#ReadEtcHosts=yes\n#ResolveUnicastSingleLabel=no\n```\n","slug":"12.彻底解决Ubuntu的DNS问题","published":1,"comments":1,"layout":"post","photos":[],"_id":"cmfhayg9s00093es34pvegrt7","content":"<h2 id=\"摘要\">摘要</h2>\n<p>在 Ubuntu 系统中，默认的 DNS 设置会导致服务器会将 DNS 不间断的设置为<code>127.0.0.53</code>。</p>\n<p>在一些情况下，如果您不对其做出迅速反应，将会导致所有 DNS 解析请求均失败，导致服务器无法访问外网，对于需要高稳定性且较为依赖 DNS 的服务，无异于灭顶之灾。</p>\n<p>本文将对该问题进行研究，并提出一种解决该问题的方法</p>\n<blockquote>\n<p><strong>关键词：</strong> Linux ; Ubuntu ; DNS</p>\n</blockquote>\n<h2 id=\"Ubuntu-默认-DNS-策略概述\">Ubuntu 默认 DNS 策略概述</h2>\n<p>在 Ubuntu 中，DNS 由<code>systemd-resolved</code>服务管辖，其默认配置会在 <code>127.0.0.53:53</code> 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。这意味着当系统尝试解析域名时，它会首先向这个地址发送请求。 <code>systemd-resolved</code>服务会尝试解析这些请求，如果它自己的缓存中没有相应的记录，它会进一步向配置的上游 DNS 服务器查询。</p>\n<p>由于Ubuntu 的 DNS 设计存在显著问题，这一默认策略可能导致 DNS 解析失败导致无法访问外网的后果。因此为了保证服务的稳定性，禁用其是必要的</p>\n<h2 id=\"禁用-DNS-存根监听器\">禁用 DNS 存根监听器</h2>\n<p>在前文已提到，DNS 由<code>systemd-resolved</code>服务管辖，该服务的配置文件在<code>/etc/systemd/resolved.conf</code>。因此需要尝试修改该配置文件以禁用 DNS 存根监听器。</p>\n<h3 id=\"修改配置文件\">修改配置文件</h3>\n<p>首先，使用你喜欢的编辑器打开<code>/etc/systemd/resolved.conf</code></p>\n<p>默认配置一般如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Resolve]</span><br><span class=\"line\"># Some examples of DNS servers which may be used for DNS= and FallbackDNS=</span><br><span class=\"line\">:</span><br><span class=\"line\"># Cloudflare: 1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com 2606:4</span><br><span class=\"line\">700:4700::1111#cloudflare-dns.com 2606:4700:4700::1001#cloudflare-dns.com</span><br><span class=\"line\"># Google:     8.8.8.8#dns.google 8.8.4.4#dns.google 2001:4860:4860::8888#d</span><br><span class=\"line\">ns.google 2001:4860:4860::8844#dns.google</span><br><span class=\"line\"># Quad9:      9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe:</span><br><span class=\"line\">:fe#dns.quad9.net 2620:fe::9#dns.quad9.net</span><br><span class=\"line\">#DNS=</span><br><span class=\"line\">#FallbackDNS=</span><br><span class=\"line\">#Domains=</span><br><span class=\"line\">#DNSSEC=no</span><br><span class=\"line\">#DNSOverTLS=no</span><br><span class=\"line\">#MulticastDNS=no</span><br><span class=\"line\">#LLMNR=no</span><br><span class=\"line\">#Cache=no-negative</span><br><span class=\"line\">#CacheFromLocalhost=no</span><br><span class=\"line\">#DNSStubListener=yes</span><br><span class=\"line\">#DNSStubListenerExtra=</span><br><span class=\"line\">#ReadEtcHosts=yes</span><br><span class=\"line\">#ResolveUnicastSingleLabel=no</span><br></pre></td></tr></table></figure>\n<p>在该配置文件中，被注释掉的配置中的内容通常是在该配置项没有被配置时，服务将默认使用的配置项</p>\n<p>每个配置项的含义说明如下：</p>\n<ul>\n<li><code>DNS</code>：主要 DNS ，系统将使用这些 DNS 服务器查询。你可以指定多个服务器，用空格分隔（例如 <code>DNS=8.8.8.8 1.1.1.1</code>）</li>\n<li><code>FallbackDNS</code>：备用 DNS，当主要DNS均无法查询时，系统将使用这里列出的备用服务器，同样你可以指定多个备用服务器</li>\n<li><code>Domains</code>： 用于指定这些 DNS 服务器应使用的搜索域。</li>\n<li><code>DNSSEC=no</code>： 是否启用 DNSSEC 验证。<code>no</code> 表示不启用。</li>\n<li><code>DNSOverTLS=no</code>： 是否通过 TLS 加密向 DNS 服务器发送查询。<code>no</code> 表示不加密。</li>\n<li><code>MulticastDNS=no</code>： 是否启用多播 DNS (mDNS) 解析（如 <code>.local</code> 域名）。<code>no</code> 表示不启用。</li>\n<li><code>LLMNR=no</code>： 是否启用链路本地多播名称解析 (LLMNR)。<code>no</code> 表示不启用。</li>\n<li><code>Cache=no-negative</code>： 配置 DNS 缓存行为。<code>no-negative</code> 表示不缓存负面（查询失败）响应。</li>\n<li><code>CacheFromLocalhost=no</code>： 是否缓存来自本地回环接口（localhost）的响应。<code>no</code> 表示不缓存。</li>\n<li><code>DNSStubListener=yes</code>： 是否在 <code>127.0.0.53:53</code> 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。<code>yes</code> 表示启用。</li>\n<li><code>DNSStubListenerExtra=</code>： 在额外地址上启用 DNS 存根监听器。</li>\n<li><code>ReadEtcHosts=yes</code>： 是否在解析域名时读取 <code>/etc/hosts</code> 文件。<code>yes</code> 表示读取。</li>\n<li><code>ResolveUnicastSingleLabel=no</code>： 是否尝试通过 DNS 解析单标签名称（没有点的名称）。<code>no</code> 表示不尝试。</li>\n</ul>\n<p>在其中，我们可以发现<code>DNSStubListener=yes</code>这一配置项是我们需要配置的，系统默认的配置项为yes表示启用，我们需要禁用它。</p>\n<p>因此，我们需要解除其注释并修改成no，其配置项如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DNSStubListener=no</span><br></pre></td></tr></table></figure>\n<p>以下为我设置的完整配置文件，我使用谷歌<code>8.8.8.8</code>DNS并启用了<code>DNSSEC</code>和<code>TLS</code>查询，可保证DNS查询结果在网络传输中不被篡改，你可以直接应用或自行更改配置项。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Resolve]</span><br><span class=\"line\">DNS=8.8.8.8 8.8.4.4</span><br><span class=\"line\">FallbackDNS=1.1.1.1</span><br><span class=\"line\">#Domains=</span><br><span class=\"line\">DNSSEC=allow-downgrade</span><br><span class=\"line\">DNSOverTLS=yes</span><br><span class=\"line\">#MulticastDNS=no</span><br><span class=\"line\">#LLMNR=no</span><br><span class=\"line\">#Cache=no-negative</span><br><span class=\"line\">#CacheFromLocalhost=no</span><br><span class=\"line\">DNSStubListener=no</span><br><span class=\"line\">#DNSStubListenerExtra=</span><br><span class=\"line\">#ReadEtcHosts=yes</span><br><span class=\"line\">#ResolveUnicastSingleLabel=no</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"摘要\">摘要</h2>\n<p>在 Ubuntu 系统中，默认的 DNS 设置会导致服务器会将 DNS 不间断的设置为<code>127.0.0.53</code>。</p>\n<p>在一些情况下，如果您不对其做出迅速反应，将会导致所有 DNS 解析请求均失败，导致服务器无法访问外网，对于需要高稳定性且较为依赖 DNS 的服务，无异于灭顶之灾。</p>\n<p>本文将对该问题进行研究，并提出一种解决该问题的方法</p>\n<blockquote>\n<p><strong>关键词：</strong> Linux ; Ubuntu ; DNS</p>\n</blockquote>\n<h2 id=\"Ubuntu-默认-DNS-策略概述\">Ubuntu 默认 DNS 策略概述</h2>\n<p>在 Ubuntu 中，DNS 由<code>systemd-resolved</code>服务管辖，其默认配置会在 <code>127.0.0.53:53</code> 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。这意味着当系统尝试解析域名时，它会首先向这个地址发送请求。 <code>systemd-resolved</code>服务会尝试解析这些请求，如果它自己的缓存中没有相应的记录，它会进一步向配置的上游 DNS 服务器查询。</p>\n<p>由于Ubuntu 的 DNS 设计存在显著问题，这一默认策略可能导致 DNS 解析失败导致无法访问外网的后果。因此为了保证服务的稳定性，禁用其是必要的</p>\n<h2 id=\"禁用-DNS-存根监听器\">禁用 DNS 存根监听器</h2>\n<p>在前文已提到，DNS 由<code>systemd-resolved</code>服务管辖，该服务的配置文件在<code>/etc/systemd/resolved.conf</code>。因此需要尝试修改该配置文件以禁用 DNS 存根监听器。</p>\n<h3 id=\"修改配置文件\">修改配置文件</h3>\n<p>首先，使用你喜欢的编辑器打开<code>/etc/systemd/resolved.conf</code></p>\n<p>默认配置一般如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Resolve]</span><br><span class=\"line\"># Some examples of DNS servers which may be used for DNS= and FallbackDNS=</span><br><span class=\"line\">:</span><br><span class=\"line\"># Cloudflare: 1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com 2606:4</span><br><span class=\"line\">700:4700::1111#cloudflare-dns.com 2606:4700:4700::1001#cloudflare-dns.com</span><br><span class=\"line\"># Google:     8.8.8.8#dns.google 8.8.4.4#dns.google 2001:4860:4860::8888#d</span><br><span class=\"line\">ns.google 2001:4860:4860::8844#dns.google</span><br><span class=\"line\"># Quad9:      9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe:</span><br><span class=\"line\">:fe#dns.quad9.net 2620:fe::9#dns.quad9.net</span><br><span class=\"line\">#DNS=</span><br><span class=\"line\">#FallbackDNS=</span><br><span class=\"line\">#Domains=</span><br><span class=\"line\">#DNSSEC=no</span><br><span class=\"line\">#DNSOverTLS=no</span><br><span class=\"line\">#MulticastDNS=no</span><br><span class=\"line\">#LLMNR=no</span><br><span class=\"line\">#Cache=no-negative</span><br><span class=\"line\">#CacheFromLocalhost=no</span><br><span class=\"line\">#DNSStubListener=yes</span><br><span class=\"line\">#DNSStubListenerExtra=</span><br><span class=\"line\">#ReadEtcHosts=yes</span><br><span class=\"line\">#ResolveUnicastSingleLabel=no</span><br></pre></td></tr></table></figure>\n<p>在该配置文件中，被注释掉的配置中的内容通常是在该配置项没有被配置时，服务将默认使用的配置项</p>\n<p>每个配置项的含义说明如下：</p>\n<ul>\n<li><code>DNS</code>：主要 DNS ，系统将使用这些 DNS 服务器查询。你可以指定多个服务器，用空格分隔（例如 <code>DNS=8.8.8.8 1.1.1.1</code>）</li>\n<li><code>FallbackDNS</code>：备用 DNS，当主要DNS均无法查询时，系统将使用这里列出的备用服务器，同样你可以指定多个备用服务器</li>\n<li><code>Domains</code>： 用于指定这些 DNS 服务器应使用的搜索域。</li>\n<li><code>DNSSEC=no</code>： 是否启用 DNSSEC 验证。<code>no</code> 表示不启用。</li>\n<li><code>DNSOverTLS=no</code>： 是否通过 TLS 加密向 DNS 服务器发送查询。<code>no</code> 表示不加密。</li>\n<li><code>MulticastDNS=no</code>： 是否启用多播 DNS (mDNS) 解析（如 <code>.local</code> 域名）。<code>no</code> 表示不启用。</li>\n<li><code>LLMNR=no</code>： 是否启用链路本地多播名称解析 (LLMNR)。<code>no</code> 表示不启用。</li>\n<li><code>Cache=no-negative</code>： 配置 DNS 缓存行为。<code>no-negative</code> 表示不缓存负面（查询失败）响应。</li>\n<li><code>CacheFromLocalhost=no</code>： 是否缓存来自本地回环接口（localhost）的响应。<code>no</code> 表示不缓存。</li>\n<li><code>DNSStubListener=yes</code>： 是否在 <code>127.0.0.53:53</code> 上运行一个 DNS 存根监听器，以便本地应用程序可以将解析请求发送给它。<code>yes</code> 表示启用。</li>\n<li><code>DNSStubListenerExtra=</code>： 在额外地址上启用 DNS 存根监听器。</li>\n<li><code>ReadEtcHosts=yes</code>： 是否在解析域名时读取 <code>/etc/hosts</code> 文件。<code>yes</code> 表示读取。</li>\n<li><code>ResolveUnicastSingleLabel=no</code>： 是否尝试通过 DNS 解析单标签名称（没有点的名称）。<code>no</code> 表示不尝试。</li>\n</ul>\n<p>在其中，我们可以发现<code>DNSStubListener=yes</code>这一配置项是我们需要配置的，系统默认的配置项为yes表示启用，我们需要禁用它。</p>\n<p>因此，我们需要解除其注释并修改成no，其配置项如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DNSStubListener=no</span><br></pre></td></tr></table></figure>\n<p>以下为我设置的完整配置文件，我使用谷歌<code>8.8.8.8</code>DNS并启用了<code>DNSSEC</code>和<code>TLS</code>查询，可保证DNS查询结果在网络传输中不被篡改，你可以直接应用或自行更改配置项。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Resolve]</span><br><span class=\"line\">DNS=8.8.8.8 8.8.4.4</span><br><span class=\"line\">FallbackDNS=1.1.1.1</span><br><span class=\"line\">#Domains=</span><br><span class=\"line\">DNSSEC=allow-downgrade</span><br><span class=\"line\">DNSOverTLS=yes</span><br><span class=\"line\">#MulticastDNS=no</span><br><span class=\"line\">#LLMNR=no</span><br><span class=\"line\">#Cache=no-negative</span><br><span class=\"line\">#CacheFromLocalhost=no</span><br><span class=\"line\">DNSStubListener=no</span><br><span class=\"line\">#DNSStubListenerExtra=</span><br><span class=\"line\">#ReadEtcHosts=yes</span><br><span class=\"line\">#ResolveUnicastSingleLabel=no</span><br></pre></td></tr></table></figure>\n"},{"title":"（整活）用29行C++代码写一个Deepseek","date":"2025-02-17T05:50:00.000Z","update":null,"description":"这篇文章纯属整整活儿","series":3,"_content":"\n话不多说，上代码\n\n```c++\n#include <iostream>\n#include <thread>\n#include <chrono>\n#include <string>\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::flush;\nusing std::string;\nusing std::this_thread::sleep_for;\nusing std::chrono::seconds;\nvoid think() {\n    constexpr int kDotsCount = 3;\n    constexpr auto kDotDelay = seconds(1);\n    cout << \"<think>\";\n    for (int i = 0; i < kDotsCount; ++i) {\n        sleep_for(kDotDelay);\n        cout << \".\" << flush;  // 合并输出和刷新操作\n    }\n    cout << endl;\n}\nint main() {\n    cout << \"请输入您的问题：\";\n    string question;\n    getline(cin, question);\n    think();\n    cout << \"服务器繁忙，请稍后再试。\" << endl;\n    return 0;\n}\n```\n\n至于效果嘛，各位自行尝试","source":"_posts/3.写一个deepseek.md","raw":"---\ntitle: （整活）用29行C++代码写一个Deepseek\ndate: 2025-02-17 13:50:00\nupdate: \ntags:\n  - 整活\ncategories:\n  - 整活\ndescription: 这篇文章纯属整整活儿\nseries: 3\n---\n\n话不多说，上代码\n\n```c++\n#include <iostream>\n#include <thread>\n#include <chrono>\n#include <string>\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::flush;\nusing std::string;\nusing std::this_thread::sleep_for;\nusing std::chrono::seconds;\nvoid think() {\n    constexpr int kDotsCount = 3;\n    constexpr auto kDotDelay = seconds(1);\n    cout << \"<think>\";\n    for (int i = 0; i < kDotsCount; ++i) {\n        sleep_for(kDotDelay);\n        cout << \".\" << flush;  // 合并输出和刷新操作\n    }\n    cout << endl;\n}\nint main() {\n    cout << \"请输入您的问题：\";\n    string question;\n    getline(cin, question);\n    think();\n    cout << \"服务器繁忙，请稍后再试。\" << endl;\n    return 0;\n}\n```\n\n至于效果嘛，各位自行尝试","slug":"3.写一个deepseek","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhayg9w000b3es3et50cuqj","content":"<p>话不多说，上代码</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;thread&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;chrono&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> std::cout;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::cin;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::endl;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::flush;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::string;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::this_thread::sleep_for;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::chrono::seconds;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">think</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> kDotsCount = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">constexpr</span> <span class=\"keyword\">auto</span> kDotDelay = <span class=\"built_in\">seconds</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;&lt;think&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; kDotsCount; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">sleep_for</span>(kDotDelay);</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;.&quot;</span> &lt;&lt; flush;  <span class=\"comment\">// 合并输出和刷新操作</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;请输入您的问题：&quot;</span>;</span><br><span class=\"line\">    string question;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, question);</span><br><span class=\"line\">    <span class=\"built_in\">think</span>();</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;服务器繁忙，请稍后再试。&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至于效果嘛，各位自行尝试</p>\n","excerpt":"","more":"<p>话不多说，上代码</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;thread&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;chrono&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> std::cout;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::cin;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::endl;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::flush;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::string;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::this_thread::sleep_for;</span><br><span class=\"line\"><span class=\"keyword\">using</span> std::chrono::seconds;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">think</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> kDotsCount = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">constexpr</span> <span class=\"keyword\">auto</span> kDotDelay = <span class=\"built_in\">seconds</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;&lt;think&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; kDotsCount; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">sleep_for</span>(kDotDelay);</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;.&quot;</span> &lt;&lt; flush;  <span class=\"comment\">// 合并输出和刷新操作</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;请输入您的问题：&quot;</span>;</span><br><span class=\"line\">    string question;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, question);</span><br><span class=\"line\">    <span class=\"built_in\">think</span>();</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;服务器繁忙，请稍后再试。&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至于效果嘛，各位自行尝试</p>\n"},{"title":"在Kali2024.4安装QQ Linux版","date":"2025-01-27T07:00:00.000Z","series":2,"description":"阅读这篇完整指南，了解如何在Kali系统上用deb安装QQ的方法。","_content":"\n## 1.确认系统架构\n\nKali通常运行在x86_64架构上，执行`uname -m`查看\n\n``` bash\nuname -m\n```\n\n- 如果输出 `x86_64`，则选择 **x86 版**。\n- 如果输出 `aarch64`（如树莓派或某些 ARM 设备），则选择 **ARM 版**。\n- 其他架构（如龙芯、MIPS）需根据硬件选择对应版本。\n\n![查看系统架构](/img/post/2/1.png)\n\n可以看到是X86_64\n\n这一步是想让大家知道原理\n\n\n\n## 2.下载安装包\n\n![QQLinux官网页面](/img/post/2/2.png)\n\n**选择x86的deb包下载**\n\n系统架构是x86_64，所以应该选择x86版的QQ。\n\nKali Linux是基于Debian的，Debian系的系统通常使用deb格式的安装包，所以应该优先选择deb包，兼容性更好。\n\nrpm主要是给Red Hat系的系统（如Fedora、CentOS）用的，而Kali不适用。AppImage是一种通用的Linux应用程序格式，不需要安装，直接运行即可，但可能需要赋予执行权限。\n\n**所以选择x86的deb包下载**\n\n## 3.打开终端\n\n![打开终端](/img/post/2/3.png)\n\n- 1.下载后在浏览器下载页选择在文件夹中打开\n- 2.在文件夹中右键选择在终端中打开，这时终端就会自动打开这个文件夹的目录，后面不需要用cd来打开文件夹，如图\n- 3.输入sudo su提权至root用户，后面不需要加sudo，如图\n\n{% note warning flat %}\n\n注意：输密码时输进去的密码是不显示的\n\n{% endnote %}\n\n``` bash\nsudo su\n```\n\n## 4.安装QQ依赖\n\n``` bash\nsudo apt install libgtk2.0-0 # Ubuntu\n```\n\n4.开始安装\n\n- 1.复制QQ安装包的名字，我下载的包名是QQ_3.2.15_250110_amd64_01.deb\n  2.使用dpkg安装\n\n``` bash\nsudo dpkg -i /QQ_3.2.15_250110_amd64_01.deb\n```\n\n**注意 在包名前需要加上斜杠/**\n\n## 5.打开QQ\n\n在开始页搜索qq，选择第一个点击\n\n![开始栏搜索qq](/img/post/2/4.png)\n\n可以看到，qq成功运行\n\n自此，教程结束，希望本章内容可以帮到你\n","source":"_posts/2.Kali2024.4安装qq.md","raw":"---\ntitle: 在Kali2024.4安装QQ Linux版\ndate: 2025-01-27 15:00:00\ntags:\n  - Kali\n  - 经验\ncategories:\n  - Linux\nseries: 2\ndescription: 阅读这篇完整指南，了解如何在Kali系统上用deb安装QQ的方法。\n---\n\n## 1.确认系统架构\n\nKali通常运行在x86_64架构上，执行`uname -m`查看\n\n``` bash\nuname -m\n```\n\n- 如果输出 `x86_64`，则选择 **x86 版**。\n- 如果输出 `aarch64`（如树莓派或某些 ARM 设备），则选择 **ARM 版**。\n- 其他架构（如龙芯、MIPS）需根据硬件选择对应版本。\n\n![查看系统架构](/img/post/2/1.png)\n\n可以看到是X86_64\n\n这一步是想让大家知道原理\n\n\n\n## 2.下载安装包\n\n![QQLinux官网页面](/img/post/2/2.png)\n\n**选择x86的deb包下载**\n\n系统架构是x86_64，所以应该选择x86版的QQ。\n\nKali Linux是基于Debian的，Debian系的系统通常使用deb格式的安装包，所以应该优先选择deb包，兼容性更好。\n\nrpm主要是给Red Hat系的系统（如Fedora、CentOS）用的，而Kali不适用。AppImage是一种通用的Linux应用程序格式，不需要安装，直接运行即可，但可能需要赋予执行权限。\n\n**所以选择x86的deb包下载**\n\n## 3.打开终端\n\n![打开终端](/img/post/2/3.png)\n\n- 1.下载后在浏览器下载页选择在文件夹中打开\n- 2.在文件夹中右键选择在终端中打开，这时终端就会自动打开这个文件夹的目录，后面不需要用cd来打开文件夹，如图\n- 3.输入sudo su提权至root用户，后面不需要加sudo，如图\n\n{% note warning flat %}\n\n注意：输密码时输进去的密码是不显示的\n\n{% endnote %}\n\n``` bash\nsudo su\n```\n\n## 4.安装QQ依赖\n\n``` bash\nsudo apt install libgtk2.0-0 # Ubuntu\n```\n\n4.开始安装\n\n- 1.复制QQ安装包的名字，我下载的包名是QQ_3.2.15_250110_amd64_01.deb\n  2.使用dpkg安装\n\n``` bash\nsudo dpkg -i /QQ_3.2.15_250110_amd64_01.deb\n```\n\n**注意 在包名前需要加上斜杠/**\n\n## 5.打开QQ\n\n在开始页搜索qq，选择第一个点击\n\n![开始栏搜索qq](/img/post/2/4.png)\n\n可以看到，qq成功运行\n\n自此，教程结束，希望本章内容可以帮到你\n","slug":"2.Kali2024.4安装qq","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhayga1000f3es3d3o8cvgm"},{"title":"智能的给Hexo全站外链加上rel标签，解决seo权重外流问题","date":"2025-03-05T11:15:00.000Z","series":4,"description":"为Hexo博客全站外链添加rel标签，解决 SEO 权重外流问题，提升博客优化效果。","_content":"\n今天偶然发现博客的好多外链没有rel标签，这会使得SEO权重外流！\n\n![没有rel标签呀](/img/post/5/1.png)\n\n\n## 思考\n\n\n\n我想要让全站的外链都加上`rel=\"noopener noreferrer nofollow\"`\n\n那么应当具备以下性能：\n\n- 1. 需要能智能判断是否是本站链接，如果是本站链接就不加。\n\n- 2. 如果是JavaScript代码（如`javascript:void(0);`），这种情况不应视为外部链接。\n\n- 3. 为确保都能加上，不管是否有rel标签，或rel标签是否正确，都全部替换`rel=\"noopener noreferrer nofollow\"`。\n\n---\n\n我想到了可以通过 Hexo 的 `after_render` 过滤器，无需修改主题文件和配置文件即可为全站外链动态添加 `rel` 属性。这样不动其他文件也确保了稳定性。\n\n学习了下hexo的文档并且请教了一下deepseek，写出了这些代码，可以正常使用。\n\n## 解决方法\n\n---\n\n在 Hexo 博客根目录下创建 `/scripts/add-rel.js` 文件，如果没有`/scripts`文件夹请你自行创建\n\n**它将获取_config.yml的url段，以判别外链**。\n\n\n\n{% note success modern %}\n在`/scripts`文件夹下的js文件会自动被Hexo执行，不需要手动引入。\n{% endnote %}\n\n```javascript\nconst { URL } = require('url');\n\nhexo.extend.filter.register('after_render:html', function (htmlContent) {\n  // 获取博客配置中的 URL\n  const siteUrl = new URL(hexo.config.url).origin;\n\n  // 匹配所有 <a> 标签\n  const regex = /<a\\s+([^>]*)>/gi;\n\n  return htmlContent.replace(regex, (match, attributes) => {\n    // 解析属性\n    const attrMap = {};\n    attributes.replace(/(\\w+)\\s*=\\s*([\"'])(.*?)\\2/gi, (_, key, quote, value) => {\n      attrMap[key] = value;\n      return '';\n    });\n\n    // 获取 href 属性\n    const href = attrMap.href;\n\n    // 判断是否是外部链接\n    let isExternal = false;\n    try {\n      if (href && !href.startsWith('javascript:') && !href.startsWith('#')) {\n        const url = new URL(href, siteUrl);\n        isExternal = url.origin !== siteUrl;\n      }\n    } catch (e) {\n      // 忽略无效的 URL\n      console.warn(`Invalid URL: ${href}`);\n    }\n\n    // 如果是外部链接，则替换或添加 rel 属性\n    if (isExternal) {\n      attrMap.rel = 'noopener noreferrer nofollow';\n    }\n\n    // 重新生成 <a> 标签\n    const newAttributes = Object.keys(attrMap)\n      .map(key => `${key}=\"${attrMap[key]}\"`)\n      .join(' ');\n\n    return `<a ${newAttributes}>`;\n  });\n});\n```\n\n之后执行Hexo三件套\n\n![rel标签出现啦！](/img/post/5/2.png)\n\n可以看到，rel标签出现了！","source":"_posts/4.解决无rel标签.md","raw":"---\ntitle: 智能的给Hexo全站外链加上rel标签，解决seo权重外流问题\ndate: 2025-03-05 19:15:00\ntags:\n  - Hexo\n  - Butterfly\n  - 教程\ncategories:\n  - Hexo\nseries: 4\ndescription: 为Hexo博客全站外链添加rel标签，解决 SEO 权重外流问题，提升博客优化效果。\n---\n\n今天偶然发现博客的好多外链没有rel标签，这会使得SEO权重外流！\n\n![没有rel标签呀](/img/post/5/1.png)\n\n\n## 思考\n\n\n\n我想要让全站的外链都加上`rel=\"noopener noreferrer nofollow\"`\n\n那么应当具备以下性能：\n\n- 1. 需要能智能判断是否是本站链接，如果是本站链接就不加。\n\n- 2. 如果是JavaScript代码（如`javascript:void(0);`），这种情况不应视为外部链接。\n\n- 3. 为确保都能加上，不管是否有rel标签，或rel标签是否正确，都全部替换`rel=\"noopener noreferrer nofollow\"`。\n\n---\n\n我想到了可以通过 Hexo 的 `after_render` 过滤器，无需修改主题文件和配置文件即可为全站外链动态添加 `rel` 属性。这样不动其他文件也确保了稳定性。\n\n学习了下hexo的文档并且请教了一下deepseek，写出了这些代码，可以正常使用。\n\n## 解决方法\n\n---\n\n在 Hexo 博客根目录下创建 `/scripts/add-rel.js` 文件，如果没有`/scripts`文件夹请你自行创建\n\n**它将获取_config.yml的url段，以判别外链**。\n\n\n\n{% note success modern %}\n在`/scripts`文件夹下的js文件会自动被Hexo执行，不需要手动引入。\n{% endnote %}\n\n```javascript\nconst { URL } = require('url');\n\nhexo.extend.filter.register('after_render:html', function (htmlContent) {\n  // 获取博客配置中的 URL\n  const siteUrl = new URL(hexo.config.url).origin;\n\n  // 匹配所有 <a> 标签\n  const regex = /<a\\s+([^>]*)>/gi;\n\n  return htmlContent.replace(regex, (match, attributes) => {\n    // 解析属性\n    const attrMap = {};\n    attributes.replace(/(\\w+)\\s*=\\s*([\"'])(.*?)\\2/gi, (_, key, quote, value) => {\n      attrMap[key] = value;\n      return '';\n    });\n\n    // 获取 href 属性\n    const href = attrMap.href;\n\n    // 判断是否是外部链接\n    let isExternal = false;\n    try {\n      if (href && !href.startsWith('javascript:') && !href.startsWith('#')) {\n        const url = new URL(href, siteUrl);\n        isExternal = url.origin !== siteUrl;\n      }\n    } catch (e) {\n      // 忽略无效的 URL\n      console.warn(`Invalid URL: ${href}`);\n    }\n\n    // 如果是外部链接，则替换或添加 rel 属性\n    if (isExternal) {\n      attrMap.rel = 'noopener noreferrer nofollow';\n    }\n\n    // 重新生成 <a> 标签\n    const newAttributes = Object.keys(attrMap)\n      .map(key => `${key}=\"${attrMap[key]}\"`)\n      .join(' ');\n\n    return `<a ${newAttributes}>`;\n  });\n});\n```\n\n之后执行Hexo三件套\n\n![rel标签出现啦！](/img/post/5/2.png)\n\n可以看到，rel标签出现了！","slug":"4.解决无rel标签","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhayga5000h3es32rb786pd"},{"title":"优化Hexo博客文章永久链接的几种方法","date":"2025-04-12T02:00:00.000Z","updated":"2025-04-13T05:00:00.000Z","series":5,"description":"本文介绍三种优化 Hexo 博客永久链接的方法，解决默认链接过长、不稳定的问题，提升 SEO 和用户体验。通过时间戳、哈希生成等方法，轻松实现简洁、稳定的永久链接格式。","_content":"\n## 默认永久链接格式的弊端\n\n在默认Hexo+Butterfly中，采用title标题作为永久链接\n\n{% note warning flat %}\n\n**使用默认永久链接格式导致我们在访问文章页面时会发现默认的文章链接相当的长，满是中文链接的转义字符**\n\n{% endnote %}\n\n{% note info flat %}\n\n**而且如果变动了标题那么会导致永久链接也会变，对搜索引擎极其不利**\n\n{% endnote %}\n\n在[Hexo官方文档](https://hexo.io/zh-cn/docs/permalinks)中也提供了一些参数可供修改\n\n| 变量          | 描述                                                         |\n| :------------ | :----------------------------------------------------------- |\n| `:year`       | 文章的发表年份（4 位数）                                     |\n| `:month`      | 文章的发表月份（2 位数）                                     |\n| `:i_month`    | 文章的发表月份（不含前导零）                                 |\n| `:day`        | 文章的发表日期 (2 位数)                                      |\n| `:i_day`      | 文章的发表日期（不含前导零）                                 |\n| `:hour`       | 文章发表时的小时 (2 位数)                                    |\n| `:minute`     | 文章发表时的分钟 (2 位数)                                    |\n| `:second`     | 文章发表时的秒钟 (2 位数)                                    |\n| `:title`      | 文件名称 (相对于 “source/_posts/“ 文件夹)                    |\n| `:name`       | 文件名称                                                     |\n| `:post_title` | 文章标题                                                     |\n| `:id`         | 文章 ID (*[清除缓存](https://hexo.io/zh-cn/docs/commands#clean)时不具有持久性*) |\n| `:category`   | 分类。 如果文章没有分类，则是 `default_category` 配置信息。  |\n| `:hash`       | 文件名（与 `:title` 相同）和日期的 SHA1 哈希值（12位16进制数） |\n\n## 第一种方法：/posts/年/月/日/时/分/秒.html\n\n{% note success modern %}\n\n**格式：`/posts/年/月/日/时/分/秒.html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`/posts/2025/04/12/10/00/00.html`**\n\n{% endnote %}\n\n这样的url格式中年月日都会有分隔符，生成的链接会成为一个四级目录，**对于搜索引擎来说并不是很友好。**\n\n1. 在`_config.yml`中设置\n\n```yaml\npermalink: /posts/:year/:month/:day/:hour/:minute/:second.html\n```\n\n\n\n这样，假设有一篇文章Front-matter中的date是2025-04-12 10:00:00，那么这篇文章的永久链接为`example.com/posts/2025/04/12/10/00/00.html`\n\n当然，也可以不加/posts，在_config.yml设置`permalink: /:year/:month/:day/:hour/:minute/:second.html`，这样的永久链接格式就为`/2025/04/12/10/00/00.html`，不过从生成的链接根目录看可能有比较多的文件夹，对于有强迫症的朋友们或许不是那么友好。\n\n## 第二种方法，/posts/年月日时分秒.html\n\n{% note success modern %}\n\n**格式：`example.com/posts/年月日时分秒.html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`example.com/20250412100000.html`**\n\n{% endnote %}\n\n按照这种方法，假设有一篇文章的Front-matter中的date是2025-04-12 10:00:00，那么这篇文章的永久链接就为：`example.com/20250412100000.html`\n\n**操作步骤：**\n\n1. 在`_config.yml`中设置\n\n```yaml\npermalink: posts/:year:month:day:hour:minute:second.html\n```\n\n这样，假设有一篇文章的Front-matter中的date是2025-04-12 10:00:00，那么这篇文章的永久链接就为：`example.com/20250412100000.html`，**这就是我目前写这篇文章时在用的永久链接格式**。\n\n## 第三种方法 hexo-abbrlink（推荐）\n\n**注：本方法参考文献：  {% btn 'https://blog.dejavu.moe/posts/hexo-permalinks/',优化 Hexo 网站的永久链接格式 · Dejavu's Blog %} ，尊重知识产权是我应尽的义务。**\n\nhexo-abbrlink插件可将 Hexo 生成的永久链接转化为一个固定的随机值，极大的缩短了永久链接的长度。随机值生成后对文章的标题或者时间进行任何修改， abbrlink 不会发生任何变化，非常便于维护。\n\n{% note success modern %}\n\n**格式：`blog.hslzz.cn/posts/xxxxxx.html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`blog.hslzz.cn/posts/8ddf18fb.html`**\n\n{% endnote %}\n\n{% note warning no-icon %}\n\n**局限性:** `crc16` 算法生成的最大文章数量为 `65535`，不过这个对绝大多数人都几乎没影响，如果一个 `abbrlink` 的值已存在，那么它会尝试其他可用的值\n\n{% endnote %}\n\n### hexo-abbrlink 插件\n\n在博客根目录下打开终端安装插件\n\n```bash\n# 使用 npm 安装插件\nnpm install hexo-abbrlink --save\n# 使用 yarn 安装插件\nyarn add hexo-abbrlink\n\n```\n\n修改 Hexo 的配置文件的 `permalink:` 字段，比如\n\n\n\n```yaml\npermalink: posts/:abbrlink.html\n```\n\n然后在`_config.yml`里增加 hexo-abbrlink 插件的配置\n\n\n\n```yaml\n# hexo-abbrlink\nabbrlink:\n  alg: crc32      #支持crc16和crc32算法（默认crc16）\n  rep: hex        #支持dec和hex值（默认dec）\n  drafts: false   #(true)Process draft,(false)Do not process draft. false(default) \n  # Generate categories from directory-tree\n  # depth: the max_depth of directory-tree you want to generate, should > 0\n  auto_category:\n     enable: true  #true(default)\n     depth:        #3(default)\n     over_write: false \n  auto_title: false #enable auto title, it can auto fill the title by path\n  auto_date: false #enable auto date, it can auto fill the date by time today\n  force: false #enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink.\n```\n\n默认情况下，在新建文章后，abbrlink 插件会自动使用算法生成唯一的永久链接，比如\n\n\n\n```yaml\n#crc16 & hex\nhttps://blog.hslzz.cn/posts/66c8.html\n# crc16 & dec\nhttps://blog.hslzz.cn/posts/65535.html\n# crc32 & hex\nhttps://blog.hslzz.cn/posts/8ddf18fb.html\n# crc32 & dec\nhttps://blog.hslzz.cn/posts/1690090958.html\n```\n\n也可以在文章的 `front-matter` 部分手动填写 abbrlink 字段的值\n\n\n\n```yaml\ntitle: 优化 Hexo 的永久链接\ntoc: true\nabbrlink: hexo-permalinks #注意这部分\ndate: 2020-06-07 23:35:40\n```\n\n此时永久链接格式就是 `https://blog.hslzz.cn/posts/hexo-permalinks.html`\n\n### hexo-abbrlink2 插件\n\n在 Hexo 根目录打开终端安装插件\n\n```bash\n# 使用npm安装插件\nnpm install hexo-abbrlink2 --save\n# 使用yarn安装插件\nyarn add hexo-abbrlink2\n```\n\n修改 Hexo 的配置文件的 `permalink:` 字段，比如\n\n\n\n```yaml\npermalink: posts/:abbrlink.html\n```\n\n在 Hexo 的配置文件里增加 `hexo-abbrlink2` 插件的配置（可选）\n\n\n\n```yaml\n# hexo-abbrlink2\nabbrlink:\n  start: 100 # 启起始文章id，默认为0 ，可以自定义，比如100\n```\n\n默认情况下，在新建文章后，`abbrlink2` 插件会自动使用算法生成唯一的永久链接，比如\n\n\n\n```yaml\n# 默认起始文章id为0的情况下\nhttps://dejavu.moe/posts/1.html\nhttps://dejavu.moe/posts/2.html\nhttps://dejavu.moe/posts/3.html\n\n#自定义文章起始id为100的情况下\nhttps://dejavu.moe/posts/101.html\nhttps://dejavu.moe/posts/102.html\nhttps://dejavu.moe/posts/1033.html\n```\n\n## 第四种方法：基于文件路径的哈希\n\n{% note success modern %}\n\n**格式：`/:hash(6).html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`a3b8d9.html`**\n\n{% endnote %}\n\n原理：使用文件绝对路径生成短哈希，确保文件名或内容修改不影响链接\n\n**操作步骤：**\n\n1. 创建文件 `scripts/hash-permalink.js`，填入以下内容：\n\n```\nconst crypto = require('crypto');\n\nhexo.extend.filter.register('before_post_render', function(data) {\n  const hash = crypto.createHash('sha1')\n    .update(data.source)\n    .digest('hex')\n    .substring(0, 6);\n  data.hash = hash;\n  return data;\n});\n```\n\n2. **修改`_config.yml`：**\n\n```yaml\npermalink: :hash.html\n```\n\n**注意事项**：\n\n- 必须保持文件路径不变（重命名文件会导致链接变化）\n\n- 哈希冲突概率约为1600万分之一，完全可以忽略不计\n","source":"_posts/5.永久链接优化.md","raw":"---\ntitle: 优化Hexo博客文章永久链接的几种方法\ndate: 2025-04-12 10:00:00\nupdated: 2025-04-13 13:00:00\ntags:\n  - Hexo\n  - 教程\ncategories:\n  - Hexo\nseries: 5\ndescription: 本文介绍三种优化 Hexo 博客永久链接的方法，解决默认链接过长、不稳定的问题，提升 SEO 和用户体验。通过时间戳、哈希生成等方法，轻松实现简洁、稳定的永久链接格式。\n---\n\n## 默认永久链接格式的弊端\n\n在默认Hexo+Butterfly中，采用title标题作为永久链接\n\n{% note warning flat %}\n\n**使用默认永久链接格式导致我们在访问文章页面时会发现默认的文章链接相当的长，满是中文链接的转义字符**\n\n{% endnote %}\n\n{% note info flat %}\n\n**而且如果变动了标题那么会导致永久链接也会变，对搜索引擎极其不利**\n\n{% endnote %}\n\n在[Hexo官方文档](https://hexo.io/zh-cn/docs/permalinks)中也提供了一些参数可供修改\n\n| 变量          | 描述                                                         |\n| :------------ | :----------------------------------------------------------- |\n| `:year`       | 文章的发表年份（4 位数）                                     |\n| `:month`      | 文章的发表月份（2 位数）                                     |\n| `:i_month`    | 文章的发表月份（不含前导零）                                 |\n| `:day`        | 文章的发表日期 (2 位数)                                      |\n| `:i_day`      | 文章的发表日期（不含前导零）                                 |\n| `:hour`       | 文章发表时的小时 (2 位数)                                    |\n| `:minute`     | 文章发表时的分钟 (2 位数)                                    |\n| `:second`     | 文章发表时的秒钟 (2 位数)                                    |\n| `:title`      | 文件名称 (相对于 “source/_posts/“ 文件夹)                    |\n| `:name`       | 文件名称                                                     |\n| `:post_title` | 文章标题                                                     |\n| `:id`         | 文章 ID (*[清除缓存](https://hexo.io/zh-cn/docs/commands#clean)时不具有持久性*) |\n| `:category`   | 分类。 如果文章没有分类，则是 `default_category` 配置信息。  |\n| `:hash`       | 文件名（与 `:title` 相同）和日期的 SHA1 哈希值（12位16进制数） |\n\n## 第一种方法：/posts/年/月/日/时/分/秒.html\n\n{% note success modern %}\n\n**格式：`/posts/年/月/日/时/分/秒.html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`/posts/2025/04/12/10/00/00.html`**\n\n{% endnote %}\n\n这样的url格式中年月日都会有分隔符，生成的链接会成为一个四级目录，**对于搜索引擎来说并不是很友好。**\n\n1. 在`_config.yml`中设置\n\n```yaml\npermalink: /posts/:year/:month/:day/:hour/:minute/:second.html\n```\n\n\n\n这样，假设有一篇文章Front-matter中的date是2025-04-12 10:00:00，那么这篇文章的永久链接为`example.com/posts/2025/04/12/10/00/00.html`\n\n当然，也可以不加/posts，在_config.yml设置`permalink: /:year/:month/:day/:hour/:minute/:second.html`，这样的永久链接格式就为`/2025/04/12/10/00/00.html`，不过从生成的链接根目录看可能有比较多的文件夹，对于有强迫症的朋友们或许不是那么友好。\n\n## 第二种方法，/posts/年月日时分秒.html\n\n{% note success modern %}\n\n**格式：`example.com/posts/年月日时分秒.html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`example.com/20250412100000.html`**\n\n{% endnote %}\n\n按照这种方法，假设有一篇文章的Front-matter中的date是2025-04-12 10:00:00，那么这篇文章的永久链接就为：`example.com/20250412100000.html`\n\n**操作步骤：**\n\n1. 在`_config.yml`中设置\n\n```yaml\npermalink: posts/:year:month:day:hour:minute:second.html\n```\n\n这样，假设有一篇文章的Front-matter中的date是2025-04-12 10:00:00，那么这篇文章的永久链接就为：`example.com/20250412100000.html`，**这就是我目前写这篇文章时在用的永久链接格式**。\n\n## 第三种方法 hexo-abbrlink（推荐）\n\n**注：本方法参考文献：  {% btn 'https://blog.dejavu.moe/posts/hexo-permalinks/',优化 Hexo 网站的永久链接格式 · Dejavu's Blog %} ，尊重知识产权是我应尽的义务。**\n\nhexo-abbrlink插件可将 Hexo 生成的永久链接转化为一个固定的随机值，极大的缩短了永久链接的长度。随机值生成后对文章的标题或者时间进行任何修改， abbrlink 不会发生任何变化，非常便于维护。\n\n{% note success modern %}\n\n**格式：`blog.hslzz.cn/posts/xxxxxx.html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`blog.hslzz.cn/posts/8ddf18fb.html`**\n\n{% endnote %}\n\n{% note warning no-icon %}\n\n**局限性:** `crc16` 算法生成的最大文章数量为 `65535`，不过这个对绝大多数人都几乎没影响，如果一个 `abbrlink` 的值已存在，那么它会尝试其他可用的值\n\n{% endnote %}\n\n### hexo-abbrlink 插件\n\n在博客根目录下打开终端安装插件\n\n```bash\n# 使用 npm 安装插件\nnpm install hexo-abbrlink --save\n# 使用 yarn 安装插件\nyarn add hexo-abbrlink\n\n```\n\n修改 Hexo 的配置文件的 `permalink:` 字段，比如\n\n\n\n```yaml\npermalink: posts/:abbrlink.html\n```\n\n然后在`_config.yml`里增加 hexo-abbrlink 插件的配置\n\n\n\n```yaml\n# hexo-abbrlink\nabbrlink:\n  alg: crc32      #支持crc16和crc32算法（默认crc16）\n  rep: hex        #支持dec和hex值（默认dec）\n  drafts: false   #(true)Process draft,(false)Do not process draft. false(default) \n  # Generate categories from directory-tree\n  # depth: the max_depth of directory-tree you want to generate, should > 0\n  auto_category:\n     enable: true  #true(default)\n     depth:        #3(default)\n     over_write: false \n  auto_title: false #enable auto title, it can auto fill the title by path\n  auto_date: false #enable auto date, it can auto fill the date by time today\n  force: false #enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink.\n```\n\n默认情况下，在新建文章后，abbrlink 插件会自动使用算法生成唯一的永久链接，比如\n\n\n\n```yaml\n#crc16 & hex\nhttps://blog.hslzz.cn/posts/66c8.html\n# crc16 & dec\nhttps://blog.hslzz.cn/posts/65535.html\n# crc32 & hex\nhttps://blog.hslzz.cn/posts/8ddf18fb.html\n# crc32 & dec\nhttps://blog.hslzz.cn/posts/1690090958.html\n```\n\n也可以在文章的 `front-matter` 部分手动填写 abbrlink 字段的值\n\n\n\n```yaml\ntitle: 优化 Hexo 的永久链接\ntoc: true\nabbrlink: hexo-permalinks #注意这部分\ndate: 2020-06-07 23:35:40\n```\n\n此时永久链接格式就是 `https://blog.hslzz.cn/posts/hexo-permalinks.html`\n\n### hexo-abbrlink2 插件\n\n在 Hexo 根目录打开终端安装插件\n\n```bash\n# 使用npm安装插件\nnpm install hexo-abbrlink2 --save\n# 使用yarn安装插件\nyarn add hexo-abbrlink2\n```\n\n修改 Hexo 的配置文件的 `permalink:` 字段，比如\n\n\n\n```yaml\npermalink: posts/:abbrlink.html\n```\n\n在 Hexo 的配置文件里增加 `hexo-abbrlink2` 插件的配置（可选）\n\n\n\n```yaml\n# hexo-abbrlink2\nabbrlink:\n  start: 100 # 启起始文章id，默认为0 ，可以自定义，比如100\n```\n\n默认情况下，在新建文章后，`abbrlink2` 插件会自动使用算法生成唯一的永久链接，比如\n\n\n\n```yaml\n# 默认起始文章id为0的情况下\nhttps://dejavu.moe/posts/1.html\nhttps://dejavu.moe/posts/2.html\nhttps://dejavu.moe/posts/3.html\n\n#自定义文章起始id为100的情况下\nhttps://dejavu.moe/posts/101.html\nhttps://dejavu.moe/posts/102.html\nhttps://dejavu.moe/posts/1033.html\n```\n\n## 第四种方法：基于文件路径的哈希\n\n{% note success modern %}\n\n**格式：`/:hash(6).html`**\n\n{% endnote %}\n\n{% note info modern %}\n\n**示例：`a3b8d9.html`**\n\n{% endnote %}\n\n原理：使用文件绝对路径生成短哈希，确保文件名或内容修改不影响链接\n\n**操作步骤：**\n\n1. 创建文件 `scripts/hash-permalink.js`，填入以下内容：\n\n```\nconst crypto = require('crypto');\n\nhexo.extend.filter.register('before_post_render', function(data) {\n  const hash = crypto.createHash('sha1')\n    .update(data.source)\n    .digest('hex')\n    .substring(0, 6);\n  data.hash = hash;\n  return data;\n});\n```\n\n2. **修改`_config.yml`：**\n\n```yaml\npermalink: :hash.html\n```\n\n**注意事项**：\n\n- 必须保持文件路径不变（重命名文件会导致链接变化）\n\n- 哈希冲突概率约为1600万分之一，完全可以忽略不计\n","slug":"5.永久链接优化","published":1,"comments":1,"layout":"post","photos":[],"_id":"cmfhaygab000l3es3hykf6sus"},{"title":"Ubuntu一步到位改语言、时区、更新源、DNS","date":"2025-06-02T01:25:00.000Z","series":6,"description":"本文写了Ubuntu系统一键配置指南，包括中文语言设置、时区调整、换更新源、改DNS，附带了详细命令和操作步骤，帮助快速完成系统基础优化工作。","_content":"\n# 改语言\n\n```\napt install language-pack-zh-hans -y && locale-gen zh_CN.UTF-8 && update-locale LANG=zh_CN.UTF-8\n```\n\n# 改时区\n\n```\ntimedatectl set-timezone Asia/Shanghai\n```\n\n# 改更新源\n\n修改`/etc/apt/sources.list`\n\n具体内容参照镜像源文档，推荐使用清华大学源和中科大源\n\n[ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)\n\n[Ubuntu - USTC Mirror Help](https://mirrors.ustc.edu.cn/help/ubuntu.html)\n\n# 改DNS\n\n打开`/etc/resolv.conf`\n\n![1](/img/post/6/1.png)\n\n全部删除然后写入：\n\n```\nnameserver 119.29.29.29\nnameserver 223.5.5.5\n```\n\n推荐的DNS如下：\n\n| DNS服务商                 | 地址                         | 地域          | 评价                                                         |\n| ------------------------- | ---------------------------- | ------------- | ------------------------------------------------------------ |\n| 腾讯云（DNSPod）          | 119.29.29.29                 | 广东省 广州市 | 推荐，感觉比阿里的好一些<br />海外可以使用                   |\n| 阿里云                    | 223.5.5.5                    | 浙江省 杭州市 | 比较推荐，略逊色于腾讯云<br />限速，延迟比腾讯云大<br />海外部分地区连通性不是特别好 |\n| 中国互联网信息中心 CNNIC  | 1.2.4.8<br />210.2.4.8       | 北京市 西城区 | 还可以                                                       |\n| 字节跳动 TrafficRoute DNS | 180.184.1.1<br />180.184.2.2 | 北京市 西城区 | 不错，小众的DNS，目前延迟较低<br />字节大厂的稳定性还是可以的 |\n\n","source":"_posts/6.Ubuntu修改各种东西.md","raw":"---\ntitle: Ubuntu一步到位改语言、时区、更新源、DNS\ndate: 2025-06-02 09:25:00\ntags:\n  - 经验\n  - Linux\n  - Ubuntu\ncategories:\n  - Linux\nseries: 6\ndescription: 本文写了Ubuntu系统一键配置指南，包括中文语言设置、时区调整、换更新源、改DNS，附带了详细命令和操作步骤，帮助快速完成系统基础优化工作。\n---\n\n# 改语言\n\n```\napt install language-pack-zh-hans -y && locale-gen zh_CN.UTF-8 && update-locale LANG=zh_CN.UTF-8\n```\n\n# 改时区\n\n```\ntimedatectl set-timezone Asia/Shanghai\n```\n\n# 改更新源\n\n修改`/etc/apt/sources.list`\n\n具体内容参照镜像源文档，推荐使用清华大学源和中科大源\n\n[ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)\n\n[Ubuntu - USTC Mirror Help](https://mirrors.ustc.edu.cn/help/ubuntu.html)\n\n# 改DNS\n\n打开`/etc/resolv.conf`\n\n![1](/img/post/6/1.png)\n\n全部删除然后写入：\n\n```\nnameserver 119.29.29.29\nnameserver 223.5.5.5\n```\n\n推荐的DNS如下：\n\n| DNS服务商                 | 地址                         | 地域          | 评价                                                         |\n| ------------------------- | ---------------------------- | ------------- | ------------------------------------------------------------ |\n| 腾讯云（DNSPod）          | 119.29.29.29                 | 广东省 广州市 | 推荐，感觉比阿里的好一些<br />海外可以使用                   |\n| 阿里云                    | 223.5.5.5                    | 浙江省 杭州市 | 比较推荐，略逊色于腾讯云<br />限速，延迟比腾讯云大<br />海外部分地区连通性不是特别好 |\n| 中国互联网信息中心 CNNIC  | 1.2.4.8<br />210.2.4.8       | 北京市 西城区 | 还可以                                                       |\n| 字节跳动 TrafficRoute DNS | 180.184.1.1<br />180.184.2.2 | 北京市 西城区 | 不错，小众的DNS，目前延迟较低<br />字节大厂的稳定性还是可以的 |\n\n","slug":"6.Ubuntu修改各种东西","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhaygad000m3es3cw7f3p91","content":"<h1>改语言</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install language-pack-zh-hans -y &amp;&amp; locale-gen zh_CN.UTF-8 &amp;&amp; update-locale LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure>\n<h1>改时区</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>\n<h1>改更新源</h1>\n<p>修改<code>/etc/apt/sources.list</code></p>\n<p>具体内容参照镜像源文档，推荐使用清华大学源和中科大源</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\">ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p>\n<p><a href=\"https://mirrors.ustc.edu.cn/help/ubuntu.html\">Ubuntu - USTC Mirror Help</a></p>\n<h1>改DNS</h1>\n<p>打开<code>/etc/resolv.conf</code></p>\n<p><img src=\"/img/post/6/1.png\" alt=\"1\"></p>\n<p>全部删除然后写入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nameserver 119.29.29.29</span><br><span class=\"line\">nameserver 223.5.5.5</span><br></pre></td></tr></table></figure>\n<p>推荐的DNS如下：</p>\n<table>\n<thead>\n<tr>\n<th>DNS服务商</th>\n<th>地址</th>\n<th>地域</th>\n<th>评价</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>腾讯云（DNSPod）</td>\n<td>119.29.29.29</td>\n<td>广东省 广州市</td>\n<td>推荐，感觉比阿里的好一些<br />海外可以使用</td>\n</tr>\n<tr>\n<td>阿里云</td>\n<td>223.5.5.5</td>\n<td>浙江省 杭州市</td>\n<td>比较推荐，略逊色于腾讯云<br />限速，延迟比腾讯云大<br />海外部分地区连通性不是特别好</td>\n</tr>\n<tr>\n<td>中国互联网信息中心 CNNIC</td>\n<td>1.2.4.8<br />210.2.4.8</td>\n<td>北京市 西城区</td>\n<td>还可以</td>\n</tr>\n<tr>\n<td>字节跳动 TrafficRoute DNS</td>\n<td>180.184.1.1<br />180.184.2.2</td>\n<td>北京市 西城区</td>\n<td>不错，小众的DNS，目前延迟较低<br />字节大厂的稳定性还是可以的</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h1>改语言</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install language-pack-zh-hans -y &amp;&amp; locale-gen zh_CN.UTF-8 &amp;&amp; update-locale LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure>\n<h1>改时区</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>\n<h1>改更新源</h1>\n<p>修改<code>/etc/apt/sources.list</code></p>\n<p>具体内容参照镜像源文档，推荐使用清华大学源和中科大源</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\">ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p>\n<p><a href=\"https://mirrors.ustc.edu.cn/help/ubuntu.html\">Ubuntu - USTC Mirror Help</a></p>\n<h1>改DNS</h1>\n<p>打开<code>/etc/resolv.conf</code></p>\n<p><img src=\"/img/post/6/1.png\" alt=\"1\"></p>\n<p>全部删除然后写入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nameserver 119.29.29.29</span><br><span class=\"line\">nameserver 223.5.5.5</span><br></pre></td></tr></table></figure>\n<p>推荐的DNS如下：</p>\n<table>\n<thead>\n<tr>\n<th>DNS服务商</th>\n<th>地址</th>\n<th>地域</th>\n<th>评价</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>腾讯云（DNSPod）</td>\n<td>119.29.29.29</td>\n<td>广东省 广州市</td>\n<td>推荐，感觉比阿里的好一些<br />海外可以使用</td>\n</tr>\n<tr>\n<td>阿里云</td>\n<td>223.5.5.5</td>\n<td>浙江省 杭州市</td>\n<td>比较推荐，略逊色于腾讯云<br />限速，延迟比腾讯云大<br />海外部分地区连通性不是特别好</td>\n</tr>\n<tr>\n<td>中国互联网信息中心 CNNIC</td>\n<td>1.2.4.8<br />210.2.4.8</td>\n<td>北京市 西城区</td>\n<td>还可以</td>\n</tr>\n<tr>\n<td>字节跳动 TrafficRoute DNS</td>\n<td>180.184.1.1<br />180.184.2.2</td>\n<td>北京市 西城区</td>\n<td>不错，小众的DNS，目前延迟较低<br />字节大厂的稳定性还是可以的</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"利用CDN自定义请求报头功能实现源站精确获得访客ip","date":"2025-06-08T14:45:20.000Z","series":7,"description":"按照本文教程配置成功后可以实现”一头走天下“：只要代理链路不对自定义头修改，任何代理链路和源站都可以直接读取这个头获得访客ip，而不需要繁琐的配置XFF","_content":"\n## 提要\n\n本文适用情况：\n\n用户第一层访问的是CDN，代理链路可信不会修改你的自定义请求头。\n\n{% note danger modern %}\n\n本文使用的CDN系统是FlexCDN，若你的CDN使用的是其他系统可能不通用，请自行寻找请求变量\n\n{% endnote %}\n\n**按照本文教程配置成功后可以实现“一头走天下”：只要代理链路不对自定义头修改，任何代理链路和源站都可以直接读取这个头获得访客ip，而不需要繁琐的配置XFF**\n\n{% note info disabled %}\n不想看长文的直接[跳转到正片](#配置CDN)\n{% endnote %}\n\n---\n\n最近我看到有些同学们配XFF出现了很多问题，依照我早期摸索出的经验，写下这篇文章。\n\n## 基础知识\n\n### 什么是HTTP请求体\n\nHTTP请求体由三部分组成：请求行、请求头、报文体。\n\n这是一个正常的的HTTP请求\n\n![HTTP请求示例](/img/post/7/1.png)\n\n其中，第一行的①、②、③统称为请求行；报文头也称为请求头\n\n可以看到，一个正常的HTTP请求带有这些参数，接下来我将通过访问哔哩哔哩网站并抓包来详细讲解。\n\n![HTTP请求示例2](/img/post/7/2.png)\n\n在这个请求体示例中，由于是用的GET方法进行请求，GET请求方法是指：向服务器发出请求，意图从服务器下载东西。因此不含有报文体。\n\n可以看到，在我访问哔哩哔哩的`请求头`中，我使用`HTTP/1.1`协议通过`GET`方法向服务器发出请求；在`User-Agent`栏，也就是我们熟称的`浏览器UA`中可以看到，我正在使用版本号为537.36的电脑版Edge浏览器进行访问，这个浏览器的内核是`Chrome136.0.0.0`，一些手机浏览器访问电脑版网页也是通过伪造浏览器UA来实现。\n\n### 什么是`X-Forward-For`\n\n\n\n`X-Forwarded-For` 是相对通用的 HTTP 请求头。\n\n当CDN部署在最外层，HTTP 流量是经过CDN进行代理传回的，由于网络连接被CDN截胡，源站服务器无法得知真正的客户端 IP。\n\n这时代理设备（CDN）会给当前的流量加上一个 `X-Forwarded-For` 头，里面的内容就是连接这个代理的客户端 IP。\n\n下面这个例子中 HTTP 代理通过 `X-Forwarded-For` 头告诉服务器，真正的客户端地址是 `1.2.3.4`\n\n```http\nGET / HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36\nX-Forwarded-For: 1.2.3.4\n```\n\n`X-Forwarded-For` 实际上是一个链式结构。如果流量经过了多层代理设备，`X-Forwarded-For` 会记录途径的所有 IP。\n\n下面这个例子中 HTTP 代理通过 `X-Forwarded-For` 头告诉服务器，流量经过了三层代理，真正的客户端地址是 `1.2.3.4`。\n\n第一层代理的是 `11.12.13.14`，第二层代理的地址是 `21.22.23.24`，第三次代理的地址可以直接通过网络连接获取。\n\n```http\nGET / HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36\nX-Forwarded-For: 1.2.3.4, 11.12.13.14, 21.22.23.24\n```\n\n- **从网络连接中获取**: 当雷池作为最外层代理设备，无其他前置代理时选用\n- **从 `X-Forwarded-For` 中获取上一级代理的地址**：在流量到达雷池之前还有**一层**代理设备（如 Nginx，CDN 等）时可选用\n- **从 `X-Forwarded-For` 中获取上上一级代理的地址**：在流量到达雷池之前还有**两层**代理设备（如 Nginx，CDN 等）时可选用\n- **从 `X-Forwarded-For` 中获取上上上一级代理的地址**：在流量到达雷池之前还有**三层**代理设备（如 Nginx，CDN 等）时可选用\n\n- 从其他 HTTP Header 中获取\n\n  ：有几种情况\n\n  - 流量经过了一些特殊的反向代理设备，这类代理不会发送 `X-Forwarded-For` 头，但是可以通过配置，把 `IP` 通过其他头发过来\n  - 流量到达雷池有多种途径，可能有一层代理，也可能有两层代理，可以通过配置前置代理设备来统一 `HTTP` 头\n\n### 问题\n\n**`X-Forward-For`的链式结构会带来一些问题**，比如这位同学\n\n![3](/img/post/7/3.png)\n\n这位同学的CDN请求雷池的请求头中，XFF携带的ip数量不等，原因是**用户的请求头中就有残留XFF报头，有的CDN只会在XFF后面加上直接获取的ip，而不会清空重写**，这一般是用户存在代理导致的。\n\n一般来说多的前几个是代理ip，cdn添加的是直接从网络连接获取ip，不是这位同学所说的最左边才是真实ip（当然也可能是代理转发前的ip），因此可以通过从后往前读xff获取cdn从网络连接中直接获取的ip\n\n但是还有什么办法，更通俗易懂呢？\n\n### `X-Real-IP`\n\n有的同学说，X-Real-IP不会被伪造，经我测试，**在一些存在漏洞的CDN中依然可以被伪造**，例子如下\n\n第一步，我**提前在CDN之前就添加了`X-Real-IP`请求头，写入阿里云DNS 的ip`223.5.5.5`**。在雷池中配置使用X-Real-IP读取访客ip。\n\n这个请求体中包含恶意元素，将使得雷池WAF将拦截我的请求，便于我观察转发后的流量。\n\n![第一步](/img/post/7/4.png)\n\n发包后，雷池拦截\n\n![5](/img/post/7/5.png)\n\n可以看到，X-Real-IP并没有被清空重写，而是直接就这样发出去了，我CDN是有开传递X-Real-IP的。\n\n这下不得了了，此时攻击者直接变成了`223.5.5.5`（阿里云DNS的IP），并且[IP 威胁情报-长亭百川云平台](https://rivers.chaitin.cn/console/app/ip-20296/?search=223.5.5.5)甚至可以查到？！\n\n![6](/img/post/7/6.png)\n\n阿里云对不起。。。\n\n## 正片\n\n### 配置CDN\n\n在CDN控制台中，添加请求报头，报头名称你可以自定义，这里我使用`X-Real-Forwarded-For`作为我自定义的请求报头。\n\n值填`${rawRemoteAddr}`，意为CDN通过网络连接直接获取的ip地址。\n\n![7](/img/post/7/7.png)\n\n### 配置雷池\n\n{% note primary modern %}\n没有装雷池的可以直接往下看，由于自定义报头不存在链式结构，因此每一层都可以直接通过这个头获得ip。\n{% endnote %}\n\n在雷池——防护应用——高级配置中的源IP获取方式中，设置从HTTP Header中获取，值填你自定义的请求报头。\n\n![9](/img/post/7/9.png)\n\n### 配置源站\n\n在你的Nginx配置文件中加入以下配置\n\n```\nset_real_ip_from 0.0.0.0/0;\nreal_ip_header X-Real-Forwarded-For; #填你自定义的请求头 \n```\n\n\n\n**记得要在前面加两个缩进**\n\n![10](/img/post/7/10.png)\n\n然后保存\n\n## 测试\n\n对我的博客进行模拟 SQL 注入攻击**并抓包**，如何测试防护效果请翻阅雷池官方文档：[测试防护效果 | 雷池 SafeLine](https://docs.waf-ce.chaitin.cn/zh/上手指南/测试防护效果)\n\n![11](/img/post/7/11.png)\n\n可以看到被拦截了，返回了403，我们回雷池看一下日志\n\n![12](/img/post/7/12.png)\n\n可以看到被拦截，请求报文中带有我们自定义的X-Real-Forwarded-For，记录了我的真实ip。\n\n接下来我进行请求重放，在用户端就伪造这个请求头，模拟这个请求头被黑客知道了的情况\n\n{% note danger modern %}\n**一般别人不可能知道我们自定义的请求头**，因为这个请求头只在CDN和雷池（或源站）之间通信，不对外发送和开放。\n\n{% endnote %}\n\n但是为了确保严谨性，我还是进行请求重放测试\n\n![13](/img/post/7/13.png)\n\n我自己手动添加了一个自定义的请求头，模拟被黑客知道然后伪造请求头攻击的情况。\n\n可以看到被雷池BYPASS，回到雷池日志看看情况\n\n![15](/img/post/7/15.png)\n\n可以看到自定义请求头仍然被替换成了访客的真实ip，也就是说通过伪造请求头骗过源站的方式不凑效了。\n\n{% note success modern %}\n\n实现了**一头走天下**：只要代理链路不对这个头修改，任何代理链路都可以直接读取这个头获得访客ip，而不需要繁琐的配置XFF。\n\n{% endnote %}\n\n## 答疑\n\n为什么我的宝塔面板同时出现雷池和访客的ip？（如下图）\n\n![16](/img/post/7/16.png)\n\n答：因为你在雷池启用了上游服务器健康检查。\n\n解决方法：在雷池面板防护应用的应用详情中，点基本信息——基础配置右边的笔，关掉上游服务器健康检查。\n","source":"_posts/7.利用CDN请求头获取源IP.md","raw":"---\ntitle: 利用CDN自定义请求报头功能实现源站精确获得访客ip\ndate: 2025-06-08 22:45:20\ntags:\n  - 经验\n  - Linux\n  - Ubuntu\n  - 雷池WAF\ncategories:\n  - Linux\nseries: 7\ndescription: 按照本文教程配置成功后可以实现”一头走天下“：只要代理链路不对自定义头修改，任何代理链路和源站都可以直接读取这个头获得访客ip，而不需要繁琐的配置XFF\n---\n\n## 提要\n\n本文适用情况：\n\n用户第一层访问的是CDN，代理链路可信不会修改你的自定义请求头。\n\n{% note danger modern %}\n\n本文使用的CDN系统是FlexCDN，若你的CDN使用的是其他系统可能不通用，请自行寻找请求变量\n\n{% endnote %}\n\n**按照本文教程配置成功后可以实现“一头走天下”：只要代理链路不对自定义头修改，任何代理链路和源站都可以直接读取这个头获得访客ip，而不需要繁琐的配置XFF**\n\n{% note info disabled %}\n不想看长文的直接[跳转到正片](#配置CDN)\n{% endnote %}\n\n---\n\n最近我看到有些同学们配XFF出现了很多问题，依照我早期摸索出的经验，写下这篇文章。\n\n## 基础知识\n\n### 什么是HTTP请求体\n\nHTTP请求体由三部分组成：请求行、请求头、报文体。\n\n这是一个正常的的HTTP请求\n\n![HTTP请求示例](/img/post/7/1.png)\n\n其中，第一行的①、②、③统称为请求行；报文头也称为请求头\n\n可以看到，一个正常的HTTP请求带有这些参数，接下来我将通过访问哔哩哔哩网站并抓包来详细讲解。\n\n![HTTP请求示例2](/img/post/7/2.png)\n\n在这个请求体示例中，由于是用的GET方法进行请求，GET请求方法是指：向服务器发出请求，意图从服务器下载东西。因此不含有报文体。\n\n可以看到，在我访问哔哩哔哩的`请求头`中，我使用`HTTP/1.1`协议通过`GET`方法向服务器发出请求；在`User-Agent`栏，也就是我们熟称的`浏览器UA`中可以看到，我正在使用版本号为537.36的电脑版Edge浏览器进行访问，这个浏览器的内核是`Chrome136.0.0.0`，一些手机浏览器访问电脑版网页也是通过伪造浏览器UA来实现。\n\n### 什么是`X-Forward-For`\n\n\n\n`X-Forwarded-For` 是相对通用的 HTTP 请求头。\n\n当CDN部署在最外层，HTTP 流量是经过CDN进行代理传回的，由于网络连接被CDN截胡，源站服务器无法得知真正的客户端 IP。\n\n这时代理设备（CDN）会给当前的流量加上一个 `X-Forwarded-For` 头，里面的内容就是连接这个代理的客户端 IP。\n\n下面这个例子中 HTTP 代理通过 `X-Forwarded-For` 头告诉服务器，真正的客户端地址是 `1.2.3.4`\n\n```http\nGET / HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36\nX-Forwarded-For: 1.2.3.4\n```\n\n`X-Forwarded-For` 实际上是一个链式结构。如果流量经过了多层代理设备，`X-Forwarded-For` 会记录途径的所有 IP。\n\n下面这个例子中 HTTP 代理通过 `X-Forwarded-For` 头告诉服务器，流量经过了三层代理，真正的客户端地址是 `1.2.3.4`。\n\n第一层代理的是 `11.12.13.14`，第二层代理的地址是 `21.22.23.24`，第三次代理的地址可以直接通过网络连接获取。\n\n```http\nGET / HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36\nX-Forwarded-For: 1.2.3.4, 11.12.13.14, 21.22.23.24\n```\n\n- **从网络连接中获取**: 当雷池作为最外层代理设备，无其他前置代理时选用\n- **从 `X-Forwarded-For` 中获取上一级代理的地址**：在流量到达雷池之前还有**一层**代理设备（如 Nginx，CDN 等）时可选用\n- **从 `X-Forwarded-For` 中获取上上一级代理的地址**：在流量到达雷池之前还有**两层**代理设备（如 Nginx，CDN 等）时可选用\n- **从 `X-Forwarded-For` 中获取上上上一级代理的地址**：在流量到达雷池之前还有**三层**代理设备（如 Nginx，CDN 等）时可选用\n\n- 从其他 HTTP Header 中获取\n\n  ：有几种情况\n\n  - 流量经过了一些特殊的反向代理设备，这类代理不会发送 `X-Forwarded-For` 头，但是可以通过配置，把 `IP` 通过其他头发过来\n  - 流量到达雷池有多种途径，可能有一层代理，也可能有两层代理，可以通过配置前置代理设备来统一 `HTTP` 头\n\n### 问题\n\n**`X-Forward-For`的链式结构会带来一些问题**，比如这位同学\n\n![3](/img/post/7/3.png)\n\n这位同学的CDN请求雷池的请求头中，XFF携带的ip数量不等，原因是**用户的请求头中就有残留XFF报头，有的CDN只会在XFF后面加上直接获取的ip，而不会清空重写**，这一般是用户存在代理导致的。\n\n一般来说多的前几个是代理ip，cdn添加的是直接从网络连接获取ip，不是这位同学所说的最左边才是真实ip（当然也可能是代理转发前的ip），因此可以通过从后往前读xff获取cdn从网络连接中直接获取的ip\n\n但是还有什么办法，更通俗易懂呢？\n\n### `X-Real-IP`\n\n有的同学说，X-Real-IP不会被伪造，经我测试，**在一些存在漏洞的CDN中依然可以被伪造**，例子如下\n\n第一步，我**提前在CDN之前就添加了`X-Real-IP`请求头，写入阿里云DNS 的ip`223.5.5.5`**。在雷池中配置使用X-Real-IP读取访客ip。\n\n这个请求体中包含恶意元素，将使得雷池WAF将拦截我的请求，便于我观察转发后的流量。\n\n![第一步](/img/post/7/4.png)\n\n发包后，雷池拦截\n\n![5](/img/post/7/5.png)\n\n可以看到，X-Real-IP并没有被清空重写，而是直接就这样发出去了，我CDN是有开传递X-Real-IP的。\n\n这下不得了了，此时攻击者直接变成了`223.5.5.5`（阿里云DNS的IP），并且[IP 威胁情报-长亭百川云平台](https://rivers.chaitin.cn/console/app/ip-20296/?search=223.5.5.5)甚至可以查到？！\n\n![6](/img/post/7/6.png)\n\n阿里云对不起。。。\n\n## 正片\n\n### 配置CDN\n\n在CDN控制台中，添加请求报头，报头名称你可以自定义，这里我使用`X-Real-Forwarded-For`作为我自定义的请求报头。\n\n值填`${rawRemoteAddr}`，意为CDN通过网络连接直接获取的ip地址。\n\n![7](/img/post/7/7.png)\n\n### 配置雷池\n\n{% note primary modern %}\n没有装雷池的可以直接往下看，由于自定义报头不存在链式结构，因此每一层都可以直接通过这个头获得ip。\n{% endnote %}\n\n在雷池——防护应用——高级配置中的源IP获取方式中，设置从HTTP Header中获取，值填你自定义的请求报头。\n\n![9](/img/post/7/9.png)\n\n### 配置源站\n\n在你的Nginx配置文件中加入以下配置\n\n```\nset_real_ip_from 0.0.0.0/0;\nreal_ip_header X-Real-Forwarded-For; #填你自定义的请求头 \n```\n\n\n\n**记得要在前面加两个缩进**\n\n![10](/img/post/7/10.png)\n\n然后保存\n\n## 测试\n\n对我的博客进行模拟 SQL 注入攻击**并抓包**，如何测试防护效果请翻阅雷池官方文档：[测试防护效果 | 雷池 SafeLine](https://docs.waf-ce.chaitin.cn/zh/上手指南/测试防护效果)\n\n![11](/img/post/7/11.png)\n\n可以看到被拦截了，返回了403，我们回雷池看一下日志\n\n![12](/img/post/7/12.png)\n\n可以看到被拦截，请求报文中带有我们自定义的X-Real-Forwarded-For，记录了我的真实ip。\n\n接下来我进行请求重放，在用户端就伪造这个请求头，模拟这个请求头被黑客知道了的情况\n\n{% note danger modern %}\n**一般别人不可能知道我们自定义的请求头**，因为这个请求头只在CDN和雷池（或源站）之间通信，不对外发送和开放。\n\n{% endnote %}\n\n但是为了确保严谨性，我还是进行请求重放测试\n\n![13](/img/post/7/13.png)\n\n我自己手动添加了一个自定义的请求头，模拟被黑客知道然后伪造请求头攻击的情况。\n\n可以看到被雷池BYPASS，回到雷池日志看看情况\n\n![15](/img/post/7/15.png)\n\n可以看到自定义请求头仍然被替换成了访客的真实ip，也就是说通过伪造请求头骗过源站的方式不凑效了。\n\n{% note success modern %}\n\n实现了**一头走天下**：只要代理链路不对这个头修改，任何代理链路都可以直接读取这个头获得访客ip，而不需要繁琐的配置XFF。\n\n{% endnote %}\n\n## 答疑\n\n为什么我的宝塔面板同时出现雷池和访客的ip？（如下图）\n\n![16](/img/post/7/16.png)\n\n答：因为你在雷池启用了上游服务器健康检查。\n\n解决方法：在雷池面板防护应用的应用详情中，点基本信息——基础配置右边的笔，关掉上游服务器健康检查。\n","slug":"7.利用CDN请求头获取源IP","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhaygaj000r3es356kv3960"},{"title":"雷池WAF-LTS版本安装教程","date":"2025-07-16T21:55:00.000Z","series":8,"description":"雷池是一款简单好用, 效果突出的 Web 应用防火墙(WAF)，可以保护 Web 服务不受黑客攻击。本文旨在教学雷池LTS版本的安装过程","_content":"\n雷池WAF是一款简单好用, 效果突出的 `Web 应用防火墙(WAF)`，可以保护 Web 服务不受黑客攻击，通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。本文旨在指导您完成雷池LTS版本的部署。\n\n## 环境依赖\n\n安装雷池前请确保你的系统环境符合以下要求\n\n- 操作系统：Linux\n- CPU 指令架构：x86_64, arm64\n- CPU 指令架构：x86_64 架构需要支持 ssse3 指令集\n- 软件依赖：Docker 20.10.14 版本以上\n- 软件依赖：Docker Compose 2.0.0 版本以上\n- 最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘\n\n可以根据以下命令来查看相关信息\n\n```bash\nuname -m                                    # 查看指令架构\ncat /proc/cpuinfo| grep \"processor\"         # 查看 CPU 信息\nlscpu | grep ssse3                          # 确认 CPU 是否支持 ssse3 指令集\ndocker version                              # 查看 Docker 版本\ndocker compose version                      # 查看 Docker Compose 版本\ndocker-compose version                      # 查看老版本 docker-compose 版本\nfree -h                                     # 查看内存信息\ndf -h                                       # 查看磁盘信息\n```\n\n## 安装雷池LTS版本\n\n### 根据实际情况选择安装方式\n\n- [自动安装](#自动安装)：使用一条命令自动化安装，推荐新手使用\n- [手动安装](#手动安装)：如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境\n\n## 自动安装\n\n一键安装：3 分钟即可完成自动安装。\n\n```bash\nbash -c \"$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/manager.sh)\" -- --lts\n```\n\n命令执行成功则代表雷池安装成功，现在你可以 [访问雷池控制台](#访问雷池控制台) 了\n\n## 手动安装\n\n如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境。\n\n### 创建雷池目录\n\n```bash\nmkdir -p \"/data/safeline\"\n```\n\n该命令会创建 `/data/safeline` 目录作为雷池的安装目录（你可以根据你的实际情况选择安装目录）\n\n请确保该目录至少有 5GB 的存储空间（如果日常流量较大，请保证充足的磁盘容量）\n\n### 下载 compose 编排脚本\n\n使用下方的命令进入雷池安装目录，并下载 docker compose 编排脚本\n\n```bash\ncd \"/data/safeline\"\nwget \"https://waf-ce.chaitin.cn/release/latest/compose.yaml\"\nmv compose.yaml docker-compose.yaml\n```\n\n### 配置 compose 环境变量\n\n使用下方的命令进入雷池安装目录，并创建 `.env` 配置文件\n\n```bash\ncd \"/data/safeline\"\ntouch \".env\"\n```\n\n使用文本编辑器打开 `.env` 文件，写入下方的内容，POSTGRES的密码需自定义\n\n`IMAGE_TAG`可修改成`'你需要安装的雷池LTS版本号'-lts`，这里安装`8.8.0`版本\n\n```yaml\nSAFELINE_DIR=/data/safeline\nPOSTGRES_PASSWORD=yourpassword #-------（自定义密码使用数字+英文大小写组合，勿使用特殊字符）\nMGT_PORT=9443 #强烈建议改为其他端口，否则该端口暴露公网易被扫描\nRELEASE=-lts\nCHANNEL=-lts\nREGION=\nIMAGE_PREFIX=swr.cn-east-3.myhuaweicloud.com/chaitin-safeline\nIMAGE_TAG=8.8.0-lts\nSUBNET_PREFIX=172.22.222\nARCH_SUFFIX=\n```\n\n> 如果使用的是海外服务器建议设置 `IMAGE_PREFIX=chaitin` 直接通过 [docker.io](http://docker.io/) 拉取镜像\n\n配置文件的格式说明如下：\n\n- **SAFELINE_DIR**: 雷池安装目录，如 `/data/safeline`\n- **IMAGE_TAG**: 要安装的雷池版本， 格式为`版本号-lts`\n- **MGT_PORT**: 雷池控制台的端口，建议更改为其他端口，`9443`端口容易被扫描\n\n- **POSTGRES_PASSWORD**: 雷池所需数据库的初始化密码，请随机生成一个\n- **SUBNET_PREFIX**: 雷池内部网络的网段，保持默认的 `172.22.222` 即可\n- **IMAGE_PREFIX**: 雷池镜像源的前缀，建议根据服务器地理位置选择合适的源\n- **RELEASE**: 更新通道，已配置为LTS 版本更新通道\n\n### 启动雷池\n\n现在万事具备，使用以下命令启动雷池服务\n\n```bash\ncd \"/data/safeline\"\ndocker compose up -d\n```\n\n命令执行成功则代表雷池安装成功，现在你可以 [访问雷池控制台](#访问雷池控制台) 了\n\n## 访问雷池控制台\n\n雷池安装成功以后，你可以打开浏览器访问 `https://<safeline-ip>:9443/` 来使用雷池控制台。\n\n> 请注意对9443的端口打开访问，或你手动安装时设置的端口\n\n### 登录雷池\n\n第一次登录雷池需要初始化你的管理员账户（默认会执行），如果没有找到账户密码，手动执行以下命令即可\n\n```bash\ndocker exec safeline-mgt resetadmin\n```\n\n命令执行完成后会随机重置 `admin` 账户的密码，输出结果如下\n\n```bash\n[SafeLine] Initial username：admin\n[SafeLine] Initial password：**********\n[SafeLine] Done\n```\n\n### 开始防护你的网站\n\n现在万事大吉，可以开始随心所欲使用你的雷池了，可参考[雷池 WAF 帮助文档 - 添加应用](https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3) 来防护你的网站\n\n## 参考文献\n[雷池 WAF 帮助文档 - 免费安装（推荐）](https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3) \n","source":"_posts/8.安装雷池WAF-LTS版本.md","raw":"---\ntitle: 雷池WAF-LTS版本安装教程\ndate: 2025-07-15 15:55-30\ntags:\n  - 经验\n  - Linux\n  - Ubuntu\n  - 雷池WAF\ncategories:\n  - Linux\nseries: 8\ndescription: 雷池是一款简单好用, 效果突出的 Web 应用防火墙(WAF)，可以保护 Web 服务不受黑客攻击。本文旨在教学雷池LTS版本的安装过程\n---\n\n雷池WAF是一款简单好用, 效果突出的 `Web 应用防火墙(WAF)`，可以保护 Web 服务不受黑客攻击，通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。本文旨在指导您完成雷池LTS版本的部署。\n\n## 环境依赖\n\n安装雷池前请确保你的系统环境符合以下要求\n\n- 操作系统：Linux\n- CPU 指令架构：x86_64, arm64\n- CPU 指令架构：x86_64 架构需要支持 ssse3 指令集\n- 软件依赖：Docker 20.10.14 版本以上\n- 软件依赖：Docker Compose 2.0.0 版本以上\n- 最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘\n\n可以根据以下命令来查看相关信息\n\n```bash\nuname -m                                    # 查看指令架构\ncat /proc/cpuinfo| grep \"processor\"         # 查看 CPU 信息\nlscpu | grep ssse3                          # 确认 CPU 是否支持 ssse3 指令集\ndocker version                              # 查看 Docker 版本\ndocker compose version                      # 查看 Docker Compose 版本\ndocker-compose version                      # 查看老版本 docker-compose 版本\nfree -h                                     # 查看内存信息\ndf -h                                       # 查看磁盘信息\n```\n\n## 安装雷池LTS版本\n\n### 根据实际情况选择安装方式\n\n- [自动安装](#自动安装)：使用一条命令自动化安装，推荐新手使用\n- [手动安装](#手动安装)：如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境\n\n## 自动安装\n\n一键安装：3 分钟即可完成自动安装。\n\n```bash\nbash -c \"$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/manager.sh)\" -- --lts\n```\n\n命令执行成功则代表雷池安装成功，现在你可以 [访问雷池控制台](#访问雷池控制台) 了\n\n## 手动安装\n\n如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境。\n\n### 创建雷池目录\n\n```bash\nmkdir -p \"/data/safeline\"\n```\n\n该命令会创建 `/data/safeline` 目录作为雷池的安装目录（你可以根据你的实际情况选择安装目录）\n\n请确保该目录至少有 5GB 的存储空间（如果日常流量较大，请保证充足的磁盘容量）\n\n### 下载 compose 编排脚本\n\n使用下方的命令进入雷池安装目录，并下载 docker compose 编排脚本\n\n```bash\ncd \"/data/safeline\"\nwget \"https://waf-ce.chaitin.cn/release/latest/compose.yaml\"\nmv compose.yaml docker-compose.yaml\n```\n\n### 配置 compose 环境变量\n\n使用下方的命令进入雷池安装目录，并创建 `.env` 配置文件\n\n```bash\ncd \"/data/safeline\"\ntouch \".env\"\n```\n\n使用文本编辑器打开 `.env` 文件，写入下方的内容，POSTGRES的密码需自定义\n\n`IMAGE_TAG`可修改成`'你需要安装的雷池LTS版本号'-lts`，这里安装`8.8.0`版本\n\n```yaml\nSAFELINE_DIR=/data/safeline\nPOSTGRES_PASSWORD=yourpassword #-------（自定义密码使用数字+英文大小写组合，勿使用特殊字符）\nMGT_PORT=9443 #强烈建议改为其他端口，否则该端口暴露公网易被扫描\nRELEASE=-lts\nCHANNEL=-lts\nREGION=\nIMAGE_PREFIX=swr.cn-east-3.myhuaweicloud.com/chaitin-safeline\nIMAGE_TAG=8.8.0-lts\nSUBNET_PREFIX=172.22.222\nARCH_SUFFIX=\n```\n\n> 如果使用的是海外服务器建议设置 `IMAGE_PREFIX=chaitin` 直接通过 [docker.io](http://docker.io/) 拉取镜像\n\n配置文件的格式说明如下：\n\n- **SAFELINE_DIR**: 雷池安装目录，如 `/data/safeline`\n- **IMAGE_TAG**: 要安装的雷池版本， 格式为`版本号-lts`\n- **MGT_PORT**: 雷池控制台的端口，建议更改为其他端口，`9443`端口容易被扫描\n\n- **POSTGRES_PASSWORD**: 雷池所需数据库的初始化密码，请随机生成一个\n- **SUBNET_PREFIX**: 雷池内部网络的网段，保持默认的 `172.22.222` 即可\n- **IMAGE_PREFIX**: 雷池镜像源的前缀，建议根据服务器地理位置选择合适的源\n- **RELEASE**: 更新通道，已配置为LTS 版本更新通道\n\n### 启动雷池\n\n现在万事具备，使用以下命令启动雷池服务\n\n```bash\ncd \"/data/safeline\"\ndocker compose up -d\n```\n\n命令执行成功则代表雷池安装成功，现在你可以 [访问雷池控制台](#访问雷池控制台) 了\n\n## 访问雷池控制台\n\n雷池安装成功以后，你可以打开浏览器访问 `https://<safeline-ip>:9443/` 来使用雷池控制台。\n\n> 请注意对9443的端口打开访问，或你手动安装时设置的端口\n\n### 登录雷池\n\n第一次登录雷池需要初始化你的管理员账户（默认会执行），如果没有找到账户密码，手动执行以下命令即可\n\n```bash\ndocker exec safeline-mgt resetadmin\n```\n\n命令执行完成后会随机重置 `admin` 账户的密码，输出结果如下\n\n```bash\n[SafeLine] Initial username：admin\n[SafeLine] Initial password：**********\n[SafeLine] Done\n```\n\n### 开始防护你的网站\n\n现在万事大吉，可以开始随心所欲使用你的雷池了，可参考[雷池 WAF 帮助文档 - 添加应用](https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3) 来防护你的网站\n\n## 参考文献\n[雷池 WAF 帮助文档 - 免费安装（推荐）](https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3) \n","slug":"8.安装雷池WAF-LTS版本","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhaygam000u3es37ja2ey9g","content":"<p>雷池WAF是一款简单好用, 效果突出的 <code>Web 应用防火墙(WAF)</code>，可以保护 Web 服务不受黑客攻击，通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。本文旨在指导您完成雷池LTS版本的部署。</p>\n<h2 id=\"环境依赖\">环境依赖</h2>\n<p>安装雷池前请确保你的系统环境符合以下要求</p>\n<ul>\n<li>操作系统：Linux</li>\n<li>CPU 指令架构：x86_64, arm64</li>\n<li>CPU 指令架构：x86_64 架构需要支持 ssse3 指令集</li>\n<li>软件依赖：Docker 20.10.14 版本以上</li>\n<li>软件依赖：Docker Compose 2.0.0 版本以上</li>\n<li>最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘</li>\n</ul>\n<p>可以根据以下命令来查看相关信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -m                                    <span class=\"comment\"># 查看指令架构</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/cpuinfo| grep <span class=\"string\">&quot;processor&quot;</span>         <span class=\"comment\"># 查看 CPU 信息</span></span><br><span class=\"line\">lscpu | grep ssse3                          <span class=\"comment\"># 确认 CPU 是否支持 ssse3 指令集</span></span><br><span class=\"line\">docker version                              <span class=\"comment\"># 查看 Docker 版本</span></span><br><span class=\"line\">docker compose version                      <span class=\"comment\"># 查看 Docker Compose 版本</span></span><br><span class=\"line\">docker-compose version                      <span class=\"comment\"># 查看老版本 docker-compose 版本</span></span><br><span class=\"line\">free -h                                     <span class=\"comment\"># 查看内存信息</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -h                                       <span class=\"comment\"># 查看磁盘信息</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装雷池LTS版本\">安装雷池LTS版本</h2>\n<h3 id=\"根据实际情况选择安装方式\">根据实际情况选择安装方式</h3>\n<ul>\n<li><a href=\"#%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85\">自动安装</a>：使用一条命令自动化安装，推荐新手使用</li>\n<li><a href=\"#%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85\">手动安装</a>：如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境</li>\n</ul>\n<h2 id=\"自动安装\">自动安装</h2>\n<p>一键安装：3 分钟即可完成自动安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/manager.sh)</span>&quot;</span> -- --lts</span><br></pre></td></tr></table></figure>\n<p>命令执行成功则代表雷池安装成功，现在你可以 <a href=\"#%E8%AE%BF%E9%97%AE%E9%9B%B7%E6%B1%A0%E6%8E%A7%E5%88%B6%E5%8F%B0\">访问雷池控制台</a> 了</p>\n<h2 id=\"手动安装\">手动安装</h2>\n<p>如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境。</p>\n<h3 id=\"创建雷池目录\">创建雷池目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p <span class=\"string\">&quot;/data/safeline&quot;</span></span><br></pre></td></tr></table></figure>\n<p>该命令会创建 <code>/data/safeline</code> 目录作为雷池的安装目录（你可以根据你的实际情况选择安装目录）</p>\n<p>请确保该目录至少有 5GB 的存储空间（如果日常流量较大，请保证充足的磁盘容量）</p>\n<h3 id=\"下载-compose-编排脚本\">下载 compose 编排脚本</h3>\n<p>使用下方的命令进入雷池安装目录，并下载 docker compose 编排脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;/data/safeline&quot;</span></span><br><span class=\"line\">wget <span class=\"string\">&quot;https://waf-ce.chaitin.cn/release/latest/compose.yaml&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> compose.yaml docker-compose.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-compose-环境变量\">配置 compose 环境变量</h3>\n<p>使用下方的命令进入雷池安装目录，并创建 <code>.env</code> 配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;/data/safeline&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">touch</span> <span class=\"string\">&quot;.env&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>.env</code> 文件，写入下方的内容，POSTGRES的密码需自定义</p>\n<p><code>IMAGE_TAG</code>可修改成<code>'你需要安装的雷池LTS版本号'-lts</code>，这里安装<code>8.8.0</code>版本</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">SAFELINE_DIR=/data/safeline</span></span><br><span class=\"line\"><span class=\"string\">POSTGRES_PASSWORD=yourpassword</span> <span class=\"comment\">#-------（自定义密码使用数字+英文大小写组合，勿使用特殊字符）</span></span><br><span class=\"line\"><span class=\"string\">MGT_PORT=9443</span> <span class=\"comment\">#强烈建议改为其他端口，否则该端口暴露公网易被扫描</span></span><br><span class=\"line\"><span class=\"string\">RELEASE=-lts</span></span><br><span class=\"line\"><span class=\"string\">CHANNEL=-lts</span></span><br><span class=\"line\"><span class=\"string\">REGION=</span></span><br><span class=\"line\"><span class=\"string\">IMAGE_PREFIX=swr.cn-east-3.myhuaweicloud.com/chaitin-safeline</span></span><br><span class=\"line\"><span class=\"string\">IMAGE_TAG=8.8.0-lts</span></span><br><span class=\"line\"><span class=\"string\">SUBNET_PREFIX=172.22.222</span></span><br><span class=\"line\"><span class=\"string\">ARCH_SUFFIX=</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果使用的是海外服务器建议设置 <code>IMAGE_PREFIX=chaitin</code> 直接通过 <a href=\"http://docker.io/\">docker.io</a> 拉取镜像</p>\n</blockquote>\n<p>配置文件的格式说明如下：</p>\n<ul>\n<li>\n<p><strong>SAFELINE_DIR</strong>: 雷池安装目录，如 <code>/data/safeline</code></p>\n</li>\n<li>\n<p><strong>IMAGE_TAG</strong>: 要安装的雷池版本， 格式为<code>版本号-lts</code></p>\n</li>\n<li>\n<p><strong>MGT_PORT</strong>: 雷池控制台的端口，建议更改为其他端口，<code>9443</code>端口容易被扫描</p>\n</li>\n<li>\n<p><strong>POSTGRES_PASSWORD</strong>: 雷池所需数据库的初始化密码，请随机生成一个</p>\n</li>\n<li>\n<p><strong>SUBNET_PREFIX</strong>: 雷池内部网络的网段，保持默认的 <code>172.22.222</code> 即可</p>\n</li>\n<li>\n<p><strong>IMAGE_PREFIX</strong>: 雷池镜像源的前缀，建议根据服务器地理位置选择合适的源</p>\n</li>\n<li>\n<p><strong>RELEASE</strong>: 更新通道，已配置为LTS 版本更新通道</p>\n</li>\n</ul>\n<h3 id=\"启动雷池\">启动雷池</h3>\n<p>现在万事具备，使用以下命令启动雷池服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;/data/safeline&quot;</span></span><br><span class=\"line\">docker compose up -d</span><br></pre></td></tr></table></figure>\n<p>命令执行成功则代表雷池安装成功，现在你可以 <a href=\"#%E8%AE%BF%E9%97%AE%E9%9B%B7%E6%B1%A0%E6%8E%A7%E5%88%B6%E5%8F%B0\">访问雷池控制台</a> 了</p>\n<h2 id=\"访问雷池控制台\">访问雷池控制台</h2>\n<p>雷池安装成功以后，你可以打开浏览器访问 <code>https://&lt;safeline-ip&gt;:9443/</code> 来使用雷池控制台。</p>\n<blockquote>\n<p>请注意对9443的端口打开访问，或你手动安装时设置的端口</p>\n</blockquote>\n<h3 id=\"登录雷池\">登录雷池</h3>\n<p>第一次登录雷池需要初始化你的管理员账户（默认会执行），如果没有找到账户密码，手动执行以下命令即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> safeline-mgt resetadmin</span><br></pre></td></tr></table></figure>\n<p>命令执行完成后会随机重置 <code>admin</code> 账户的密码，输出结果如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[SafeLine] Initial username：admin</span><br><span class=\"line\">[SafeLine] Initial password：**********</span><br><span class=\"line\">[SafeLine] Done</span><br></pre></td></tr></table></figure>\n<h3 id=\"开始防护你的网站\">开始防护你的网站</h3>\n<p>现在万事大吉，可以开始随心所欲使用你的雷池了，可参考<a href=\"https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3\">雷池 WAF 帮助文档 - 添加应用</a> 来防护你的网站</p>\n<h2 id=\"参考文献\">参考文献</h2>\n<p><a href=\"https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3\">雷池 WAF 帮助文档 - 免费安装（推荐）</a></p>\n","excerpt":"","more":"<p>雷池WAF是一款简单好用, 效果突出的 <code>Web 应用防火墙(WAF)</code>，可以保护 Web 服务不受黑客攻击，通过反向代理，过滤和监控 Web 应用与互联网之间的 HTTP 流量来保护 Web 服务。本文旨在指导您完成雷池LTS版本的部署。</p>\n<h2 id=\"环境依赖\">环境依赖</h2>\n<p>安装雷池前请确保你的系统环境符合以下要求</p>\n<ul>\n<li>操作系统：Linux</li>\n<li>CPU 指令架构：x86_64, arm64</li>\n<li>CPU 指令架构：x86_64 架构需要支持 ssse3 指令集</li>\n<li>软件依赖：Docker 20.10.14 版本以上</li>\n<li>软件依赖：Docker Compose 2.0.0 版本以上</li>\n<li>最低资源需求：1 核 CPU / 1 GB 内存 / 5 GB 磁盘</li>\n</ul>\n<p>可以根据以下命令来查看相关信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -m                                    <span class=\"comment\"># 查看指令架构</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/cpuinfo| grep <span class=\"string\">&quot;processor&quot;</span>         <span class=\"comment\"># 查看 CPU 信息</span></span><br><span class=\"line\">lscpu | grep ssse3                          <span class=\"comment\"># 确认 CPU 是否支持 ssse3 指令集</span></span><br><span class=\"line\">docker version                              <span class=\"comment\"># 查看 Docker 版本</span></span><br><span class=\"line\">docker compose version                      <span class=\"comment\"># 查看 Docker Compose 版本</span></span><br><span class=\"line\">docker-compose version                      <span class=\"comment\"># 查看老版本 docker-compose 版本</span></span><br><span class=\"line\">free -h                                     <span class=\"comment\"># 查看内存信息</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -h                                       <span class=\"comment\"># 查看磁盘信息</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装雷池LTS版本\">安装雷池LTS版本</h2>\n<h3 id=\"根据实际情况选择安装方式\">根据实际情况选择安装方式</h3>\n<ul>\n<li><a href=\"#%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85\">自动安装</a>：使用一条命令自动化安装，推荐新手使用</li>\n<li><a href=\"#%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85\">手动安装</a>：如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境</li>\n</ul>\n<h2 id=\"自动安装\">自动安装</h2>\n<p>一键安装：3 分钟即可完成自动安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/manager.sh)</span>&quot;</span> -- --lts</span><br></pre></td></tr></table></figure>\n<p>命令执行成功则代表雷池安装成功，现在你可以 <a href=\"#%E8%AE%BF%E9%97%AE%E9%9B%B7%E6%B1%A0%E6%8E%A7%E5%88%B6%E5%8F%B0\">访问雷池控制台</a> 了</p>\n<h2 id=\"手动安装\">手动安装</h2>\n<p>如果你熟悉 Linux 和 Docker，可以手动来配置雷池环境。</p>\n<h3 id=\"创建雷池目录\">创建雷池目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p <span class=\"string\">&quot;/data/safeline&quot;</span></span><br></pre></td></tr></table></figure>\n<p>该命令会创建 <code>/data/safeline</code> 目录作为雷池的安装目录（你可以根据你的实际情况选择安装目录）</p>\n<p>请确保该目录至少有 5GB 的存储空间（如果日常流量较大，请保证充足的磁盘容量）</p>\n<h3 id=\"下载-compose-编排脚本\">下载 compose 编排脚本</h3>\n<p>使用下方的命令进入雷池安装目录，并下载 docker compose 编排脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;/data/safeline&quot;</span></span><br><span class=\"line\">wget <span class=\"string\">&quot;https://waf-ce.chaitin.cn/release/latest/compose.yaml&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> compose.yaml docker-compose.yaml</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-compose-环境变量\">配置 compose 环境变量</h3>\n<p>使用下方的命令进入雷池安装目录，并创建 <code>.env</code> 配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;/data/safeline&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">touch</span> <span class=\"string\">&quot;.env&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用文本编辑器打开 <code>.env</code> 文件，写入下方的内容，POSTGRES的密码需自定义</p>\n<p><code>IMAGE_TAG</code>可修改成<code>'你需要安装的雷池LTS版本号'-lts</code>，这里安装<code>8.8.0</code>版本</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">SAFELINE_DIR=/data/safeline</span></span><br><span class=\"line\"><span class=\"string\">POSTGRES_PASSWORD=yourpassword</span> <span class=\"comment\">#-------（自定义密码使用数字+英文大小写组合，勿使用特殊字符）</span></span><br><span class=\"line\"><span class=\"string\">MGT_PORT=9443</span> <span class=\"comment\">#强烈建议改为其他端口，否则该端口暴露公网易被扫描</span></span><br><span class=\"line\"><span class=\"string\">RELEASE=-lts</span></span><br><span class=\"line\"><span class=\"string\">CHANNEL=-lts</span></span><br><span class=\"line\"><span class=\"string\">REGION=</span></span><br><span class=\"line\"><span class=\"string\">IMAGE_PREFIX=swr.cn-east-3.myhuaweicloud.com/chaitin-safeline</span></span><br><span class=\"line\"><span class=\"string\">IMAGE_TAG=8.8.0-lts</span></span><br><span class=\"line\"><span class=\"string\">SUBNET_PREFIX=172.22.222</span></span><br><span class=\"line\"><span class=\"string\">ARCH_SUFFIX=</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果使用的是海外服务器建议设置 <code>IMAGE_PREFIX=chaitin</code> 直接通过 <a href=\"http://docker.io/\">docker.io</a> 拉取镜像</p>\n</blockquote>\n<p>配置文件的格式说明如下：</p>\n<ul>\n<li>\n<p><strong>SAFELINE_DIR</strong>: 雷池安装目录，如 <code>/data/safeline</code></p>\n</li>\n<li>\n<p><strong>IMAGE_TAG</strong>: 要安装的雷池版本， 格式为<code>版本号-lts</code></p>\n</li>\n<li>\n<p><strong>MGT_PORT</strong>: 雷池控制台的端口，建议更改为其他端口，<code>9443</code>端口容易被扫描</p>\n</li>\n<li>\n<p><strong>POSTGRES_PASSWORD</strong>: 雷池所需数据库的初始化密码，请随机生成一个</p>\n</li>\n<li>\n<p><strong>SUBNET_PREFIX</strong>: 雷池内部网络的网段，保持默认的 <code>172.22.222</code> 即可</p>\n</li>\n<li>\n<p><strong>IMAGE_PREFIX</strong>: 雷池镜像源的前缀，建议根据服务器地理位置选择合适的源</p>\n</li>\n<li>\n<p><strong>RELEASE</strong>: 更新通道，已配置为LTS 版本更新通道</p>\n</li>\n</ul>\n<h3 id=\"启动雷池\">启动雷池</h3>\n<p>现在万事具备，使用以下命令启动雷池服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;/data/safeline&quot;</span></span><br><span class=\"line\">docker compose up -d</span><br></pre></td></tr></table></figure>\n<p>命令执行成功则代表雷池安装成功，现在你可以 <a href=\"#%E8%AE%BF%E9%97%AE%E9%9B%B7%E6%B1%A0%E6%8E%A7%E5%88%B6%E5%8F%B0\">访问雷池控制台</a> 了</p>\n<h2 id=\"访问雷池控制台\">访问雷池控制台</h2>\n<p>雷池安装成功以后，你可以打开浏览器访问 <code>https://&lt;safeline-ip&gt;:9443/</code> 来使用雷池控制台。</p>\n<blockquote>\n<p>请注意对9443的端口打开访问，或你手动安装时设置的端口</p>\n</blockquote>\n<h3 id=\"登录雷池\">登录雷池</h3>\n<p>第一次登录雷池需要初始化你的管理员账户（默认会执行），如果没有找到账户密码，手动执行以下命令即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> safeline-mgt resetadmin</span><br></pre></td></tr></table></figure>\n<p>命令执行完成后会随机重置 <code>admin</code> 账户的密码，输出结果如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[SafeLine] Initial username：admin</span><br><span class=\"line\">[SafeLine] Initial password：**********</span><br><span class=\"line\">[SafeLine] Done</span><br></pre></td></tr></table></figure>\n<h3 id=\"开始防护你的网站\">开始防护你的网站</h3>\n<p>现在万事大吉，可以开始随心所欲使用你的雷池了，可参考<a href=\"https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3\">雷池 WAF 帮助文档 - 添加应用</a> 来防护你的网站</p>\n<h2 id=\"参考文献\">参考文献</h2>\n<p><a href=\"https://help.waf-ce.chaitin.cn/node/01973fc6-e14a-7234-8acd-bdba21c8b3f3\">雷池 WAF 帮助文档 - 免费安装（推荐）</a></p>\n"},{"title":"给自己的服务器自签SSL/TLS证书用于内网通信","date":"2025-07-16T02:35:20.000Z","series":9,"description":"使用EC384-SHA384算法为内网服务器自签SSL/TLS证书。包含创建CA、服务器密钥和证书的完整步骤，支持多域名/IP配置。","_content":"\n\n\n\n\n在这个教程中，我们将使用EC384-SHA384自签SSL证书\n\n## 第一步 创建CA私钥\n\n```bash\nopenssl ecparam -genkey -name secp384r1 -out ca.key\n```\n\n## 第二步 删除私钥中的部分内容\n\n```\n# 删去这段内容\n-----BEGIN EC PARAMETERS-----\nBgXXXXXXX==\n-----END EC PARAMETERS-----\n```\n\n## 第三步 生成CA公钥\n\n```\nopenssl req -x509 -new -key ca.key -out ca.crt -days 3650 \\\n  -subj \"/C=CN/ST=Beijing/L=Beijing/O=MyOrganization/OU=IT Department/CN=My Root CA\"\n```\n\n参数说明（按需修改）：\n\nC：国家代码（如CN/US）\n\nST：省份(可不填）\n\nL：城市（可不填）\n\nO：组织名称（必填）\n\nOU：部门名称（必填）\n\nCN：CA标识（必填，建议包含\"CA\"字样）\n\n## 第四步 生成服务器端私钥\n\n```\nopenssl ecparam -genkey -name secp384r1 -out server.key\n```\n\n## 第五步 创建server.cnf\n\n```\n[ req ]\ndefault_bits        = 384\nprompt              = no\ndefault_md          = sha384\ndistinguished_name  = req_distinguished_name\nreq_extensions      = v3_req\n\n[ req_distinguished_name ]\nC  = CN\nST = Beijing\nL  = Beijing\nO  = MyOrganization\nOU = Web Services\nCN = myserver.com #主名称，如example.com，如127.0.0.1\n\n[ v3_req ]\nsubjectAltName = @alt_names\n\n[ alt_names ] # 备用名称 如*.example.com，如127.0.0.2，\nDNS.1 = myserver.com\nDNS.2 = www.myserver.com\nIP.1  = 192.168.1.100\n# 添加更多域名/IP ↓\n# DNS.3 = api.myserver.com\n# IP.2  = 10.0.0.200\n```\n\n## 第六步 生成CSR\n\n```\nopenssl req -new -key server.key -out server.csr -config server.cnf\n```\n\n## 第七步 签发服务器端证书（公钥）\n\n```\nopenssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\\n  -out server.crt -days 365 -sha384 -extfile server.cnf -extensions v3_req\n```\n\n此时，`ca.crt`是你的CA根证书公钥，`ca.key`是你的根证书私钥\n`service.crt`是你的服务器证书公钥，`service.key`是你的服务器证书私钥","source":"_posts/9.证书自签.md","raw":"---\ntitle: 给自己的服务器自签SSL/TLS证书用于内网通信\ndate: 2025-07-16 10:35:20\ntags:\n  - 经验\n  - Linux\ncategories:\n  - Linux\nseries: 9\ndescription: 使用EC384-SHA384算法为内网服务器自签SSL/TLS证书。包含创建CA、服务器密钥和证书的完整步骤，支持多域名/IP配置。\n---\n\n\n\n\n\n在这个教程中，我们将使用EC384-SHA384自签SSL证书\n\n## 第一步 创建CA私钥\n\n```bash\nopenssl ecparam -genkey -name secp384r1 -out ca.key\n```\n\n## 第二步 删除私钥中的部分内容\n\n```\n# 删去这段内容\n-----BEGIN EC PARAMETERS-----\nBgXXXXXXX==\n-----END EC PARAMETERS-----\n```\n\n## 第三步 生成CA公钥\n\n```\nopenssl req -x509 -new -key ca.key -out ca.crt -days 3650 \\\n  -subj \"/C=CN/ST=Beijing/L=Beijing/O=MyOrganization/OU=IT Department/CN=My Root CA\"\n```\n\n参数说明（按需修改）：\n\nC：国家代码（如CN/US）\n\nST：省份(可不填）\n\nL：城市（可不填）\n\nO：组织名称（必填）\n\nOU：部门名称（必填）\n\nCN：CA标识（必填，建议包含\"CA\"字样）\n\n## 第四步 生成服务器端私钥\n\n```\nopenssl ecparam -genkey -name secp384r1 -out server.key\n```\n\n## 第五步 创建server.cnf\n\n```\n[ req ]\ndefault_bits        = 384\nprompt              = no\ndefault_md          = sha384\ndistinguished_name  = req_distinguished_name\nreq_extensions      = v3_req\n\n[ req_distinguished_name ]\nC  = CN\nST = Beijing\nL  = Beijing\nO  = MyOrganization\nOU = Web Services\nCN = myserver.com #主名称，如example.com，如127.0.0.1\n\n[ v3_req ]\nsubjectAltName = @alt_names\n\n[ alt_names ] # 备用名称 如*.example.com，如127.0.0.2，\nDNS.1 = myserver.com\nDNS.2 = www.myserver.com\nIP.1  = 192.168.1.100\n# 添加更多域名/IP ↓\n# DNS.3 = api.myserver.com\n# IP.2  = 10.0.0.200\n```\n\n## 第六步 生成CSR\n\n```\nopenssl req -new -key server.key -out server.csr -config server.cnf\n```\n\n## 第七步 签发服务器端证书（公钥）\n\n```\nopenssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\\n  -out server.crt -days 365 -sha384 -extfile server.cnf -extensions v3_req\n```\n\n此时，`ca.crt`是你的CA根证书公钥，`ca.key`是你的根证书私钥\n`service.crt`是你的服务器证书公钥，`service.key`是你的服务器证书私钥","slug":"9.证书自签","published":1,"updated":"2025-09-09T05:36:04.100Z","comments":1,"layout":"post","photos":[],"_id":"cmfhaygaw000z3es36o9zey1l","content":"<p>在这个教程中，我们将使用EC384-SHA384自签SSL证书</p>\n<h2 id=\"第一步-创建CA私钥\">第一步 创建CA私钥</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl ecparam -genkey -name secp384r1 -out ca.key</span><br></pre></td></tr></table></figure>\n<h2 id=\"第二步-删除私钥中的部分内容\">第二步 删除私钥中的部分内容</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 删去这段内容</span><br><span class=\"line\">-----BEGIN EC PARAMETERS-----</span><br><span class=\"line\">BgXXXXXXX==</span><br><span class=\"line\">-----END EC PARAMETERS-----</span><br></pre></td></tr></table></figure>\n<h2 id=\"第三步-生成CA公钥\">第三步 生成CA公钥</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -new -key ca.key -out ca.crt -days 3650 \\</span><br><span class=\"line\">  -subj &quot;/C=CN/ST=Beijing/L=Beijing/O=MyOrganization/OU=IT Department/CN=My Root CA&quot;</span><br></pre></td></tr></table></figure>\n<p>参数说明（按需修改）：</p>\n<p>C：国家代码（如CN/US）</p>\n<p>ST：省份(可不填）</p>\n<p>L：城市（可不填）</p>\n<p>O：组织名称（必填）</p>\n<p>OU：部门名称（必填）</p>\n<p>CN：CA标识（必填，建议包含&quot;CA&quot;字样）</p>\n<h2 id=\"第四步-生成服务器端私钥\">第四步 生成服务器端私钥</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl ecparam -genkey -name secp384r1 -out server.key</span><br></pre></td></tr></table></figure>\n<h2 id=\"第五步-创建server-cnf\">第五步 创建server.cnf</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ req ]</span><br><span class=\"line\">default_bits        = 384</span><br><span class=\"line\">prompt              = no</span><br><span class=\"line\">default_md          = sha384</span><br><span class=\"line\">distinguished_name  = req_distinguished_name</span><br><span class=\"line\">req_extensions      = v3_req</span><br><span class=\"line\"></span><br><span class=\"line\">[ req_distinguished_name ]</span><br><span class=\"line\">C  = CN</span><br><span class=\"line\">ST = Beijing</span><br><span class=\"line\">L  = Beijing</span><br><span class=\"line\">O  = MyOrganization</span><br><span class=\"line\">OU = Web Services</span><br><span class=\"line\">CN = myserver.com #主名称，如example.com，如127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">[ v3_req ]</span><br><span class=\"line\">subjectAltName = @alt_names</span><br><span class=\"line\"></span><br><span class=\"line\">[ alt_names ] # 备用名称 如*.example.com，如127.0.0.2，</span><br><span class=\"line\">DNS.1 = myserver.com</span><br><span class=\"line\">DNS.2 = www.myserver.com</span><br><span class=\"line\">IP.1  = 192.168.1.100</span><br><span class=\"line\"># 添加更多域名/IP ↓</span><br><span class=\"line\"># DNS.3 = api.myserver.com</span><br><span class=\"line\"># IP.2  = 10.0.0.200</span><br></pre></td></tr></table></figure>\n<h2 id=\"第六步-生成CSR\">第六步 生成CSR</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -new -key server.key -out server.csr -config server.cnf</span><br></pre></td></tr></table></figure>\n<h2 id=\"第七步-签发服务器端证书（公钥）\">第七步 签发服务器端证书（公钥）</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\</span><br><span class=\"line\">  -out server.crt -days 365 -sha384 -extfile server.cnf -extensions v3_req</span><br></pre></td></tr></table></figure>\n<p>此时，<code>ca.crt</code>是你的CA根证书公钥，<code>ca.key</code>是你的根证书私钥<br>\n<code>service.crt</code>是你的服务器证书公钥，<code>service.key</code>是你的服务器证书私钥</p>\n","excerpt":"","more":"<p>在这个教程中，我们将使用EC384-SHA384自签SSL证书</p>\n<h2 id=\"第一步-创建CA私钥\">第一步 创建CA私钥</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl ecparam -genkey -name secp384r1 -out ca.key</span><br></pre></td></tr></table></figure>\n<h2 id=\"第二步-删除私钥中的部分内容\">第二步 删除私钥中的部分内容</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 删去这段内容</span><br><span class=\"line\">-----BEGIN EC PARAMETERS-----</span><br><span class=\"line\">BgXXXXXXX==</span><br><span class=\"line\">-----END EC PARAMETERS-----</span><br></pre></td></tr></table></figure>\n<h2 id=\"第三步-生成CA公钥\">第三步 生成CA公钥</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -new -key ca.key -out ca.crt -days 3650 \\</span><br><span class=\"line\">  -subj &quot;/C=CN/ST=Beijing/L=Beijing/O=MyOrganization/OU=IT Department/CN=My Root CA&quot;</span><br></pre></td></tr></table></figure>\n<p>参数说明（按需修改）：</p>\n<p>C：国家代码（如CN/US）</p>\n<p>ST：省份(可不填）</p>\n<p>L：城市（可不填）</p>\n<p>O：组织名称（必填）</p>\n<p>OU：部门名称（必填）</p>\n<p>CN：CA标识（必填，建议包含&quot;CA&quot;字样）</p>\n<h2 id=\"第四步-生成服务器端私钥\">第四步 生成服务器端私钥</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl ecparam -genkey -name secp384r1 -out server.key</span><br></pre></td></tr></table></figure>\n<h2 id=\"第五步-创建server-cnf\">第五步 创建server.cnf</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ req ]</span><br><span class=\"line\">default_bits        = 384</span><br><span class=\"line\">prompt              = no</span><br><span class=\"line\">default_md          = sha384</span><br><span class=\"line\">distinguished_name  = req_distinguished_name</span><br><span class=\"line\">req_extensions      = v3_req</span><br><span class=\"line\"></span><br><span class=\"line\">[ req_distinguished_name ]</span><br><span class=\"line\">C  = CN</span><br><span class=\"line\">ST = Beijing</span><br><span class=\"line\">L  = Beijing</span><br><span class=\"line\">O  = MyOrganization</span><br><span class=\"line\">OU = Web Services</span><br><span class=\"line\">CN = myserver.com #主名称，如example.com，如127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">[ v3_req ]</span><br><span class=\"line\">subjectAltName = @alt_names</span><br><span class=\"line\"></span><br><span class=\"line\">[ alt_names ] # 备用名称 如*.example.com，如127.0.0.2，</span><br><span class=\"line\">DNS.1 = myserver.com</span><br><span class=\"line\">DNS.2 = www.myserver.com</span><br><span class=\"line\">IP.1  = 192.168.1.100</span><br><span class=\"line\"># 添加更多域名/IP ↓</span><br><span class=\"line\"># DNS.3 = api.myserver.com</span><br><span class=\"line\"># IP.2  = 10.0.0.200</span><br></pre></td></tr></table></figure>\n<h2 id=\"第六步-生成CSR\">第六步 生成CSR</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -new -key server.key -out server.csr -config server.cnf</span><br></pre></td></tr></table></figure>\n<h2 id=\"第七步-签发服务器端证书（公钥）\">第七步 签发服务器端证书（公钥）</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\</span><br><span class=\"line\">  -out server.crt -days 365 -sha384 -extfile server.cnf -extensions v3_req</span><br></pre></td></tr></table></figure>\n<p>此时，<code>ca.crt</code>是你的CA根证书公钥，<code>ca.key</code>是你的根证书私钥<br>\n<code>service.crt</code>是你的服务器证书公钥，<code>service.key</code>是你的服务器证书私钥</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmfhayg8x00013es3boxu7s1p","category_id":"cmfhayg9e00043es3038q15ig","_id":"cmfhayga6000i3es3cmbt697y"},{"post_id":"cmfhayga1000f3es3d3o8cvgm","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygaf000n3es3dorf7hn3"},{"post_id":"cmfhayg9900033es366d1fmol","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygal000s3es3fna7cimm"},{"post_id":"cmfhayga5000h3es32rb786pd","category_id":"cmfhayg9e00043es3038q15ig","_id":"cmfhaygan000v3es3741j1d22"},{"post_id":"cmfhaygab000l3es3hykf6sus","category_id":"cmfhayg9e00043es3038q15ig","_id":"cmfhaygay00103es35xmedzzm"},{"post_id":"cmfhayg9n00073es3hi3u7bwq","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygaz00123es3a9v8953m"},{"post_id":"cmfhaygad000m3es3cw7f3p91","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygb000143es3htg3gms3"},{"post_id":"cmfhaygaj000r3es356kv3960","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygb100163es34t6gdplx"},{"post_id":"cmfhayg9s00093es34pvegrt7","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygb100173es370mlczlm"},{"post_id":"cmfhaygam000u3es37ja2ey9g","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygb200193es34tssdcv8"},{"post_id":"cmfhaygaw000z3es36o9zey1l","category_id":"cmfhayg9y000c3es3cpdm6f0l","_id":"cmfhaygb2001a3es3gdi1eje6"},{"post_id":"cmfhayg9w000b3es3et50cuqj","category_id":"cmfhaygau000w3es355566s1b","_id":"cmfhaygb3001c3es30xyw1cwu"}],"PostTag":[{"post_id":"cmfhaygab000l3es3hykf6sus","tag_id":"cmfhayg9k00053es37nju4iz4","_id":"cmfhaygai000q3es3fbd8d12l"},{"post_id":"cmfhaygab000l3es3hykf6sus","tag_id":"cmfhayga7000k3es35mea4wv3","_id":"cmfhaygal000t3es33mulamrm"},{"post_id":"cmfhayg8x00013es3boxu7s1p","tag_id":"cmfhayg9k00053es37nju4iz4","_id":"cmfhaygav000x3es374hbb6c3"},{"post_id":"cmfhayg8x00013es3boxu7s1p","tag_id":"cmfhayg9z000d3es370ie41vn","_id":"cmfhaygay00113es3ebpy44gs"},{"post_id":"cmfhayg8x00013es3boxu7s1p","tag_id":"cmfhayga7000k3es35mea4wv3","_id":"cmfhaygb000133es32xgp2z09"},{"post_id":"cmfhayg9900033es366d1fmol","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygb4001d3es399ehdxft"},{"post_id":"cmfhayg9900033es366d1fmol","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygb4001e3es3fhe77yzp"},{"post_id":"cmfhayg9900033es366d1fmol","tag_id":"cmfhaygb000153es3bl1e5zfz","_id":"cmfhaygb5001g3es3e06u0j0t"},{"post_id":"cmfhayg9900033es366d1fmol","tag_id":"cmfhaygb100183es3d6p28w5o","_id":"cmfhaygb6001h3es3ft2s0s6b"},{"post_id":"cmfhayg9n00073es3hi3u7bwq","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygb8001k3es3hzibek31"},{"post_id":"cmfhayg9n00073es3hi3u7bwq","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygb9001l3es31jcg1zsn"},{"post_id":"cmfhayg9n00073es3hi3u7bwq","tag_id":"cmfhaygb6001i3es36xmsgudx","_id":"cmfhaygba001n3es3cw8t012b"},{"post_id":"cmfhayg9s00093es34pvegrt7","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygbc001q3es31v5afton"},{"post_id":"cmfhayg9s00093es34pvegrt7","tag_id":"cmfhaygb9001m3es30u2nbkzo","_id":"cmfhaygbd001r3es32vdggq1v"},{"post_id":"cmfhayg9s00093es34pvegrt7","tag_id":"cmfhayga7000k3es35mea4wv3","_id":"cmfhaygbd001t3es31kzvff7c"},{"post_id":"cmfhayg9w000b3es3et50cuqj","tag_id":"cmfhaygbb001p3es3h8t00s3d","_id":"cmfhaygbe001u3es35qct6mis"},{"post_id":"cmfhayga1000f3es3d3o8cvgm","tag_id":"cmfhaygbd001s3es3a0gm9c1m","_id":"cmfhaygbf001x3es3ahu4g5sj"},{"post_id":"cmfhayga1000f3es3d3o8cvgm","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygbf001y3es36r5m6cqn"},{"post_id":"cmfhayga5000h3es32rb786pd","tag_id":"cmfhayg9k00053es37nju4iz4","_id":"cmfhaygbg00203es36sbw4hr6"},{"post_id":"cmfhayga5000h3es32rb786pd","tag_id":"cmfhayg9z000d3es370ie41vn","_id":"cmfhaygbg00213es3hb3lhddz"},{"post_id":"cmfhayga5000h3es32rb786pd","tag_id":"cmfhayga7000k3es35mea4wv3","_id":"cmfhaygbh00233es3gdn64510"},{"post_id":"cmfhaygad000m3es3cw7f3p91","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygbi00263es3ev3mehi6"},{"post_id":"cmfhaygad000m3es3cw7f3p91","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygbi00273es3dpq31nn5"},{"post_id":"cmfhaygad000m3es3cw7f3p91","tag_id":"cmfhaygb9001m3es30u2nbkzo","_id":"cmfhaygbj00293es3a4fddepx"},{"post_id":"cmfhaygaj000r3es356kv3960","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygbk002c3es31yrd0t4v"},{"post_id":"cmfhaygaj000r3es356kv3960","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygbk002d3es37pdzhn63"},{"post_id":"cmfhaygaj000r3es356kv3960","tag_id":"cmfhaygb9001m3es30u2nbkzo","_id":"cmfhaygbl002f3es3gus29zo2"},{"post_id":"cmfhaygaj000r3es356kv3960","tag_id":"cmfhaygb000153es3bl1e5zfz","_id":"cmfhaygbl002g3es325ztgyab"},{"post_id":"cmfhaygam000u3es37ja2ey9g","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygbm002j3es3hz3id21n"},{"post_id":"cmfhaygam000u3es37ja2ey9g","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygbm002k3es3bab85gr4"},{"post_id":"cmfhaygam000u3es37ja2ey9g","tag_id":"cmfhaygb9001m3es30u2nbkzo","_id":"cmfhaygbm002l3es30f0y6jrv"},{"post_id":"cmfhaygam000u3es37ja2ey9g","tag_id":"cmfhaygb000153es3bl1e5zfz","_id":"cmfhaygbm002m3es343xp0tz7"},{"post_id":"cmfhaygaw000z3es36o9zey1l","tag_id":"cmfhaygav000y3es37ml1e3gf","_id":"cmfhaygbn002n3es3gxokdmfl"},{"post_id":"cmfhaygaw000z3es36o9zey1l","tag_id":"cmfhaygah000p3es3csk3h3pk","_id":"cmfhaygbn002o3es3fyojeeds"}],"Tag":[{"name":"Hexo","_id":"cmfhayg9k00053es37nju4iz4"},{"name":"Butterfly","_id":"cmfhayg9z000d3es370ie41vn"},{"name":"教程","_id":"cmfhayga7000k3es35mea4wv3"},{"name":"Linux","_id":"cmfhaygah000p3es3csk3h3pk"},{"name":"经验","_id":"cmfhaygav000y3es37ml1e3gf"},{"name":"雷池WAF","_id":"cmfhaygb000153es3bl1e5zfz"},{"name":"建站","_id":"cmfhaygb100183es3d6p28w5o"},{"name":"Matrix","_id":"cmfhaygb6001i3es36xmsgudx"},{"name":"Ubuntu","_id":"cmfhaygb9001m3es30u2nbkzo"},{"name":"整活","_id":"cmfhaygbb001p3es3h8t00s3d"},{"name":"Kali","_id":"cmfhaygbd001s3es3a0gm9c1m"}]}}